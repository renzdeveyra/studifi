type StudiFiError = variant {
  NotFound : text;
  AlreadyExists : text;
  Unauthorized : text;
  InvalidInput : text;
  InternalError : text;
  InsufficientFunds : text;
  Expired : text;
  NetworkError : text;
};

type StudiFiResult = variant {
  Ok : LoanApplication;
  Err : StudiFiError;
};

type StudiFiResultTerms = variant {
  Ok : LoanTerms;
  Err : StudiFiError;
};

type StudiFiResultUnit = variant {
  Ok;
  Err : StudiFiError;
};

type LoanPurpose = variant {
  Tuition;
  BooksAndSupplies;
  LivingExpenses;
  Technology;
  Research;
  StudyAbroad;
  Emergency;
  Other : text;
};

type EmploymentStatus = variant {
  Unemployed;
  PartTime;
  FullTime;
  Internship;
  Fellowship;
  TeachingAssistant;
  ResearchAssistant;
};

type ApplicationStatus = variant {
  Submitted;
  UnderReview;
  RequiresDocuments;
  Approved;
  Rejected;
  Withdrawn;
  Expired;
};

type RiskLevel = variant {
  VeryLow;
  Low;
  Medium;
  High;
  VeryHigh;
};

type AcademicInfo = record {
  gpa : float64;
  year_of_study : nat32;
  program : text;
  university : text;
  expected_graduation : text;
  major : opt text;
  minor : opt text;
  honors : vec text;
  extracurricular : vec text;
  previous_degrees : vec text;
};

type LoanStatus = variant {
  Current;
  Late;
  Default;
  PaidOff;
  Deferred;
};

type PreviousLoan = record {
  loan_type : text;
  original_amount : nat64;
  remaining_balance : nat64;
  monthly_payment : nat64;
  status : LoanStatus;
  on_time_payments : nat32;
  late_payments : nat32;
};

type FinancialAid = record {
  aid_type : text;
  amount : nat64;
  renewable : bool;
  requirements : text;
};

type FinancialInfo = record {
  monthly_income : nat64;
  monthly_expenses : nat64;
  existing_debt : nat64;
  family_income : nat64;
  savings : nat64;
  employment_status : EmploymentStatus;
  credit_history_length_months : nat32;
  previous_loans : vec PreviousLoan;
  financial_aid : vec FinancialAid;
};

type CreditScore = record {
  score : nat32;
  risk_level : RiskLevel;
  confidence : float64;
  calculated_at : nat64;
  version : text;
};

type LoanTerms = record {
  approved_amount : nat64;
  interest_rate : float64;
  term_months : nat32;
  monthly_payment : nat64;
  grace_period_months : nat32;
  origination_fee : nat64;
  prepayment_penalty : bool;
  cosigner_required : bool;
  collateral_required : bool;
  special_conditions : vec text;
};

type LoanApplication = record {
  id : text;
  student_id : principal;
  requested_amount : nat64;
  purpose : LoanPurpose;
  academic_info : AcademicInfo;
  financial_info : FinancialInfo;
  status : ApplicationStatus;
  credit_score : opt CreditScore;
  loan_terms : opt LoanTerms;
  created_at : nat64;
  processed_at : opt nat64;
  notes : vec text;
};

type ApplicationStats = record {
  total_applications : nat32;
  approved_applications : nat32;
  rejected_applications : nat32;
  pending_applications : nat32;
  average_credit_score : float64;
  average_approved_amount : nat64;
  average_processing_time_hours : float64;
  approval_rate : float64;
};

type ApplicationFilters = record {
  status : opt ApplicationStatus;
  min_amount : opt nat64;
  max_amount : opt nat64;
  university : opt text;
  program : opt text;
  risk_level : opt RiskLevel;
  date_from : opt nat64;
  date_to : opt nat64;
};

type PaginationParams = record {
  offset : nat32;
  limit : nat32;
};

type PaginatedResponse = record {
  items : vec LoanApplication;
  total_count : nat32;
  offset : nat32;
  limit : nat32;
  has_more : bool;
};

type ScoringConfig = record {
  academic_weight : float64;
  financial_weight : float64;
  program_weight : float64;
  progress_weight : float64;
  historical_weight : float64;
  minimum_score_for_approval : nat32;
  maximum_loan_to_income_ratio : float64;
};

type Statistics = record {
  total_count : nat32;
  active_count : nat32;
  completed_count : nat32;
  failed_count : nat32;
  total_amount : nat64;
  average_amount : nat64;
};

service : {
  // Core application functions
  submit_loan_application : (nat64, LoanPurpose, AcademicInfo, FinancialInfo) -> (StudiFiResult);
  process_application : (text) -> (StudiFiResult);
  get_application : (text) -> (opt LoanApplication) query;
  get_my_applications : () -> (vec LoanApplication) query;
  
  // Credit scoring
  get_credit_score : (principal) -> (opt CreditScore) query;
  generate_loan_terms : (nat64, nat32, LoanPurpose) -> (StudiFiResultTerms) query;
  
  // Analytics and reporting
  get_application_stats : () -> (ApplicationStats) query;
  search_applications : (ApplicationFilters, opt PaginationParams) -> (PaginatedResponse) query;
  get_platform_stats : () -> (Statistics) query;
  
  // Configuration
  update_scoring_config : (ScoringConfig) -> (StudiFiResultUnit);
  get_scoring_config : () -> (ScoringConfig) query;
}
