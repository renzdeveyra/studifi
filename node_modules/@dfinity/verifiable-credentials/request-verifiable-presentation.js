var w="useandom-26T198340PX75pxJACKVERYMINDBUSHWOLF_GQZbfghjklqvwyzrict";var m=(e=21)=>{let i="",s=crypto.getRandomValues(new Uint8Array(e));for(;e--;)i+=w[s[e]&63];return i};var C="request_credential",x="vc-flow-ready",y="2.0",d=new Map,O=()=>m(),r=new Map,P=500,S="UserInterrupt",I=({issuerData:e,derivationOrigin:i,credentialData:{credentialSpec:s,credentialSubject:c},nextFlowId:g})=>({id:g,jsonrpc:y,method:C,params:{issuer:{origin:e.origin,canisterId:e.canisterId?.toText()},credentialSpec:s,credentialSubject:c.toText(),derivationOrigin:i}}),N=e=>{if(e.data?.error!==void 0)return{Err:e.data.error};let i=e.data?.result?.verifiablePresentation;if(i===void 0)throw new Error(`Key 'verifiablePresentation' not found in the message data: ${JSON.stringify(e.data)}`);return{Ok:i}},v=e=>e.data?.jsonrpc===y,T=({evnt:e,flowId:i})=>e.data?.method===x&&r.get(i)==="initialized",U=({evnt:e,flowId:i})=>r.get(e.data?.id)==="ongoing"&&e.data?.id===i,q=({onSuccess:e,onError:i,credentialData:s,issuerData:c,windowOpenerFeatures:g,derivationOrigin:b,identityProvider:p})=>{let E=n=>t=>{let l;try{l=new URL(t.origin)}catch{console.warn(`WARNING: expected origin to be URL, got '${t.origin} instead' (ignoring)`);return}if(l?.origin!==p.origin){console.warn(`WARNING: expected origin '${p}', got '${l.origin}' (ignoring)`);return}if(!v(t)){console.warn(`WARNING: expected JSON-RPC message, got '${JSON.stringify(t.data)}' (ignoring)`);return}if(T({evnt:t,flowId:n})){r.set(n,"started");let a=I({derivationOrigin:b,issuerData:c,credentialData:s,nextFlowId:n});t.source?.postMessage(a,{targetOrigin:l.origin}),r.set(o,"ongoing");return}if(U({evnt:t,flowId:n})){try{r.set(t.data.id,"finalized");let a=N(t);e(a)}catch(a){let h=a instanceof Error?a.message:JSON.stringify(a);i(`Error getting the verifiable credential: ${h}`)}finally{r.delete(n),d.get(n)?.close(),d.delete(n),window.removeEventListener("message",u)}return}console.warn(`WARNING: unexpected message: ${JSON.stringify(t.data)} (ignoring)`)},o=O();r.set(o,"initialized");let u=E(o);window.addEventListener("message",u);let R;try{R=new URL(p)}catch{i("The parameter `identityProvider` must be a valid URL.");return}R.pathname="vc-flow/";let f=window.open(R,"idpWindow",g);if(f!==null){d.set(o,f);let n=t=>{f.closed&&r.has(t)&&r.get(t)!=="finalized"?(r.delete(t),d.delete(t),window.removeEventListener("message",u),i(S)):d.has(t)&&setTimeout(()=>n(t),P)};n(o)}};export{S as ERROR_USER_INTERRUPT,q as requestVerifiablePresentation};
//# sourceMappingURL=request-verifiable-presentation.js.map
