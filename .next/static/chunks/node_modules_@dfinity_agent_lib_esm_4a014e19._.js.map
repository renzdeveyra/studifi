{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"file":"api.js","sourceRoot":"","sources":["file:///home/brimzy/.dev/studifi/node_modules/%40dfinity/agent/src/agent/api.ts"],"sourcesContent":["import { Principal } from '@dfinity/principal';\nimport { RequestId } from '../request_id';\nimport { JsonObject } from '@dfinity/candid';\nimport { Identity } from '../auth';\nimport { CallRequest, HttpHeaderField, QueryRequest } from './http/types';\n\n/**\n * Codes used by the replica for rejecting a message.\n * See {@link https://sdk.dfinity.org/docs/interface-spec/#reject-codes | the interface spec}.\n */\nexport enum ReplicaRejectCode {\n  SysFatal = 1,\n  SysTransient = 2,\n  DestinationInvalid = 3,\n  CanisterReject = 4,\n  CanisterError = 5,\n}\n\n/**\n * Options when doing a {@link Agent.readState} call.\n */\nexport interface ReadStateOptions {\n  /**\n   * A list of paths to read the state of.\n   */\n  paths: ArrayBuffer[][];\n}\n\n/**\n *\n */\nexport type QueryResponse = QueryResponseReplied | QueryResponseRejected;\n\nexport const enum QueryResponseStatus {\n  Replied = 'replied',\n  Rejected = 'rejected',\n}\n\nexport interface HttpDetailsResponse {\n  ok: boolean;\n  status: number;\n  statusText: string;\n  headers: HttpHeaderField[];\n}\n\nexport type ApiQueryResponse = QueryResponse & {\n  httpDetails: HttpDetailsResponse;\n  requestId: RequestId;\n};\n\nexport interface QueryResponseBase {\n  status: QueryResponseStatus;\n  requestDetails?: QueryRequest;\n}\n\nexport type NodeSignature = {\n  // the batch time\n  timestamp: bigint;\n  // the signature\n  signature: Uint8Array;\n  // the ID of the node that created the signature\n  identity: Uint8Array;\n};\n\nexport interface QueryResponseReplied extends QueryResponseBase {\n  status: QueryResponseStatus.Replied;\n  reply: { arg: ArrayBuffer };\n  signatures?: NodeSignature[];\n}\n\nexport interface QueryResponseRejected extends QueryResponseBase {\n  status: QueryResponseStatus.Rejected;\n  reject_code: ReplicaRejectCode;\n  reject_message: string;\n  error_code: string;\n  signatures?: NodeSignature[];\n}\n\n/**\n * Options when doing a {@link Agent.query} call.\n */\nexport interface QueryFields {\n  /**\n   * The method name to call.\n   */\n  methodName: string;\n\n  /**\n   * A binary encoded argument. This is already encoded and will be sent as is.\n   */\n  arg: ArrayBuffer;\n\n  /**\n   * Overrides canister id for path to fetch. This is used for management canister calls.\n   */\n  effectiveCanisterId?: Principal;\n}\n\n/**\n * Options when doing a {@link Agent.call} call.\n */\nexport interface CallOptions {\n  /**\n   * The method name to call.\n   */\n  methodName: string;\n\n  /**\n   * A binary encoded argument. This is already encoded and will be sent as is.\n   */\n  arg: ArrayBuffer;\n\n  /**\n   * An effective canister ID, used for routing. Usually the canister ID, except for management canister calls.\n   * @see https://internetcomputer.org/docs/current/references/ic-interface-spec/#http-effective-canister-id\n   */\n  effectiveCanisterId: Principal | string;\n}\n\nexport interface ReadStateResponse {\n  certificate: ArrayBuffer;\n}\n\nexport interface v2ResponseBody {\n  error_code?: string;\n  reject_code: number;\n  reject_message: string;\n}\n\nexport interface v3ResponseBody {\n  certificate: ArrayBuffer;\n}\n\nexport interface SubmitResponse {\n  requestId: RequestId;\n  response: {\n    ok: boolean;\n    status: number;\n    statusText: string;\n    body: v2ResponseBody | v3ResponseBody | null;\n    headers: HttpHeaderField[];\n  };\n  requestDetails?: CallRequest;\n}\n\n/**\n * An Agent able to make calls and queries to a Replica.\n */\nexport interface Agent {\n  readonly rootKey: ArrayBuffer | null;\n  /**\n   * Returns the principal ID associated with this agent (by default). It only shows\n   * the principal of the default identity in the agent, which is the principal used\n   * when calls don't specify it.\n   */\n  getPrincipal(): Promise<Principal>;\n\n  /**\n   * Create the request for the read state call.\n   * `readState` uses this internally.\n   * Useful to avoid signing the same request multiple times.\n   */\n  createReadStateRequest?(options: ReadStateOptions, identity?: Identity): Promise<unknown>;\n\n  /**\n   * Send a read state query to the replica. This includes a list of paths to return,\n   * and will return a Certificate. This will only reject on communication errors,\n   * but the certificate might contain less information than requested.\n   * @param effectiveCanisterId A Canister ID related to this call.\n   * @param options The options for this call.\n   * @param identity Identity for the call. If not specified, uses the instance identity.\n   * @param request The request to send in case it has already been created.\n   */\n  readState(\n    effectiveCanisterId: Principal | string,\n    options: ReadStateOptions,\n    identity?: Identity,\n    request?: unknown,\n  ): Promise<ReadStateResponse>;\n\n  call(canisterId: Principal | string, fields: CallOptions): Promise<SubmitResponse>;\n\n  /**\n   * Query the status endpoint of the replica. This normally has a few fields that\n   * corresponds to the version of the replica, its root public key, and any other\n   * information made public.\n   * @returns A JsonObject that is essentially a record of fields from the status\n   *     endpoint.\n   */\n  status(): Promise<JsonObject>;\n\n  /**\n   * Send a query call to a canister. See\n   * {@link https://sdk.dfinity.org/docs/interface-spec/#http-query | the interface spec}.\n   * @param canisterId The Principal of the Canister to send the query to. Sending a query to\n   *     the management canister is not supported (as it has no meaning from an agent).\n   * @param options Options to use to create and send the query.\n   * @param identity Sender principal to use when sending the query.\n   * @returns The response from the replica. The Promise will only reject when the communication\n   *     failed. If the query itself failed but no protocol errors happened, the response will\n   *     be of type QueryResponseRejected.\n   */\n  query(\n    canisterId: Principal | string,\n    options: QueryFields,\n    identity?: Identity | Promise<Identity>,\n  ): Promise<ApiQueryResponse>;\n\n  /**\n   * By default, the agent is configured to talk to the main Internet Computer,\n   * and verifies responses using a hard-coded public key.\n   *\n   * This function will instruct the agent to ask the endpoint for its public\n   * key, and use that instead. This is required when talking to a local test\n   * instance, for example.\n   *\n   * Only use this when you are  _not_ talking to the main Internet Computer,\n   * otherwise you are prone to man-in-the-middle attacks! Do not call this\n   * function by default.\n   */\n  fetchRootKey(): Promise<ArrayBuffer>;\n  /**\n   * If an application needs to invalidate an identity under certain conditions, an `Agent` may expose an `invalidateIdentity` method.\n   * Invoking this method will set the inner identity used by the `Agent` to `null`.\n   *\n   * A use case for this would be - after a certain period of inactivity, a secure application chooses to invalidate the identity of any `HttpAgent` instances. An invalid identity can be replaced by `Agent.replaceIdentity`\n   */\n  invalidateIdentity?(): void;\n  /**\n   * If an application needs to replace an identity under certain conditions, an `Agent` may expose a `replaceIdentity` method.\n   * Invoking this method will set the inner identity used by the `Agent` to a newly provided identity.\n   *\n   * A use case for this would be - after authenticating using `@dfinity/auth-client`, you can replace the `AnonymousIdentity` of your `Actor` with a `DelegationIdentity`.\n   *\n   * ```Actor.agentOf(defaultActor).replaceIdentity(await authClient.getIdentity());```\n   */\n  replaceIdentity?(identity: Identity): void;\n}\n"],"names":[],"mappings":"AAMA;;;GAGG;;;AACH,IAAY,iBAMX;AAND,CAAA,SAAY,iBAAiB;IAC3B,iBAAA,CAAA,iBAAA,CAAA,WAAA,GAAA,EAAA,GAAA,UAAY,CAAA;IACZ,iBAAA,CAAA,iBAAA,CAAA,eAAA,GAAA,EAAA,GAAA,cAAgB,CAAA;IAChB,iBAAA,CAAA,iBAAA,CAAA,qBAAA,GAAA,EAAA,GAAA,oBAAsB,CAAA;IACtB,iBAAA,CAAA,iBAAA,CAAA,iBAAA,GAAA,EAAA,GAAA,gBAAkB,CAAA;IAClB,iBAAA,CAAA,iBAAA,CAAA,gBAAA,GAAA,EAAA,GAAA,eAAiB,CAAA;AACnB,CAAC,EANW,iBAAiB,IAAA,CAAjB,iBAAiB,GAAA,CAAA,CAAA,GAM5B","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 27, "column": 0}, "map": {"version":3,"file":"buffer.js","sourceRoot":"","sources":["file:///home/brimzy/.dev/studifi/node_modules/%40dfinity/agent/src/utils/buffer.ts"],"sourcesContent":["/**\n * Concatenate multiple array buffers.\n * @param buffers The buffers to concatenate.\n */\nexport function concat(...buffers: ArrayBuffer[]): ArrayBuffer {\n  const result = new Uint8Array(buffers.reduce((acc, curr) => acc + curr.byteLength, 0));\n  let index = 0;\n  for (const b of buffers) {\n    result.set(new Uint8Array(b), index);\n    index += b.byteLength;\n  }\n  return result.buffer;\n}\n\n/**\n * Transforms a buffer to an hexadecimal string. This will use the buffer as an Uint8Array.\n * @param buffer The buffer to return the hexadecimal string of.\n */\nexport function toHex(buffer: ArrayBuffer): string {\n  return [...new Uint8Array(buffer)].map(x => x.toString(16).padStart(2, '0')).join('');\n}\n\nconst hexRe = new RegExp(/^[0-9a-fA-F]+$/);\n\n/**\n * Transforms a hexadecimal string into an array buffer.\n * @param hex The hexadecimal string to use.\n */\nexport function fromHex(hex: string): ArrayBuffer {\n  if (!hexRe.test(hex)) {\n    throw new Error('Invalid hexadecimal string.');\n  }\n  const buffer = [...hex]\n    .reduce((acc, curr, i) => {\n      acc[(i / 2) | 0] = (acc[(i / 2) | 0] || '') + curr;\n      return acc;\n    }, [] as string[])\n    .map(x => Number.parseInt(x, 16));\n\n  return new Uint8Array(buffer).buffer;\n}\n\n/**\n *\n * @param b1 array buffer 1\n * @param b2 array buffer 2\n * @returns number - negative if b1 < b2, positive if b1 > b2, 0 if b1 === b2\n */\nexport function compare(b1: ArrayBuffer, b2: ArrayBuffer): number {\n  if (b1.byteLength !== b2.byteLength) {\n    return b1.byteLength - b2.byteLength;\n  }\n\n  const u1 = new Uint8Array(b1);\n  const u2 = new Uint8Array(b2);\n  for (let i = 0; i < u1.length; i++) {\n    if (u1[i] !== u2[i]) {\n      return u1[i] - u2[i];\n    }\n  }\n  return 0;\n}\n\n/**\n * Checks two array buffers for equality.\n * @param b1 array buffer 1\n * @param b2 array buffer 2\n * @returns boolean\n */\nexport function bufEquals(b1: ArrayBuffer, b2: ArrayBuffer): boolean {\n  return compare(b1, b2) === 0;\n}\n\n/**\n * Returns a true ArrayBuffer from a Uint8Array, as Uint8Array.buffer is unsafe.\n * @param {Uint8Array} arr Uint8Array to convert\n * @returns ArrayBuffer\n */\nexport function uint8ToBuf(arr: Uint8Array): ArrayBuffer {\n  return new DataView(arr.buffer, arr.byteOffset, arr.byteLength).buffer;\n}\n\n/**\n * Returns a true ArrayBuffer from an ArrayBufferLike object.\n * @param bufLike a buffer-like object\n * @returns ArrayBuffer\n */\nexport function bufFromBufLike(\n  bufLike:\n    | ArrayBuffer\n    | Uint8Array\n    | DataView\n    | ArrayBufferView\n    | ArrayBufferLike\n    | [number]\n    | number[]\n    | { buffer: ArrayBuffer },\n): ArrayBuffer {\n  if (bufLike instanceof Uint8Array) {\n    return uint8ToBuf(bufLike);\n  }\n  if (bufLike instanceof ArrayBuffer) {\n    return bufLike;\n  }\n  if (Array.isArray(bufLike)) {\n    return uint8ToBuf(new Uint8Array(bufLike));\n  }\n  if ('buffer' in bufLike) {\n    return bufFromBufLike(bufLike.buffer);\n  }\n  return uint8ToBuf(new Uint8Array(bufLike));\n}\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 106, "column": 0}, "map": {"version":3,"file":"errors.js","sourceRoot":"","sources":["file:///home/brimzy/.dev/studifi/node_modules/%40dfinity/agent/src/errors.ts"],"sourcesContent":["import { Principal } from '@dfinity/principal';\nimport {\n  QueryResponseRejected,\n  ReplicaRejectCode,\n  SubmitResponse,\n  v2ResponseBody,\n} from './agent/api';\nimport { RequestId } from './request_id';\nimport { toHex } from './utils/buffer';\n\n/**\n * An error that happens in the Agent. This is the root of all errors and should be used\n * everywhere in the Agent code (this package).\n * @todo https://github.com/dfinity/agent-js/issues/420\n */\nexport class AgentError extends Error {\n  public name = 'AgentError';\n  public __proto__ = AgentError.prototype;\n  constructor(public readonly message: string) {\n    super(message);\n    Object.setPrototypeOf(this, AgentError.prototype);\n  }\n}\n\nexport class ActorCallError extends AgentError {\n  public name = 'ActorCallError';\n  public __proto__ = ActorCallError.prototype;\n  constructor(\n    public readonly canisterId: Principal | string,\n    public readonly methodName: string,\n    public readonly type: 'query' | 'update',\n    public readonly props: Record<string, string>,\n  ) {\n    const cid = Principal.from(canisterId);\n    super(\n      [\n        `Call failed:`,\n        `  Canister: ${cid.toText()}`,\n        `  Method: ${methodName} (${type})`,\n        ...Object.getOwnPropertyNames(props).map(n => `  \"${n}\": ${JSON.stringify(props[n])}`),\n      ].join('\\n'),\n    );\n    Object.setPrototypeOf(this, ActorCallError.prototype);\n  }\n}\n\nexport class QueryCallRejectedError extends ActorCallError {\n  public name = 'QueryCallRejectedError';\n  public __proto__ = QueryCallRejectedError.prototype;\n  constructor(\n    canisterId: Principal | string,\n    methodName: string,\n    public readonly result: QueryResponseRejected,\n  ) {\n    const cid = Principal.from(canisterId);\n    super(cid, methodName, 'query', {\n      Status: result.status,\n      Code: ReplicaRejectCode[result.reject_code] ?? `Unknown Code \"${result.reject_code}\"`,\n      Message: result.reject_message,\n    });\n    Object.setPrototypeOf(this, QueryCallRejectedError.prototype);\n  }\n}\n\nexport class UpdateCallRejectedError extends ActorCallError {\n  public name = 'UpdateCallRejectedError';\n  public __proto__ = UpdateCallRejectedError.prototype;\n  constructor(\n    canisterId: Principal | string,\n    methodName: string,\n    public readonly requestId: RequestId,\n    public readonly response: SubmitResponse['response'],\n  ) {\n    const cid = Principal.from(canisterId);\n    super(cid, methodName, 'update', {\n      'Request ID': toHex(requestId),\n      ...(response.body\n        ? {\n            ...((response.body as v2ResponseBody).error_code\n              ? {\n                  'Error code': (response.body as v2ResponseBody).error_code,\n                }\n              : {}),\n            'Reject code': String((response.body as v2ResponseBody).reject_code),\n            'Reject message': (response.body as v2ResponseBody).reject_message,\n          }\n        : {\n            'HTTP status code': response.status.toString(),\n            'HTTP status text': response.statusText,\n          }),\n    });\n    Object.setPrototypeOf(this, UpdateCallRejectedError.prototype);\n  }\n}\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 187, "column": 0}, "map": {"version":3,"file":"request_id.js","sourceRoot":"","sources":["file:///home/brimzy/.dev/studifi/node_modules/%40dfinity/agent/src/request_id.ts"],"sourcesContent":["import { lebEncode } from '@dfinity/candid';\nimport { Principal } from '@dfinity/principal';\nimport borc from 'borc';\nimport { sha256 } from '@noble/hashes/sha256';\nimport { compare, concat, uint8ToBuf } from './utils/buffer';\n\nexport type RequestId = ArrayBuffer & { __requestId__: void };\n\n/**\n * sha256 hash the provided Buffer\n * @param data - input to hash function\n */\nexport function hash(data: ArrayBuffer): ArrayBuffer {\n  return uint8ToBuf(sha256.create().update(new Uint8Array(data)).digest());\n}\n\ninterface ToHashable {\n  toHash(): unknown;\n}\n\n/**\n *\n * @param value unknown value\n * @returns ArrayBuffer\n */\nexport function hashValue(value: unknown): ArrayBuffer {\n  if (value instanceof borc.Tagged) {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    return hashValue((value as any).value);\n  } else if (typeof value === 'string') {\n    return hashString(value);\n  } else if (typeof value === 'number') {\n    return hash(lebEncode(value));\n  } else if (value instanceof ArrayBuffer || ArrayBuffer.isView(value)) {\n    return hash(value as ArrayBuffer);\n  } else if (Array.isArray(value)) {\n    const vals = value.map(hashValue);\n    return hash(concat(...vals));\n  } else if (value && typeof value === 'object' && (value as Principal)._isPrincipal) {\n    return hash((value as Principal).toUint8Array());\n  } else if (\n    typeof value === 'object' &&\n    value !== null &&\n    typeof (value as ToHashable).toHash === 'function'\n  ) {\n    return hashValue((value as ToHashable).toHash());\n    // TODO This should be move to a specific async method as the webauthn flow required\n    // the flow to be synchronous to ensure Safari touch id works.\n    // } else if (value instanceof Promise) {\n    //   return value.then(x => hashValue(x));\n  } else if (typeof value === 'object') {\n    return hashOfMap(value as Record<string, unknown>);\n  } else if (typeof value === 'bigint') {\n    // Do this check much later than the other bigint check because this one is much less\n    // type-safe.\n    // So we want to try all the high-assurance type guards before this 'probable' one.\n    return hash(lebEncode(value));\n  }\n  throw Object.assign(new Error(`Attempt to hash a value of unsupported type: ${value}`), {\n    // include so logs/callers can understand the confusing value.\n    // (when stringified in error message, prototype info is lost)\n    value,\n  });\n}\n\nconst hashString = (value: string): ArrayBuffer => {\n  const encoded = new TextEncoder().encode(value);\n  return hash(encoded);\n};\n\n/**\n * Get the RequestId of the provided ic-ref request.\n * RequestId is the result of the representation-independent-hash function.\n * https://sdk.dfinity.org/docs/interface-spec/index.html#hash-of-map\n * @param request - ic-ref request to hash into RequestId\n */\nexport function requestIdOf(request: Record<string, unknown>): RequestId {\n  return hashOfMap(request) as RequestId;\n}\n\n/**\n * Hash a map into an ArrayBuffer using the representation-independent-hash function.\n * https://sdk.dfinity.org/docs/interface-spec/index.html#hash-of-map\n * @param map - Any non-nested object\n * @returns ArrayBuffer\n */\nexport function hashOfMap(map: Record<string, unknown>): ArrayBuffer {\n  const hashed: Array<[ArrayBuffer, ArrayBuffer]> = Object.entries(map)\n    .filter(([, value]) => value !== undefined)\n    .map(([key, value]: [string, unknown]) => {\n      const hashedKey = hashString(key);\n      const hashedValue = hashValue(value);\n\n      return [hashedKey, hashedValue] as [ArrayBuffer, ArrayBuffer];\n    });\n\n  const traversed: Array<[ArrayBuffer, ArrayBuffer]> = hashed;\n\n  const sorted: Array<[ArrayBuffer, ArrayBuffer]> = traversed.sort(([k1], [k2]) => {\n    return compare(k1, k2);\n  });\n\n  const concatenated: ArrayBuffer = concat(...sorted.map(x => concat(...x)));\n  const result = hash(concatenated);\n  return result;\n}\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 270, "column": 0}, "map": {"version":3,"file":"auth.js","sourceRoot":"","sources":["file:///home/brimzy/.dev/studifi/node_modules/%40dfinity/agent/src/auth.ts"],"sourcesContent":["import { Principal } from '@dfinity/principal';\nimport { HttpAgentRequest } from './agent/http/types';\nimport { requestIdOf } from './request_id';\nimport { concat, toHex } from './utils/buffer';\n\nconst domainSeparator = new TextEncoder().encode('\\x0Aic-request');\n\n/**\n * A Key Pair, containing a secret and public key.\n */\nexport interface KeyPair {\n  secretKey: ArrayBuffer;\n  publicKey: PublicKey;\n}\n\n/**\n * A public key that is DER encoded. This is a branded ArrayBuffer.\n */\nexport type DerEncodedPublicKey = ArrayBuffer & { __derEncodedPublicKey__?: void };\n\n/**\n * A signature array buffer.\n */\nexport type Signature = ArrayBuffer & { __signature__: void };\n\n/**\n * A Public Key implementation.\n */\nexport interface PublicKey {\n  toDer(): DerEncodedPublicKey;\n  // rawKey, toRaw, and derKey are optional for backwards compatibility.\n  toRaw?(): ArrayBuffer;\n  rawKey?: ArrayBuffer;\n  derKey?: DerEncodedPublicKey;\n}\n\n/**\n * A General Identity object. This does not have to be a private key (for example,\n * the Anonymous identity), but it must be able to transform request.\n */\nexport interface Identity {\n  /**\n   * Get the principal represented by this identity. Normally should be a\n   * `Principal.selfAuthenticating()`.\n   */\n  getPrincipal(): Principal;\n\n  /**\n   * Transform a request into a signed version of the request. This is done last\n   * after the transforms on the body of a request. The returned object can be\n   * anything, but must be serializable to CBOR.\n   */\n  transformRequest(request: HttpAgentRequest): Promise<unknown>;\n}\n\n/**\n * An Identity that can sign blobs.\n */\nexport abstract class SignIdentity implements Identity {\n  protected _principal: Principal | undefined;\n\n  /**\n   * Returns the public key that would match this identity's signature.\n   */\n  public abstract getPublicKey(): PublicKey;\n\n  /**\n   * Signs a blob of data, with this identity's private key.\n   */\n  public abstract sign(blob: ArrayBuffer): Promise<Signature>;\n\n  /**\n   * Get the principal represented by this identity. Normally should be a\n   * `Principal.selfAuthenticating()`.\n   */\n  public getPrincipal(): Principal {\n    if (!this._principal) {\n      this._principal = Principal.selfAuthenticating(new Uint8Array(this.getPublicKey().toDer()));\n    }\n    return this._principal;\n  }\n\n  /**\n   * Transform a request into a signed version of the request. This is done last\n   * after the transforms on the body of a request. The returned object can be\n   * anything, but must be serializable to CBOR.\n   * @param request - internet computer request to transform\n   */\n  public async transformRequest(request: HttpAgentRequest): Promise<unknown> {\n    const { body, ...fields } = request;\n    const requestId = requestIdOf(body);\n    return {\n      ...fields,\n      body: {\n        content: body,\n        sender_pubkey: this.getPublicKey().toDer(),\n        sender_sig: await this.sign(concat(domainSeparator, requestId)),\n      },\n    };\n  }\n}\n\nexport class AnonymousIdentity implements Identity {\n  public getPrincipal(): Principal {\n    return Principal.anonymous();\n  }\n\n  public async transformRequest(request: HttpAgentRequest): Promise<unknown> {\n    return {\n      ...request,\n      body: { content: request.body },\n    };\n  }\n}\n\n/*\n * We need to communicate with other agents on the page about identities,\n * but those messages may need to go across boundaries where it's not possible to\n * serialize/deserialize object prototypes easily.\n * So these are lightweight, serializable objects that contain enough information to recreate\n * SignIdentities, but don't commit to having all methods of SignIdentity.\n *\n * Use Case:\n * * DOM Events that let differently-versioned components communicate to one another about\n *   Identities, even if they're using slightly different versions of agent packages to\n *   create/interpret them.\n */\nexport interface AnonymousIdentityDescriptor {\n  type: 'AnonymousIdentity';\n}\nexport interface PublicKeyIdentityDescriptor {\n  type: 'PublicKeyIdentity';\n  publicKey: string;\n}\nexport type IdentityDescriptor = AnonymousIdentityDescriptor | PublicKeyIdentityDescriptor;\n\n/**\n * Create an IdentityDescriptor from a @dfinity/identity Identity\n * @param identity - identity describe in returned descriptor\n */\nexport function createIdentityDescriptor(\n  identity: SignIdentity | AnonymousIdentity,\n): IdentityDescriptor {\n  const identityIndicator: IdentityDescriptor =\n    'getPublicKey' in identity\n      ? { type: 'PublicKeyIdentity', publicKey: toHex(identity.getPublicKey().toDer()) }\n      : { type: 'AnonymousIdentity' };\n  return identityIndicator;\n}\n"],"names":[],"mappings":";;;;;AAAA,OAAO,EAAE,SAAS,EAAE,MAAM,oBAAoB,CAAC;AAE/C,OAAO,EAAE,WAAW,EAAE,MAAM,cAAc,CAAC;AAC3C,OAAO,EAAE,MAAM,EAAE,KAAK,EAAE,MAAM,gBAAgB,CAAC;;;;;;;;;;;;AAE/C,MAAM,eAAe,GAAG,IAAI,WAAW,EAAE,CAAC,MAAM,CAAC,gBAAgB,CAAC,CAAC;AAqD7D,MAAgB,YAAY;IAahC;;;OAGG,CACI,YAAY,GAAA;QACjB,IAAI,CAAC,IAAI,CAAC,UAAU,EAAE;YACpB,IAAI,CAAC,UAAU,oKAAG,YAAS,CAAC,kBAAkB,CAAC,IAAI,UAAU,CAAC,IAAI,CAAC,YAAY,EAAE,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;SAC7F;QACD,OAAO,IAAI,CAAC,UAAU,CAAC;IACzB,CAAC;IAED;;;;;OAKG,CACI,KAAK,CAAC,gBAAgB,CAAC,OAAyB,EAAA;QACrD,MAAM,EAAE,IAAI,EAAA,GAAgB,OAAO,EAAlB,MAAM,GAAA,OAAK,OAAO,EAA7B;YAAA;SAAmB,CAAU,CAAC;QACpC,MAAM,SAAS,yKAAG,cAAA,AAAW,EAAC,IAAI,CAAC,CAAC;QACpC,OAAA,OAAA,MAAA,CAAA,OAAA,MAAA,CAAA,CAAA,GACK,MAAM,GAAA;YACT,IAAI,EAAE;gBACJ,OAAO,EAAE,IAAI;gBACb,aAAa,EAAE,IAAI,CAAC,YAAY,EAAE,CAAC,KAAK,EAAE;gBAC1C,UAAU,EAAE,MAAM,IAAI,CAAC,IAAI,4KAAC,SAAA,AAAM,EAAC,eAAe,EAAE,SAAS,CAAC,CAAC;aAChE;QAAA,GACD;IACJ,CAAC;CACF;AAEK,MAAO,iBAAiB;IACrB,YAAY,GAAA;QACjB,wKAAO,YAAS,CAAC,SAAS,EAAE,CAAC;IAC/B,CAAC;IAEM,KAAK,CAAC,gBAAgB,CAAC,OAAyB,EAAA;QACrD,OAAA,OAAA,MAAA,CAAA,OAAA,MAAA,CAAA,CAAA,GACK,OAAO,GAAA;YACV,IAAI,EAAE;gBAAE,OAAO,EAAE,OAAO,CAAC,IAAI;YAAA,CAAE;QAAA,GAC/B;IACJ,CAAC;CACF;AA2BK,SAAU,wBAAwB,CACtC,QAA0C;IAE1C,MAAM,iBAAiB,GACrB,cAAc,IAAI,QAAQ,GACtB;QAAE,IAAI,EAAE,mBAAmB;QAAE,SAAS,6KAAE,QAAA,AAAK,EAAC,QAAQ,CAAC,YAAY,EAAE,CAAC,KAAK,EAAE,CAAC;IAAA,CAAE,GAChF;QAAE,IAAI,EAAE,mBAAmB;IAAA,CAAE,CAAC;IACpC,OAAO,iBAAiB,CAAC;AAC3B,CAAC","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 346, "column": 0}, "map": {"version":3,"file":"cbor.js","sourceRoot":"","sources":["file:///home/brimzy/.dev/studifi/node_modules/%40dfinity/agent/src/cbor.ts"],"sourcesContent":["// This file is based on:\n// https://github.com/dfinity-lab/dfinity/blob/9bca65f8edd65701ea6bdb00e0752f9186bbc893/docs/spec/public/index.adoc#cbor-encoding-of-requests-and-responses\nimport borc from 'borc';\nimport * as cbor from 'simple-cbor';\nimport { CborEncoder, SelfDescribeCborSerializer } from 'simple-cbor';\nimport { Principal } from '@dfinity/principal';\nimport { concat, fromHex, toHex } from './utils/buffer';\n\n// We are using hansl/simple-cbor for CBOR serialization, to avoid issues with\n// encoding the uint64 values that the HTTP handler of the client expects for\n// canister IDs. However, simple-cbor does not yet provide deserialization so\n// we are using `Uint8Array` so that we can use the dignifiedquire/borc CBOR\n// decoder.\n\nclass PrincipalEncoder implements CborEncoder<Principal> {\n  public get name() {\n    return 'Principal';\n  }\n\n  public get priority() {\n    return 0;\n  }\n\n  public match(value: any): boolean {\n    return value && value._isPrincipal === true;\n  }\n\n  public encode(v: Principal): cbor.CborValue {\n    return cbor.value.bytes(v.toUint8Array());\n  }\n}\n\nclass BufferEncoder implements CborEncoder<ArrayBuffer> {\n  public get name() {\n    return 'Buffer';\n  }\n\n  public get priority() {\n    return 1;\n  }\n\n  public match(value: any): boolean {\n    return value instanceof ArrayBuffer || ArrayBuffer.isView(value);\n  }\n\n  public encode(v: ArrayBuffer): cbor.CborValue {\n    return cbor.value.bytes(new Uint8Array(v));\n  }\n}\n\nclass BigIntEncoder implements CborEncoder<BigInt> {\n  public get name() {\n    return 'BigInt';\n  }\n\n  public get priority() {\n    return 1;\n  }\n\n  public match(value: any): boolean {\n    return typeof value === `bigint`;\n  }\n\n  public encode(v: bigint): cbor.CborValue {\n    // Always use a bigint encoding.\n    if (v > BigInt(0)) {\n      return cbor.value.tagged(2, cbor.value.bytes(fromHex(v.toString(16))));\n    } else {\n      return cbor.value.tagged(3, cbor.value.bytes(fromHex((BigInt('-1') * v).toString(16))));\n    }\n  }\n}\n\nconst serializer = SelfDescribeCborSerializer.withDefaultEncoders(true);\nserializer.addEncoder(new PrincipalEncoder());\nserializer.addEncoder(new BufferEncoder());\nserializer.addEncoder(new BigIntEncoder());\n\nexport enum CborTag {\n  Uint64LittleEndian = 71,\n  Semantic = 55799,\n}\n\n/**\n * Encode a JavaScript value into CBOR.\n */\nexport function encode(value: any): ArrayBuffer {\n  return serializer.serialize(value);\n}\n\nfunction decodePositiveBigInt(buf: Uint8Array): bigint {\n  const len = buf.byteLength;\n  let res = BigInt(0);\n  for (let i = 0; i < len; i++) {\n    res = res * BigInt(0x100) + BigInt(buf[i]);\n  }\n\n  return res;\n}\n\n// A BORC subclass that decodes byte strings to ArrayBuffer instead of the Buffer class.\nclass Uint8ArrayDecoder extends borc.Decoder {\n  public createByteString(raw: ArrayBuffer[]): ArrayBuffer {\n    return concat(...raw);\n  }\n\n  public createByteStringFromHeap(start: number, end: number): ArrayBuffer {\n    if (start === end) {\n      return new ArrayBuffer(0);\n    }\n\n    return new Uint8Array((this as any)._heap.slice(start, end));\n  }\n}\n\nexport function decode<T>(input: ArrayBuffer): T {\n  const buffer = new Uint8Array(input);\n  const decoder = new Uint8ArrayDecoder({\n    size: buffer.byteLength,\n    tags: {\n      // Override tags 2 and 3 for BigInt support (borc supports only BigNumber).\n      2: val => decodePositiveBigInt(val),\n      3: val => -decodePositiveBigInt(val),\n      [CborTag.Semantic]: (value: T): T => value,\n    },\n  });\n\n  try {\n    return decoder.decodeFirst(buffer);\n  } catch(e: unknown) {\n    throw new Error(`Failed to decode CBOR: ${e}, input: ${toHex(buffer)}`);\n  }\n}\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 467, "column": 0}, "map": {"version":3,"file":"random.js","sourceRoot":"","sources":["file:///home/brimzy/.dev/studifi/node_modules/%40dfinity/agent/src/utils/random.ts"],"sourcesContent":["/**\n * Generates a random unsigned 32-bit integer between 0 and 0xffffffff\n * @returns {number} a random number\n */\nexport const randomNumber = (): number => {\n  // determine whether browser crypto is available\n  if (typeof window !== 'undefined' && !!window.crypto && !!window.crypto.getRandomValues) {\n    const array = new Uint32Array(1);\n    window.crypto.getRandomValues(array);\n    return array[0];\n  }\n  // A second check for webcrypto, in case it is loaded under global instead of window\n  if (typeof crypto !== 'undefined' && crypto.getRandomValues) {\n    const array = new Uint32Array(1);\n    crypto.getRandomValues(array);\n    return array[0];\n  }\n\n  type nodeCrypto = {\n    randomInt: (min: number, max: number) => number;\n  };\n\n  // determine whether node crypto is available\n  if (typeof crypto !== 'undefined' && (crypto as unknown as nodeCrypto).randomInt) {\n    return (crypto as unknown as nodeCrypto).randomInt(0, 0xffffffff);\n  }\n\n  // fall back to Math.random\n  return Math.floor(Math.random() * 0xffffffff);\n};\n"],"names":[],"mappings":"AAAA;;;GAGG;;;AACI,MAAM,YAAY,GAAG,GAAW,EAAE;IACvC,gDAAgD;IAChD,IAAI,OAAO,MAAM,KAAK,WAAW,IAAI,CAAC,CAAC,MAAM,CAAC,MAAM,IAAI,CAAC,CAAC,MAAM,CAAC,MAAM,CAAC,eAAe,EAAE;QACvF,MAAM,KAAK,GAAG,IAAI,WAAW,CAAC,CAAC,CAAC,CAAC;QACjC,MAAM,CAAC,MAAM,CAAC,eAAe,CAAC,KAAK,CAAC,CAAC;QACrC,OAAO,KAAK,CAAC,CAAC,CAAC,CAAC;KACjB;IACD,oFAAoF;IACpF,IAAI,OAAO,MAAM,KAAK,WAAW,IAAI,MAAM,CAAC,eAAe,EAAE;QAC3D,MAAM,KAAK,GAAG,IAAI,WAAW,CAAC,CAAC,CAAC,CAAC;QACjC,MAAM,CAAC,eAAe,CAAC,KAAK,CAAC,CAAC;QAC9B,OAAO,KAAK,CAAC,CAAC,CAAC,CAAC;KACjB;IAMD,6CAA6C;IAC7C,IAAI,OAAO,MAAM,KAAK,WAAW,IAAK,MAAgC,CAAC,SAAS,EAAE;QAChF,OAAQ,MAAgC,CAAC,SAAS,CAAC,CAAC,EAAE,UAAU,CAAC,CAAC;KACnE;IAED,2BAA2B;IAC3B,OAAO,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,UAAU,CAAC,CAAC;AAChD,CAAC,CAAC","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 499, "column": 0}, "map": {"version":3,"file":"types.js","sourceRoot":"","sources":["file:///home/brimzy/.dev/studifi/node_modules/%40dfinity/agent/src/agent/http/types.ts"],"sourcesContent":["import type { Principal } from '@dfinity/principal';\nimport { Expiry } from './transforms';\nimport { randomNumber } from '../../utils/random';\n\n/**\n * @internal\n */\nexport const enum Endpoint {\n  Query = 'read',\n  ReadState = 'read_state',\n  Call = 'call',\n}\n\n// An HttpAgent request, before it gets encoded and sent to the server.\n// We create an empty request that we will fill later.\nexport type HttpAgentRequest =\n  | HttpAgentQueryRequest\n  | HttpAgentSubmitRequest\n  | HttpAgentReadStateRequest;\n\nexport interface HttpAgentBaseRequest {\n  readonly endpoint: Endpoint;\n  request: RequestInit;\n}\n\nexport type HttpHeaderField = [string, string];\n\nexport interface HttpAgentSubmitRequest extends HttpAgentBaseRequest {\n  readonly endpoint: Endpoint.Call;\n  body: CallRequest;\n}\n\nexport interface HttpAgentQueryRequest extends HttpAgentBaseRequest {\n  readonly endpoint: Endpoint.Query;\n  body: ReadRequest;\n}\n\nexport interface HttpAgentReadStateRequest extends HttpAgentBaseRequest {\n  readonly endpoint: Endpoint.ReadState;\n  body: ReadRequest;\n}\n\nexport interface Signed<T> {\n  content: T;\n  sender_pubkey: ArrayBuffer;\n  sender_sig: ArrayBuffer;\n}\n\nexport interface UnSigned<T> {\n  content: T;\n}\n\nexport type Envelope<T> = Signed<T> | UnSigned<T>;\n\nexport interface HttpAgentRequestTransformFn {\n  (args: HttpAgentRequest): Promise<HttpAgentRequest | undefined | void>;\n  priority?: number;\n}\n\n// The fields in a \"call\" submit request.\nexport interface CallRequest extends Record<string, any> {\n  request_type: SubmitRequestType.Call;\n  canister_id: Principal;\n  method_name: string;\n  arg: ArrayBuffer;\n  sender: Uint8Array | Principal;\n  ingress_expiry: Expiry;\n  nonce?: Nonce;\n}\n\n// The types of values allowed in the `request_type` field for submit requests.\nexport enum SubmitRequestType {\n  Call = 'call',\n}\n\n// The types of values allowed in the `request_type` field for read requests.\nexport const enum ReadRequestType {\n  Query = 'query',\n  ReadState = 'read_state',\n}\n\n// The fields in a \"query\" read request.\nexport interface QueryRequest extends Record<string, any> {\n  request_type: ReadRequestType.Query;\n  canister_id: Principal;\n  method_name: string;\n  arg: ArrayBuffer;\n  sender: Uint8Array | Principal;\n  ingress_expiry: Expiry;\n  nonce?: Nonce;\n}\n\nexport interface ReadStateRequest extends Record<string, any> {\n  request_type: ReadRequestType.ReadState;\n  paths: ArrayBuffer[][];\n  ingress_expiry: Expiry;\n  sender: Uint8Array | Principal;\n}\n\nexport type ReadRequest = QueryRequest | ReadStateRequest;\n\n// A Nonce that can be used for calls.\nexport type Nonce = Uint8Array & { __nonce__: void };\n\n/**\n * Create a random Nonce, based on random values\n */\nexport function makeNonce(): Nonce {\n  // Encode 128 bits.\n  const buffer = new ArrayBuffer(16);\n  const view = new DataView(buffer);\n  const rand1 = randomNumber();\n  const rand2 = randomNumber();\n  const rand3 = randomNumber();\n  const rand4 = randomNumber();\n\n  view.setUint32(0, rand1);\n  view.setUint32(4, rand2);\n  view.setUint32(8, rand3);\n  view.setUint32(12, rand4);\n\n  return buffer as Nonce;\n}\n"],"names":[],"mappings":";;;;AAEA,OAAO,EAAE,YAAY,EAAE,MAAM,oBAAoB,CAAC;;AAqElD,IAAY,iBAEX;AAFD,CAAA,SAAY,iBAAiB;IAC3B,iBAAA,CAAA,OAAA,GAAA,MAAa,CAAA;AACf,CAAC,EAFW,iBAAiB,IAAA,CAAjB,iBAAiB,GAAA,CAAA,CAAA,GAE5B;AAkCK,SAAU,SAAS;IACvB,mBAAmB;IACnB,MAAM,MAAM,GAAG,IAAI,WAAW,CAAC,EAAE,CAAC,CAAC;IACnC,MAAM,IAAI,GAAG,IAAI,QAAQ,CAAC,MAAM,CAAC,CAAC;IAClC,MAAM,KAAK,8KAAG,eAAA,AAAY,EAAE,CAAC;IAC7B,MAAM,KAAK,IAAG,yLAAA,AAAY,EAAE,CAAC;IAC7B,MAAM,KAAK,8KAAG,eAAA,AAAY,EAAE,CAAC;IAC7B,MAAM,KAAK,8KAAG,eAAA,AAAY,EAAE,CAAC;IAE7B,IAAI,CAAC,SAAS,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC;IACzB,IAAI,CAAC,SAAS,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC;IACzB,IAAI,CAAC,SAAS,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC;IACzB,IAAI,CAAC,SAAS,CAAC,EAAE,EAAE,KAAK,CAAC,CAAC;IAE1B,OAAO,MAAe,CAAC;AACzB,CAAC","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 529, "column": 0}, "map": {"version":3,"file":"transforms.js","sourceRoot":"","sources":["file:///home/brimzy/.dev/studifi/node_modules/%40dfinity/agent/src/agent/http/transforms.ts"],"sourcesContent":["import { lebEncode } from '@dfinity/candid';\nimport * as cbor from 'simple-cbor';\nimport {\n  Endpoint,\n  HttpAgentRequest,\n  HttpAgentRequestTransformFn,\n  HttpHeaderField,\n  makeNonce,\n  Nonce,\n} from './types';\n\nconst NANOSECONDS_PER_MILLISECONDS = BigInt(1_000_000);\n\nconst REPLICA_PERMITTED_DRIFT_MILLISECONDS = 60 * 1000;\n\nexport class Expiry {\n  private readonly _value: bigint;\n\n  constructor(deltaInMSec: number) {\n    // if ingress as seconds is less than 90, round to nearest second\n    if (deltaInMSec < 90 * 1_000) {\n      // Raw value without subtraction of REPLICA_PERMITTED_DRIFT_MILLISECONDS\n      const raw_value = BigInt(Date.now() + deltaInMSec) * NANOSECONDS_PER_MILLISECONDS;\n      const ingress_as_seconds = raw_value / BigInt(1_000_000_000);\n      this._value = ingress_as_seconds * BigInt(1_000_000_000);\n      return;\n    }\n\n    // Use bigint because it can overflow the maximum number allowed in a double float.\n    const raw_value =\n      BigInt(Math.floor(Date.now() + deltaInMSec - REPLICA_PERMITTED_DRIFT_MILLISECONDS)) *\n      NANOSECONDS_PER_MILLISECONDS;\n\n    // round down to the nearest second (since )\n    const ingress_as_seconds = raw_value / BigInt(1_000_000_000);\n\n    // round down to nearest minute\n    const ingress_as_minutes = ingress_as_seconds / BigInt(60);\n\n    const rounded_down_nanos = ingress_as_minutes * BigInt(60) * BigInt(1_000_000_000);\n\n    this._value = rounded_down_nanos;\n  }\n\n  public toCBOR(): cbor.CborValue {\n    // TODO: change this to take the minimum amount of space (it always takes 8 bytes now).\n    return cbor.value.u64(this._value.toString(16), 16);\n  }\n\n  public toHash(): ArrayBuffer {\n    return lebEncode(this._value);\n  }\n}\n\n/**\n * Create a Nonce transform, which takes a function that returns a Buffer, and adds it\n * as the nonce to every call requests.\n * @param nonceFn A function that returns a buffer. By default uses a semi-random method.\n */\nexport function makeNonceTransform(nonceFn: () => Nonce = makeNonce): HttpAgentRequestTransformFn {\n  return async (request: HttpAgentRequest) => {\n    // Nonce needs to be inserted into the header for all requests, to enable logs to be correlated with requests.\n    const headers = request.request.headers;\n    // TODO: uncomment this when the http proxy supports it.\n    // headers.set('X-IC-Request-ID', toHex(new Uint8Array(nonce)));\n    request.request.headers = headers;\n\n    // Nonce only needs to be inserted into the body for async calls, to prevent replay attacks.\n    if (request.endpoint === Endpoint.Call) {\n      request.body.nonce = nonceFn();\n    }\n  };\n}\n\n/**\n * Create a transform that adds a delay (by default 5 minutes) to the expiry.\n *\n * @param delayInMilliseconds The delay to add to the call time, in milliseconds.\n */\nexport function makeExpiryTransform(delayInMilliseconds: number): HttpAgentRequestTransformFn {\n  return async (request: HttpAgentRequest) => {\n    request.body.ingress_expiry = new Expiry(delayInMilliseconds);\n  };\n}\n\n/**\n * Maps the default fetch headers field to the serializable HttpHeaderField.\n *\n * @param headers Fetch definition of the headers type\n * @returns array of header fields\n */\nexport function httpHeadersTransform(headers: Headers): HttpHeaderField[] {\n  const headerFields: HttpHeaderField[] = [];\n  headers.forEach((value, key) => {\n    headerFields.push([key, value]);\n  });\n  return headerFields;\n}\n"],"names":[],"mappings":";;;;;;AAAA,OAAO,EAAE,SAAS,EAAE,MAAM,iBAAiB,CAAC;;AAC5C,OAAO,KAAK,IAAI,MAAM,aAAa,CAAC;AACpC,OAAO,EAKL,SAAS,GAEV,MAAM,SAAS,CAAC;;;;AAEjB,MAAM,4BAA4B,GAAG,MAAM,CAAC,OAAS,CAAC,CAAC;AAEvD,MAAM,oCAAoC,GAAG,EAAE,GAAG,IAAI,CAAC;AAEjD,MAAO,MAAM;IAGjB,YAAY,WAAmB,CAAA;QAC7B,iEAAiE;QACjE,IAAI,WAAW,GAAG,EAAE,GAAG,IAAK,EAAE;YAC5B,wEAAwE;YACxE,MAAM,SAAS,GAAG,MAAM,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,WAAW,CAAC,GAAG,4BAA4B,CAAC;YAClF,MAAM,kBAAkB,GAAG,SAAS,GAAG,MAAM,CAAC,UAAa,CAAC,CAAC;YAC7D,IAAI,CAAC,MAAM,GAAG,kBAAkB,GAAG,MAAM,CAAC,UAAa,CAAC,CAAC;YACzD,OAAO;SACR;QAED,mFAAmF;QACnF,MAAM,SAAS,GACb,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,WAAW,GAAG,oCAAoC,CAAC,CAAC,GACnF,4BAA4B,CAAC;QAE/B,4CAA4C;QAC5C,MAAM,kBAAkB,GAAG,SAAS,GAAG,MAAM,CAAC,UAAa,CAAC,CAAC;QAE7D,+BAA+B;QAC/B,MAAM,kBAAkB,GAAG,kBAAkB,GAAG,MAAM,CAAC,EAAE,CAAC,CAAC;QAE3D,MAAM,kBAAkB,GAAG,kBAAkB,GAAG,MAAM,CAAC,EAAE,CAAC,GAAG,MAAM,CAAC,UAAa,CAAC,CAAC;QAEnF,IAAI,CAAC,MAAM,GAAG,kBAAkB,CAAC;IACnC,CAAC;IAEM,MAAM,GAAA;QACX,uFAAuF;QACvF,yJAAO,IAAI,CAAC,GAAK,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC;IACtD,CAAC;IAEM,MAAM,GAAA;QACX,mLAAO,YAAA,AAAS,EAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IAChC,CAAC;CACF;AAOK,SAAU,kBAAkB,CAAC,wLAAuB,YAAS;IACjE,OAAO,KAAK,EAAE,OAAyB,EAAE,EAAE;QACzC,8GAA8G;QAC9G,MAAM,OAAO,GAAG,OAAO,CAAC,OAAO,CAAC,OAAO,CAAC;QACxC,wDAAwD;QACxD,gEAAgE;QAChE,OAAO,CAAC,OAAO,CAAC,OAAO,GAAG,OAAO,CAAC;QAElC,4FAA4F;QAC5F,IAAI,OAAO,CAAC,QAAQ,KAAA,OAAA,iBAAA,EAAkB,GAAE;YACtC,OAAO,CAAC,IAAI,CAAC,KAAK,GAAG,OAAO,EAAE,CAAC;SAChC;IACH,CAAC,CAAC;AACJ,CAAC;AAOK,SAAU,mBAAmB,CAAC,mBAA2B;IAC7D,OAAO,KAAK,EAAE,OAAyB,EAAE,EAAE;QACzC,OAAO,CAAC,IAAI,CAAC,cAAc,GAAG,IAAI,MAAM,CAAC,mBAAmB,CAAC,CAAC;IAChE,CAAC,CAAC;AACJ,CAAC;AAQK,SAAU,oBAAoB,CAAC,OAAgB;IACnD,MAAM,YAAY,GAAsB,EAAE,CAAC;IAC3C,OAAO,CAAC,OAAO,CAAC,CAAC,KAAK,EAAE,GAAG,EAAE,EAAE;QAC7B,YAAY,CAAC,IAAI,CAAC;YAAC,GAAG;YAAE,KAAK;SAAC,CAAC,CAAC;IAClC,CAAC,CAAC,CAAC;IACH,OAAO,YAAY,CAAC;AACtB,CAAC","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 605, "column": 0}, "map": {"version":3,"file":"errors.js","sourceRoot":"","sources":["file:///home/brimzy/.dev/studifi/node_modules/%40dfinity/agent/src/agent/http/errors.ts"],"sourcesContent":["import { AgentError } from '../../errors';\nimport { HttpDetailsResponse } from '../api';\n\nexport class AgentHTTPResponseError extends AgentError {\n  constructor(\n    message: string,\n    public readonly response: HttpDetailsResponse,\n  ) {\n    super(message);\n    this.name = this.constructor.name;\n    Object.setPrototypeOf(this, new.target.prototype);\n  }\n}\n\nexport class AgentCallError extends AgentError {\n  constructor(\n    message: string,\n    public readonly response: HttpDetailsResponse,\n    public readonly requestId: string,\n    public readonly senderPubkey: string,\n    public readonly senderSig: string,\n    public readonly ingressExpiry: string,\n  ) {\n    super(message);\n    this.name = 'AgentCallError';\n    Object.setPrototypeOf(this, new.target.prototype);\n  }\n}\n\nexport class AgentQueryError extends AgentError {\n  constructor(\n    message: string,\n    public readonly response: HttpDetailsResponse,\n    public readonly requestId: string,\n    public readonly senderPubkey: string,\n    public readonly senderSig: string,\n    public readonly ingressExpiry: string,\n  ) {\n    super(message);\n    this.name = 'AgentQueryError';\n    Object.setPrototypeOf(this, new.target.prototype);\n  }\n}\n\nexport class AgentReadStateError extends AgentError {\n  constructor(\n    message: string,\n    public readonly response: HttpDetailsResponse,\n    public readonly requestId: string,\n    public readonly senderPubkey: string,\n    public readonly senderSig: string,\n    public readonly ingressExpiry: string,\n  ) {\n    super(message);\n    this.name = 'AgentReadStateError';\n    Object.setPrototypeOf(this, new.target.prototype);\n  }\n}\n"],"names":[],"mappings":";;;;;;AAAA,OAAO,EAAE,UAAU,EAAE,MAAM,cAAc,CAAC;;AAGpC,MAAO,sBAAuB,uKAAQ,aAAU;IACpD,YACE,OAAe,EACC,QAA6B,CAAA;QAE7C,KAAK,CAAC,OAAO,CAAC,CAAC;QAFC,IAAA,CAAA,QAAQ,GAAR,QAAQ,CAAqB;QAG7C,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC;QAClC,MAAM,CAAC,cAAc,CAAC,IAAI,EAAE,GAAG,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC;IACpD,CAAC;CACF;AAEK,MAAO,cAAe,uKAAQ,aAAU;IAC5C,YACE,OAAe,EACC,QAA6B,EAC7B,SAAiB,EACjB,YAAoB,EACpB,SAAiB,EACjB,aAAqB,CAAA;QAErC,KAAK,CAAC,OAAO,CAAC,CAAC;QANC,IAAA,CAAA,QAAQ,GAAR,QAAQ,CAAqB;QAC7B,IAAA,CAAA,SAAS,GAAT,SAAS,CAAQ;QACjB,IAAA,CAAA,YAAY,GAAZ,YAAY,CAAQ;QACpB,IAAA,CAAA,SAAS,GAAT,SAAS,CAAQ;QACjB,IAAA,CAAA,aAAa,GAAb,aAAa,CAAQ;QAGrC,IAAI,CAAC,IAAI,GAAG,gBAAgB,CAAC;QAC7B,MAAM,CAAC,cAAc,CAAC,IAAI,EAAE,GAAG,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC;IACpD,CAAC;CACF;AAEK,MAAO,eAAgB,uKAAQ,aAAU;IAC7C,YACE,OAAe,EACC,QAA6B,EAC7B,SAAiB,EACjB,YAAoB,EACpB,SAAiB,EACjB,aAAqB,CAAA;QAErC,KAAK,CAAC,OAAO,CAAC,CAAC;QANC,IAAA,CAAA,QAAQ,GAAR,QAAQ,CAAqB;QAC7B,IAAA,CAAA,SAAS,GAAT,SAAS,CAAQ;QACjB,IAAA,CAAA,YAAY,GAAZ,YAAY,CAAQ;QACpB,IAAA,CAAA,SAAS,GAAT,SAAS,CAAQ;QACjB,IAAA,CAAA,aAAa,GAAb,aAAa,CAAQ;QAGrC,IAAI,CAAC,IAAI,GAAG,iBAAiB,CAAC;QAC9B,MAAM,CAAC,cAAc,CAAC,IAAI,EAAE,GAAG,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC;IACpD,CAAC;CACF;AAEK,MAAO,mBAAoB,uKAAQ,aAAU;IACjD,YACE,OAAe,EACC,QAA6B,EAC7B,SAAiB,EACjB,YAAoB,EACpB,SAAiB,EACjB,aAAqB,CAAA;QAErC,KAAK,CAAC,OAAO,CAAC,CAAC;QANC,IAAA,CAAA,QAAQ,GAAR,QAAQ,CAAqB;QAC7B,IAAA,CAAA,SAAS,GAAT,SAAS,CAAQ;QACjB,IAAA,CAAA,YAAY,GAAZ,YAAY,CAAQ;QACpB,IAAA,CAAA,SAAS,GAAT,SAAS,CAAQ;QACjB,IAAA,CAAA,aAAa,GAAb,aAAa,CAAQ;QAGrC,IAAI,CAAC,IAAI,GAAG,qBAAqB,CAAC;QAClC,MAAM,CAAC,cAAc,CAAC,IAAI,EAAE,GAAG,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC;IACpD,CAAC;CACF","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 663, "column": 0}, "map": {"version":3,"file":"bls.js","sourceRoot":"","sources":["file:///home/brimzy/.dev/studifi/node_modules/%40dfinity/agent/src/utils/bls.ts"],"sourcesContent":["import { bls12_381 } from '@noble/curves/bls12-381';\nimport { toHex } from './buffer';\n\nexport let verify: (pk: Uint8Array, sig: Uint8Array, msg: Uint8Array) => boolean;\n\n/**\n *\n * @param pk primary key: Uint8Array\n * @param sig signature: Uint8Array\n * @param msg message: Uint8Array\n * @returns boolean\n */\nexport function blsVerify(pk: Uint8Array, sig: Uint8Array, msg: Uint8Array): boolean {\n  const primaryKey = typeof pk === 'string' ? pk : toHex(pk);\n  const signature = typeof sig === 'string' ? sig : toHex(sig);\n  const message = typeof msg === 'string' ? msg : toHex(msg);\n  return bls12_381.verifyShortSignature(signature, message, primaryKey);\n}\n"],"names":[],"mappings":";;;;AAAA,OAAO,EAAE,SAAS,EAAE,MAAM,yBAAyB,CAAC;AACpD,OAAO,EAAE,KAAK,EAAE,MAAM,UAAU,CAAC;;;AAE1B,IAAI,MAAqE,CAAC;AAS3E,SAAU,SAAS,CAAC,EAAc,EAAE,GAAe,EAAE,GAAe;IACxE,MAAM,UAAU,GAAG,OAAO,EAAE,KAAK,QAAQ,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,4KAAC,QAAA,AAAK,EAAC,EAAE,CAAC,CAAC;IAC3D,MAAM,SAAS,GAAG,OAAO,GAAG,KAAK,QAAQ,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAC,kLAAA,AAAK,EAAC,GAAG,CAAC,CAAC;IAC7D,MAAM,OAAO,GAAG,OAAO,GAAG,KAAK,QAAQ,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,4KAAC,QAAA,AAAK,EAAC,GAAG,CAAC,CAAC;IAC3D,mKAAO,YAAS,CAAC,oBAAoB,CAAC,SAAS,EAAE,OAAO,EAAE,UAAU,CAAC,CAAC;AACxE,CAAC","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 684, "column": 0}, "map": {"version":3,"file":"leb.js","sourceRoot":"","sources":["file:///home/brimzy/.dev/studifi/node_modules/%40dfinity/agent/src/utils/leb.ts"],"sourcesContent":["import { PipeArrayBuffer, lebDecode } from '@dfinity/candid';\n\nexport const decodeLeb128 = (buf: ArrayBuffer): bigint => {\n  return lebDecode(new PipeArrayBuffer(buf));\n};\n\n// time is a LEB128-encoded Nat\nexport const decodeTime = (buf: ArrayBuffer): Date => {\n  const decoded = decodeLeb128(buf);\n\n  // nanoseconds to milliseconds\n  return new Date(Number(decoded) / 1_000_000);\n};\n"],"names":[],"mappings":";;;;AAAA,OAAO,EAAE,eAAe,EAAE,SAAS,EAAE,MAAM,iBAAiB,CAAC;;;;AAEtD,MAAM,YAAY,GAAG,CAAC,GAAgB,EAAU,EAAE;IACvD,mLAAO,YAAA,AAAS,EAAC,4KAAI,kBAAe,CAAC,GAAG,CAAC,CAAC,CAAC;AAC7C,CAAC,CAAC;AAGK,MAAM,UAAU,GAAG,CAAC,GAAgB,EAAQ,EAAE;IACnD,MAAM,OAAO,GAAG,YAAY,CAAC,GAAG,CAAC,CAAC;IAElC,8BAA8B;IAC9B,OAAO,IAAI,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,GAAG,OAAS,CAAC,CAAC;AAC/C,CAAC,CAAC","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 706, "column": 0}, "map": {"version":3,"file":"expirableMap.js","sourceRoot":"","sources":["file:///home/brimzy/.dev/studifi/node_modules/%40dfinity/agent/src/utils/expirableMap.ts"],"sourcesContent":["export type ExpirableMapOptions<K, V> = {\n  source?: Iterable<[K, V]>;\n  expirationTime?: number;\n};\n\n/**\n * A map that expires entries after a given time.\n * Defaults to 10 minutes.\n */\nexport class ExpirableMap<K, V> implements Map<K, V> {\n  // Internals\n  #inner: Map<K, { value: V; timestamp: number }>;\n  #expirationTime: number;\n\n  [Symbol.iterator]: () => IterableIterator<[K, V]> = this.entries.bind(this);\n  [Symbol.toStringTag] = 'ExpirableMap';\n\n  /**\n   * Create a new ExpirableMap.\n   * @param {ExpirableMapOptions<any, any>} options - options for the map.\n   * @param {Iterable<[any, any]>} options.source - an optional source of entries to initialize the map with.\n   * @param {number} options.expirationTime - the time in milliseconds after which entries will expire.\n   */\n  constructor(options: ExpirableMapOptions<K, V> = {}) {\n    const { source = [], expirationTime = 10 * 60 * 1000 } = options;\n    const currentTime = Date.now();\n    this.#inner = new Map(\n      [...source].map(([key, value]) => [key, { value, timestamp: currentTime }]),\n    );\n    this.#expirationTime = expirationTime;\n  }\n\n  /**\n   * Prune removes all expired entries.\n   */\n  prune() {\n    const currentTime = Date.now();\n    for (const [key, entry] of this.#inner.entries()) {\n      if (currentTime - entry.timestamp > this.#expirationTime) {\n        this.#inner.delete(key);\n      }\n    }\n    return this;\n  }\n\n  // Implementing the Map interface\n\n  /**\n   * Set the value for the given key. Prunes expired entries.\n   * @param key for the entry\n   * @param value of the entry\n   * @returns this\n   */\n  set(key: K, value: V) {\n    this.prune();\n    const entry = {\n      value,\n      timestamp: Date.now(),\n    };\n    this.#inner.set(key, entry);\n\n    return this;\n  }\n\n  /**\n   * Get the value associated with the key, if it exists and has not expired.\n   * @param key K\n   * @returns the value associated with the key, or undefined if the key is not present or has expired.\n   */\n  get(key: K) {\n    const entry = this.#inner.get(key);\n    if (entry === undefined) {\n      return undefined;\n    }\n    if (Date.now() - entry.timestamp > this.#expirationTime) {\n      this.#inner.delete(key);\n      return undefined;\n    }\n    return entry.value;\n  }\n\n  /**\n   * Clear all entries.\n   */\n  clear() {\n    this.#inner.clear();\n  }\n\n  /**\n   * Entries returns the entries of the map, without the expiration time.\n   * @returns an iterator over the entries of the map.\n   */\n  entries(): IterableIterator<[K, V]> {\n    const iterator = this.#inner.entries();\n    const generator = function* () {\n      for (const [key, value] of iterator) {\n        yield [key, value.value] as [K, V];\n      }\n    };\n    return generator();\n  }\n\n  /**\n   * Values returns the values of the map, without the expiration time.\n   * @returns an iterator over the values of the map.\n   */\n  values(): IterableIterator<V> {\n    const iterator = this.#inner.values();\n    const generator = function* () {\n      for (const value of iterator) {\n        yield value.value;\n      }\n    };\n    return generator();\n  }\n\n  /**\n   * Keys returns the keys of the map\n   * @returns an iterator over the keys of the map.\n   */\n  keys(): IterableIterator<K> {\n    return this.#inner.keys();\n  }\n\n  /**\n   * forEach calls the callbackfn on each entry of the map.\n   * @param callbackfn to call on each entry\n   * @param thisArg to use as this when calling the callbackfn\n   */\n  forEach(callbackfn: (value: V, key: K, map: Map<K, V>) => void, thisArg?: ExpirableMap<K, V>) {\n    for (const [key, value] of this.#inner.entries()) {\n      callbackfn.call(thisArg, value.value, key, this);\n    }\n  }\n\n  /**\n   * has returns true if the key exists and has not expired.\n   * @param key K\n   * @returns true if the key exists and has not expired.\n   */\n  has(key: K): boolean {\n    return this.#inner.has(key);\n  }\n\n  /**\n   * delete the entry for the given key.\n   * @param key K\n   * @returns true if the key existed and has been deleted.\n   */\n  delete(key: K) {\n    return this.#inner.delete(key);\n  }\n\n  /**\n   * get size of the map.\n   * @returns the size of the map.\n   */\n  get size() {\n    return this.#inner.size;\n  }\n}\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 862, "column": 0}, "map": {"version":3,"file":"der.js","sourceRoot":"","sources":["file:///home/brimzy/.dev/studifi/node_modules/%40dfinity/agent/src/der.ts"],"sourcesContent":["import { bufEquals } from './utils/buffer';\n\nexport const encodeLenBytes = (len: number): number => {\n  if (len <= 0x7f) {\n    return 1;\n  } else if (len <= 0xff) {\n    return 2;\n  } else if (len <= 0xffff) {\n    return 3;\n  } else if (len <= 0xffffff) {\n    return 4;\n  } else {\n    throw new Error('Length too long (> 4 bytes)');\n  }\n};\n\nexport const encodeLen = (buf: Uint8Array, offset: number, len: number): number => {\n  if (len <= 0x7f) {\n    buf[offset] = len;\n    return 1;\n  } else if (len <= 0xff) {\n    buf[offset] = 0x81;\n    buf[offset + 1] = len;\n    return 2;\n  } else if (len <= 0xffff) {\n    buf[offset] = 0x82;\n    buf[offset + 1] = len >> 8;\n    buf[offset + 2] = len;\n    return 3;\n  } else if (len <= 0xffffff) {\n    buf[offset] = 0x83;\n    buf[offset + 1] = len >> 16;\n    buf[offset + 2] = len >> 8;\n    buf[offset + 3] = len;\n    return 4;\n  } else {\n    throw new Error('Length too long (> 4 bytes)');\n  }\n};\n\nexport const decodeLenBytes = (buf: Uint8Array, offset: number): number => {\n  if (buf[offset] < 0x80) return 1;\n  if (buf[offset] === 0x80) throw new Error('Invalid length 0');\n  if (buf[offset] === 0x81) return 2;\n  if (buf[offset] === 0x82) return 3;\n  if (buf[offset] === 0x83) return 4;\n  throw new Error('Length too long (> 4 bytes)');\n};\n\nexport const decodeLen = (buf: Uint8Array, offset: number): number => {\n  const lenBytes = decodeLenBytes(buf, offset);\n  if (lenBytes === 1) return buf[offset];\n  else if (lenBytes === 2) return buf[offset + 1];\n  else if (lenBytes === 3) return (buf[offset + 1] << 8) + buf[offset + 2];\n  else if (lenBytes === 4)\n    return (buf[offset + 1] << 16) + (buf[offset + 2] << 8) + buf[offset + 3];\n  throw new Error('Length too long (> 4 bytes)');\n};\n\n/**\n * A DER encoded `SEQUENCE(OID)` for DER-encoded-COSE\n */\nexport const DER_COSE_OID = Uint8Array.from([\n  ...[0x30, 0x0c], // SEQUENCE\n  ...[0x06, 0x0a], // OID with 10 bytes\n  ...[0x2b, 0x06, 0x01, 0x04, 0x01, 0x83, 0xb8, 0x43, 0x01, 0x01], // DER encoded COSE\n]);\n\n/**\n * A DER encoded `SEQUENCE(OID)` for the Ed25519 algorithm\n */\nexport const ED25519_OID = Uint8Array.from([\n  ...[0x30, 0x05], // SEQUENCE\n  ...[0x06, 0x03], // OID with 3 bytes\n  ...[0x2b, 0x65, 0x70], // id-Ed25519 OID\n]);\n\n/**\n * A DER encoded `SEQUENCE(OID)` for secp256k1 with the ECDSA algorithm\n */\nexport const SECP256K1_OID = Uint8Array.from([\n  ...[0x30, 0x10], // SEQUENCE\n  ...[0x06, 0x07], // OID with 7 bytes\n  ...[0x2a, 0x86, 0x48, 0xce, 0x3d, 0x02, 0x01], // OID ECDSA\n  ...[0x06, 0x05], // OID with 5 bytes\n  ...[0x2b, 0x81, 0x04, 0x00, 0x0a], // OID secp256k1\n]);\n\n/**\n * Wraps the given `payload` in a DER encoding tagged with the given encoded `oid` like so:\n * `SEQUENCE(oid, BITSTRING(payload))`\n *\n * @param payload The payload to encode as the bit string\n * @param oid The DER encoded (and SEQUENCE wrapped!) OID to tag the payload with\n */\nexport function wrapDER(payload: ArrayBuffer, oid: Uint8Array): Uint8Array {\n  // The Bit String header needs to include the unused bit count byte in its length\n  const bitStringHeaderLength = 2 + encodeLenBytes(payload.byteLength + 1);\n  const len = oid.byteLength + bitStringHeaderLength + payload.byteLength;\n  let offset = 0;\n  const buf = new Uint8Array(1 + encodeLenBytes(len) + len);\n  // Sequence\n  buf[offset++] = 0x30;\n  // Sequence Length\n  offset += encodeLen(buf, offset, len);\n\n  // OID\n  buf.set(oid, offset);\n  offset += oid.byteLength;\n\n  // Bit String Header\n  buf[offset++] = 0x03;\n  offset += encodeLen(buf, offset, payload.byteLength + 1);\n  // 0 padding\n  buf[offset++] = 0x00;\n  buf.set(new Uint8Array(payload), offset);\n\n  return buf;\n}\n\n/**\n * Extracts a payload from the given `derEncoded` data, and checks that it was tagged with the given `oid`.\n *\n * `derEncoded = SEQUENCE(oid, BITSTRING(payload))`\n *\n * @param derEncoded The DER encoded and tagged data\n * @param oid The DER encoded (and SEQUENCE wrapped!) expected OID\n * @returns The unwrapped payload\n */\nexport const unwrapDER = (derEncoded: ArrayBuffer, oid: Uint8Array): Uint8Array => {\n  let offset = 0;\n  const expect = (n: number, msg: string) => {\n    if (buf[offset++] !== n) {\n      throw new Error('Expected: ' + msg);\n    }\n  };\n\n  const buf = new Uint8Array(derEncoded);\n  expect(0x30, 'sequence');\n  offset += decodeLenBytes(buf, offset);\n\n  if (!bufEquals(buf.slice(offset, offset + oid.byteLength), oid)) {\n    throw new Error('Not the expected OID.');\n  }\n  offset += oid.byteLength;\n\n  expect(0x03, 'bit string');\n  const payloadLen = decodeLen(buf, offset) - 1; // Subtracting 1 to account for the 0 padding\n  offset += decodeLenBytes(buf, offset);\n  expect(0x00, '0 padding');\n  const result = buf.slice(offset);\n  if (payloadLen !== result.length) {\n    throw new Error(\n      `DER payload mismatch: Expected length ${payloadLen} actual length ${result.length}`,\n    );\n  }\n  return result;\n};\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1045, "column": 0}, "map": {"version":3,"file":"public_key.js","sourceRoot":"","sources":["file:///home/brimzy/.dev/studifi/node_modules/%40dfinity/agent/src/public_key.ts"],"sourcesContent":["import { DerEncodedPublicKey, PublicKey } from './auth';\nimport { ED25519_OID, unwrapDER, wrapDER } from './der';\n\nexport class Ed25519PublicKey implements PublicKey {\n  public static from(key: PublicKey): Ed25519PublicKey {\n    return this.fromDer(key.toDer());\n  }\n\n  public static fromRaw(rawKey: ArrayBuffer): Ed25519PublicKey {\n    return new Ed25519PublicKey(rawKey);\n  }\n\n  public static fromDer(derKey: DerEncodedPublicKey): Ed25519PublicKey {\n    return new Ed25519PublicKey(this.derDecode(derKey));\n  }\n\n  // The length of Ed25519 public keys is always 32 bytes.\n  private static RAW_KEY_LENGTH = 32;\n\n  private static derEncode(publicKey: ArrayBuffer): DerEncodedPublicKey {\n    return wrapDER(publicKey, ED25519_OID).buffer as DerEncodedPublicKey;\n  }\n\n  private static derDecode(key: DerEncodedPublicKey): ArrayBuffer {\n    const unwrapped = unwrapDER(key, ED25519_OID);\n    if (unwrapped.length !== this.RAW_KEY_LENGTH) {\n      throw new Error('An Ed25519 public key must be exactly 32bytes long');\n    }\n    return unwrapped;\n  }\n\n  #rawKey: ArrayBuffer;\n\n  public get rawKey(): ArrayBuffer {\n    return this.#rawKey;\n  }\n\n  #derKey: DerEncodedPublicKey;\n\n  public get derKey(): DerEncodedPublicKey {\n    return this.#derKey;\n  }\n\n  // `fromRaw` and `fromDer` should be used for instantiation, not this constructor.\n  private constructor(key: ArrayBuffer) {\n    if (key.byteLength !== Ed25519PublicKey.RAW_KEY_LENGTH) {\n      throw new Error('An Ed25519 public key must be exactly 32bytes long');\n    }\n    this.#rawKey = key;\n    this.#derKey = Ed25519PublicKey.derEncode(key);\n  }\n\n  public toDer(): DerEncodedPublicKey {\n    return this.derKey;\n  }\n\n  public toRaw(): ArrayBuffer {\n    return this.rawKey;\n  }\n}\n"],"names":[],"mappings":";;;AACA,OAAO,EAAE,WAAW,EAAE,SAAS,EAAE,OAAO,EAAE,MAAM,OAAO,CAAC;;;;;;;;;;;;;;AAElD,MAAO,gBAAgB;IAwC3B,kFAAkF;IAClF,YAAoB,GAAgB,CAAA;QAbpC,yBAAA,GAAA,CAAA,IAAA,EAAA,KAAA,GAAqB;QAMrB,yBAAA,GAAA,CAAA,IAAA,EAAA,KAAA,GAA6B;QAQ3B,IAAI,GAAG,CAAC,UAAU,KAAK,gBAAgB,CAAC,cAAc,EAAE;YACtD,MAAM,IAAI,KAAK,CAAC,oDAAoD,CAAC,CAAC;SACvE;QACD,uBAAA,IAAI,EAAA,0BAAW,GAAG,EAAA,IAAA,CAAC;QACnB,uBAAA,IAAI,EAAA,0BAAW,gBAAgB,CAAC,SAAS,CAAC,GAAG,CAAC,EAAA,IAAA,CAAC;IACjD,CAAC;IA9CM,MAAM,CAAC,IAAI,CAAC,GAAc,EAAA;QAC/B,OAAO,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,KAAK,EAAE,CAAC,CAAC;IACnC,CAAC;IAEM,MAAM,CAAC,OAAO,CAAC,MAAmB,EAAA;QACvC,OAAO,IAAI,gBAAgB,CAAC,MAAM,CAAC,CAAC;IACtC,CAAC;IAEM,MAAM,CAAC,OAAO,CAAC,MAA2B,EAAA;QAC/C,OAAO,IAAI,gBAAgB,CAAC,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC,CAAC;IACtD,CAAC;IAKO,MAAM,CAAC,SAAS,CAAC,SAAsB,EAAA;QAC7C,OAAO,yKAAA,AAAO,EAAC,SAAS,6JAAE,cAAW,CAAC,CAAC,MAA6B,CAAC;IACvE,CAAC;IAEO,MAAM,CAAC,SAAS,CAAC,GAAwB,EAAA;QAC/C,MAAM,SAAS,kKAAG,YAAA,AAAS,EAAC,GAAG,6JAAE,cAAW,CAAC,CAAC;QAC9C,IAAI,SAAS,CAAC,MAAM,KAAK,IAAI,CAAC,cAAc,EAAE;YAC5C,MAAM,IAAI,KAAK,CAAC,oDAAoD,CAAC,CAAC;SACvE;QACD,OAAO,SAAS,CAAC;IACnB,CAAC;IAID,IAAW,MAAM,GAAA;QACf,OAAO,uBAAA,IAAI,EAAA,0BAAA,IAAQ,CAAC;IACtB,CAAC;IAID,IAAW,MAAM,GAAA;QACf,OAAO,uBAAA,IAAI,EAAA,0BAAA,IAAQ,CAAC;IACtB,CAAC;IAWM,KAAK,GAAA;QACV,OAAO,IAAI,CAAC,MAAM,CAAC;IACrB,CAAC;IAEM,KAAK,GAAA;QACV,OAAO,IAAI,CAAC,MAAM,CAAC;IACrB,CAAC;;;AA1CD,wDAAwD;AACzC,iBAAA,cAAc,GAAG,EAAE,CAAC","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1114, "column": 0}, "map": {"version":3,"file":"observable.js","sourceRoot":"","sources":["file:///home/brimzy/.dev/studifi/node_modules/%40dfinity/agent/src/observable.ts"],"sourcesContent":["import { AgentError } from './errors';\n\nexport type ObserveFunction<T> = (data: T, ...rest: unknown[]) => void;\n\nexport class Observable<T> {\n  observers: ObserveFunction<T>[];\n\n  constructor() {\n    this.observers = [];\n  }\n\n  subscribe(func: ObserveFunction<T>) {\n    this.observers.push(func);\n  }\n\n  unsubscribe(func: ObserveFunction<T>) {\n    this.observers = this.observers.filter(observer => observer !== func);\n  }\n\n  notify(data: T, ...rest: unknown[]) {\n    this.observers.forEach(observer => observer(data, ...rest));\n  }\n}\n\nexport type AgentLog =\n  | {\n      message: string;\n      level: 'warn' | 'info';\n    }\n  | {\n      message: string;\n      level: 'error';\n      error: AgentError;\n    };\n\nexport class ObservableLog extends Observable<AgentLog> {\n  constructor() {\n    super();\n  }\n  print(message: string, ...rest: unknown[]) {\n    this.notify({ message, level: 'info' }, ...rest);\n  }\n  warn(message: string, ...rest: unknown[]) {\n    this.notify({ message, level: 'warn' }, ...rest);\n  }\n  error(message: string, error: AgentError, ...rest: unknown[]) {\n    this.notify({ message, level: 'error', error }, ...rest);\n  }\n}\n"],"names":[],"mappings":";;;;AAIM,MAAO,UAAU;IAGrB,aAAA;QACE,IAAI,CAAC,SAAS,GAAG,EAAE,CAAC;IACtB,CAAC;IAED,SAAS,CAAC,IAAwB,EAAA;QAChC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IAC5B,CAAC;IAED,WAAW,CAAC,IAAwB,EAAA;QAClC,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC,MAAM,EAAC,QAAQ,CAAC,EAAE,AAAC,QAAQ,KAAK,IAAI,CAAC,CAAC;IACxE,CAAC;IAED,MAAM,CAAC,IAAO,EAAE,GAAG,IAAe,EAAA;QAChC,IAAI,CAAC,SAAS,CAAC,OAAO,EAAC,QAAQ,CAAC,EAAE,AAAC,QAAQ,CAAC,IAAI,EAAE,GAAG,IAAI,CAAC,CAAC,CAAC;IAC9D,CAAC;CACF;AAaK,MAAO,aAAc,SAAQ,UAAoB;IACrD,aAAA;QACE,KAAK,EAAE,CAAC;IACV,CAAC;IACD,KAAK,CAAC,OAAe,EAAE,GAAG,IAAe,EAAA;QACvC,IAAI,CAAC,MAAM,CAAC;YAAE,OAAO;YAAE,KAAK,EAAE,MAAM;QAAA,CAAE,EAAE,GAAG,IAAI,CAAC,CAAC;IACnD,CAAC;IACD,IAAI,CAAC,OAAe,EAAE,GAAG,IAAe,EAAA;QACtC,IAAI,CAAC,MAAM,CAAC;YAAE,OAAO;YAAE,KAAK,EAAE,MAAM;QAAA,CAAE,EAAE,GAAG,IAAI,CAAC,CAAC;IACnD,CAAC;IACD,KAAK,CAAC,OAAe,EAAE,KAAiB,EAAE,GAAG,IAAe,EAAA;QAC1D,IAAI,CAAC,MAAM,CAAC;YAAE,OAAO;YAAE,KAAK,EAAE,OAAO;YAAE,KAAK;QAAA,CAAE,EAAE,GAAG,IAAI,CAAC,CAAC;IAC3D,CAAC;CACF","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1162, "column": 0}, "map": {"version":3,"file":"backoff.js","sourceRoot":"","sources":["file:///home/brimzy/.dev/studifi/node_modules/%40dfinity/agent/src/polling/backoff.ts"],"sourcesContent":["const RANDOMIZATION_FACTOR = 0.5;\nconst MULTIPLIER = 1.5;\nconst INITIAL_INTERVAL_MSEC = 500;\nconst MAX_INTERVAL_MSEC = 60_000;\nconst MAX_ELAPSED_TIME_MSEC = 900_000;\nconst MAX_ITERATIONS = 10;\n\nexport type BackoffStrategy = {\n  next: () => number | null;\n  currentInterval?: number;\n  count?: number;\n  ellapsedTimeInMsec?: number;\n};\n\nexport type BackoffStrategyArgs = {\n  maxIterations?: number;\n  maxElapsedTime?: number;\n};\n\nexport type BackoffStrategyFactory = (args?: BackoffStrategyArgs) => BackoffStrategy;\n\n// export type BackoffStrategyGenerator = Generator<number, void, unknown>;\n\nexport type ExponentialBackoffOptions = {\n  initialInterval?: number;\n  randomizationFactor?: number;\n  multiplier?: number;\n  maxInterval?: number;\n  maxElapsedTime?: number;\n  maxIterations?: number;\n  date?: DateConstructor;\n};\n\n/**\n * Exponential backoff strategy.\n */\nexport class ExponentialBackoff {\n  #currentInterval: number;\n  #randomizationFactor: number;\n  #multiplier: number;\n  #maxInterval: number;\n  #startTime: number;\n  #maxElapsedTime: number;\n  #maxIterations: number;\n  #date: DateConstructor;\n  #count = 0;\n\n  static default = {\n    initialInterval: INITIAL_INTERVAL_MSEC,\n    randomizationFactor: RANDOMIZATION_FACTOR,\n    multiplier: MULTIPLIER,\n    maxInterval: MAX_INTERVAL_MSEC,\n    // 1 minute\n    maxElapsedTime: MAX_ELAPSED_TIME_MSEC,\n    maxIterations: MAX_ITERATIONS,\n    date: Date,\n  };\n\n  constructor(options: ExponentialBackoffOptions = ExponentialBackoff.default) {\n    const {\n      initialInterval = INITIAL_INTERVAL_MSEC,\n      randomizationFactor = RANDOMIZATION_FACTOR,\n      multiplier = MULTIPLIER,\n      maxInterval = MAX_INTERVAL_MSEC,\n      maxElapsedTime = MAX_ELAPSED_TIME_MSEC,\n      maxIterations = MAX_ITERATIONS,\n      date = Date,\n    } = options;\n    this.#currentInterval = initialInterval;\n    this.#randomizationFactor = randomizationFactor;\n    this.#multiplier = multiplier;\n    this.#maxInterval = maxInterval;\n    this.#date = date;\n    this.#startTime = date.now();\n    this.#maxElapsedTime = maxElapsedTime;\n    this.#maxIterations = maxIterations;\n  }\n\n  get ellapsedTimeInMsec() {\n    return this.#date.now() - this.#startTime;\n  }\n\n  get currentInterval() {\n    return this.#currentInterval;\n  }\n\n  get count() {\n    return this.#count;\n  }\n\n  get randomValueFromInterval() {\n    const delta = this.#randomizationFactor * this.#currentInterval;\n    const min = this.#currentInterval - delta;\n    const max = this.#currentInterval + delta;\n    return Math.random() * (max - min) + min;\n  }\n\n  public incrementCurrentInterval() {\n    this.#currentInterval = Math.min(this.#currentInterval * this.#multiplier, this.#maxInterval);\n    this.#count++;\n\n    return this.#currentInterval;\n  }\n\n  public next() {\n    if (this.ellapsedTimeInMsec >= this.#maxElapsedTime || this.#count >= this.#maxIterations) {\n      return null;\n    } else {\n      this.incrementCurrentInterval();\n      return this.randomValueFromInterval;\n    }\n  }\n}\n/**\n * Utility function to create an exponential backoff iterator.\n * @param options - for the exponential backoff\n * @returns an iterator that yields the next delay in the exponential backoff\n * @yields the next delay in the exponential backoff\n */\nexport function* exponentialBackoff(\n  options: ExponentialBackoffOptions = ExponentialBackoff.default,\n) {\n  const backoff = new ExponentialBackoff(options);\n\n  let next = backoff.next();\n  while (next) {\n    yield next;\n    next = backoff.next();\n  }\n}\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1260, "column": 0}, "map": {"version":3,"file":"index.js","sourceRoot":"","sources":["file:///home/brimzy/.dev/studifi/node_modules/%40dfinity/agent/src/agent/http/index.ts"],"sourcesContent":["import { JsonObject } from '@dfinity/candid';\nimport { Principal } from '@dfinity/principal';\nimport { AgentError } from '../../errors';\nimport { AnonymousIdentity, Identity } from '../../auth';\nimport * as cbor from '../../cbor';\nimport { RequestId, hashOfMap, requestIdOf } from '../../request_id';\nimport { bufEquals, bufFromBufLike, concat, fromHex, toHex } from '../../utils/buffer';\nimport {\n  Agent,\n  ApiQueryResponse,\n  HttpDetailsResponse,\n  QueryFields,\n  QueryResponse,\n  ReadStateOptions,\n  ReadStateResponse,\n  SubmitResponse,\n  v3ResponseBody,\n} from '../api';\nimport { Expiry, httpHeadersTransform, makeNonceTransform } from './transforms';\nimport {\n  CallRequest,\n  Endpoint,\n  HttpAgentRequest,\n  HttpAgentRequestTransformFn,\n  HttpAgentSubmitRequest,\n  makeNonce,\n  Nonce,\n  QueryRequest,\n  ReadRequestType,\n  SubmitRequestType,\n} from './types';\nimport {\n  AgentCallError,\n  AgentHTTPResponseError,\n  AgentQueryError,\n  AgentReadStateError,\n} from './errors';\nimport { SubnetStatus, request } from '../../canisterStatus';\nimport {\n  CertificateVerificationError,\n  HashTree,\n  LookupStatus,\n  lookup_path,\n} from '../../certificate';\nimport { ed25519 } from '@noble/curves/ed25519';\nimport { ExpirableMap } from '../../utils/expirableMap';\nimport { Ed25519PublicKey } from '../../public_key';\nimport { decodeTime } from '../../utils/leb';\nimport { ObservableLog } from '../../observable';\nimport { BackoffStrategy, BackoffStrategyFactory, ExponentialBackoff } from '../../polling/backoff';\nexport * from './transforms';\nexport * from './errors';\nexport { Nonce, makeNonce } from './types';\n\nexport enum RequestStatusResponseStatus {\n  Received = 'received',\n  Processing = 'processing',\n  Replied = 'replied',\n  Rejected = 'rejected',\n  Unknown = 'unknown',\n  Done = 'done',\n}\n\nconst MINUTE_TO_MSECS = 60 * 1000;\n\n// Root public key for the IC, encoded as hex\nexport const IC_ROOT_KEY =\n  '308182301d060d2b0601040182dc7c0503010201060c2b0601040182dc7c05030201036100814' +\n  'c0e6ec71fab583b08bd81373c255c3c371b2e84863c98a4f1e08b74235d14fb5d9c0cd546d968' +\n  '5f913a0c0b2cc5341583bf4b4392e467db96d65b9bb4cb717112f8472e0d5a4d14505ffd7484' +\n  'b01291091c5f87b98883463f98091a0baaae';\n\nexport const MANAGEMENT_CANISTER_ID = 'aaaaa-aa';\n\n// IC0 domain info\nconst IC0_DOMAIN = 'ic0.app';\nconst IC0_SUB_DOMAIN = '.ic0.app';\n\nconst ICP0_DOMAIN = 'icp0.io';\nconst ICP0_SUB_DOMAIN = '.icp0.io';\n\nconst ICP_API_DOMAIN = 'icp-api.io';\nconst ICP_API_SUB_DOMAIN = '.icp-api.io';\n\nclass HttpDefaultFetchError extends AgentError {\n  constructor(public readonly message: string) {\n    super(message);\n  }\n}\nexport class IdentityInvalidError extends AgentError {\n  constructor(public readonly message: string) {\n    super(message);\n  }\n}\n\n// HttpAgent options that can be used at construction.\nexport interface HttpAgentOptions {\n  // A surrogate to the global fetch function. Useful for testing.\n  fetch?: typeof fetch;\n\n  // Additional options to pass along to fetch. Will not override fields that\n  // the agent already needs to set\n  // Should follow the RequestInit interface, but we intentially support non-standard fields\n  fetchOptions?: Record<string, unknown>;\n\n  // Additional options to pass along to fetch for the call API.\n  callOptions?: Record<string, unknown>;\n\n  // The host to use for the client. By default, uses the same host as\n  // the current page.\n  host?: string;\n\n  // The principal used to send messages. This cannot be empty at the request\n  // time (will throw).\n  identity?: Identity | Promise<Identity>;\n\n  /**\n   * The maximum time a request can be delayed before being rejected.\n   * @default 5 minutes\n   */\n  ingressExpiryInMinutes?: number;\n\n  credentials?: {\n    name: string;\n    password?: string;\n  };\n  /**\n   * Adds a unique {@link Nonce} with each query.\n   * Enabling will prevent queries from being answered with a cached response.\n   * @example\n   * const agent = new HttpAgent({ useQueryNonces: true });\n   * agent.addTransform(makeNonceTransform(makeNonce);\n   * @default false\n   */\n  useQueryNonces?: boolean;\n  /**\n   * Number of times to retry requests before throwing an error\n   * @default 3\n   */\n  retryTimes?: number;\n  /**\n   * The strategy to use for backoff when retrying requests\n   */\n  backoffStrategy?: BackoffStrategyFactory;\n  /**\n   * Whether the agent should verify signatures signed by node keys on query responses. Increases security, but adds overhead and must make a separate request to cache the node keys for the canister's subnet.\n   * @default true\n   */\n  verifyQuerySignatures?: boolean;\n  /**\n   * Whether to log to the console. Defaults to false.\n   */\n  logToConsole?: boolean;\n\n  /**\n   * Alternate root key to use for verifying certificates. If not provided, the default IC root key will be used.\n   */\n  rootKey?: ArrayBuffer;\n\n  /**\n   * Whether or not the root key should be automatically fetched during construction.\n   */\n  shouldFetchRootKey?: boolean;\n}\n\nfunction getDefaultFetch(): typeof fetch {\n  let defaultFetch;\n\n  if (typeof window !== 'undefined') {\n    // Browser context\n    if (window.fetch) {\n      defaultFetch = window.fetch.bind(window);\n    } else {\n      throw new HttpDefaultFetchError(\n        'Fetch implementation was not available. You appear to be in a browser context, but window.fetch was not present.',\n      );\n    }\n  } else if (typeof global !== 'undefined') {\n    // Node context\n    if (global.fetch) {\n      defaultFetch = global.fetch.bind(global);\n    } else {\n      throw new HttpDefaultFetchError(\n        'Fetch implementation was not available. You appear to be in a Node.js context, but global.fetch was not available.',\n      );\n    }\n  } else if (typeof self !== 'undefined') {\n    if (self.fetch) {\n      defaultFetch = self.fetch.bind(self);\n    }\n  }\n\n  if (defaultFetch) {\n    return defaultFetch;\n  }\n  throw new HttpDefaultFetchError(\n    'Fetch implementation was not available. Please provide fetch to the HttpAgent constructor, or ensure it is available in the window or global context.',\n  );\n}\n\nfunction determineHost(configuredHost: string | undefined): string {\n  let host: URL;\n  if (configuredHost !== undefined) {\n    if (!configuredHost.match(/^[a-z]+:/) && typeof window !== 'undefined') {\n      host = new URL(window.location.protocol + '//' + configuredHost);\n    } else {\n      host = new URL(configuredHost);\n    }\n  } else {\n    // Mainnet, local, and remote environments will have the api route available\n    const knownHosts = ['ic0.app', 'icp0.io', '127.0.0.1', 'localhost'];\n    const remoteHosts = ['.github.dev', '.gitpod.io'];\n    const location = typeof window !== 'undefined' ? window.location : undefined;\n    const hostname = location?.hostname;\n    let knownHost;\n    if (hostname && typeof hostname === 'string') {\n      if (remoteHosts.some(host => hostname.endsWith(host))) {\n        knownHost = hostname;\n      } else {\n        knownHost = knownHosts.find(host => hostname.endsWith(host));\n      }\n    }\n\n    if (location && knownHost) {\n      // If the user is on a boundary-node provided host, we can use the same host for the agent\n      host = new URL(\n        `${location.protocol}//${knownHost}${location.port ? ':' + location.port : ''}`,\n      );\n    } else {\n      host = new URL('https://icp-api.io');\n    }\n  }\n  return host.toString();\n}\n\ninterface V1HttpAgentInterface {\n  _identity: Promise<Identity> | null;\n  readonly _fetch: typeof fetch;\n  readonly _fetchOptions?: Record<string, unknown>;\n  readonly _callOptions?: Record<string, unknown>;\n\n  readonly _host: URL;\n  readonly _credentials: string | undefined;\n  readonly _retryTimes: number; // Retry requests N times before erroring by default\n  _isAgent: true;\n}\n\n/** \n * A HTTP agent allows users to interact with a client of the internet computer\nusing the available methods. It exposes an API that closely follows the\npublic view of the internet computer, and is not intended to be exposed\ndirectly to the majority of users due to its low-level interface.\n * There is a pipeline to apply transformations to the request before sending\nit to the client. This is to decouple signature, nonce generation and\nother computations so that this class can stay as simple as possible while\nallowing extensions.\n */\nexport class HttpAgent implements Agent {\n  public rootKey: ArrayBuffer | null;\n  #rootKeyPromise: Promise<ArrayBuffer> | null = null;\n  #shouldFetchRootKey: boolean = false;\n  #identity: Promise<Identity> | null;\n  readonly #fetch: typeof fetch;\n  readonly #fetchOptions?: Record<string, unknown>;\n  readonly #callOptions?: Record<string, unknown>;\n  #timeDiffMsecs = 0;\n  readonly host: URL;\n  readonly #credentials: string | undefined;\n  readonly #retryTimes; // Retry requests N times before erroring by default\n  #backoffStrategy: BackoffStrategyFactory;\n  readonly #maxIngressExpiryInMinutes: number;\n\n  // Public signature to help with type checking.\n  public readonly _isAgent = true;\n  public config: HttpAgentOptions = {};\n\n  // The UTC time in milliseconds when the latest request was made\n  #waterMark = 0;\n\n  get waterMark(): number {\n    return this.#waterMark;\n  }\n\n  public log: ObservableLog = new ObservableLog();\n\n  #queryPipeline: HttpAgentRequestTransformFn[] = [];\n  #updatePipeline: HttpAgentRequestTransformFn[] = [];\n\n  #subnetKeys: ExpirableMap<string, SubnetStatus> = new ExpirableMap({\n    expirationTime: 5 * 60 * 1000, // 5 minutes\n  });\n  #verifyQuerySignatures = true;\n\n  /**\n   * @param options - Options for the HttpAgent\n   * @deprecated Use `HttpAgent.create` or `HttpAgent.createSync` instead\n   */\n  constructor(options: HttpAgentOptions = {}) {\n    this.config = options;\n    this.#fetch = options.fetch || getDefaultFetch() || fetch.bind(global);\n    this.#fetchOptions = options.fetchOptions;\n    this.#callOptions = options.callOptions;\n    this.#shouldFetchRootKey = options.shouldFetchRootKey ?? false;\n\n    // Use provided root key, otherwise fall back to IC_ROOT_KEY for mainnet or null if the key needs to be fetched\n    if (options.rootKey) {\n      this.rootKey = options.rootKey;\n    } else if (this.#shouldFetchRootKey) {\n      this.rootKey = null;\n    } else {\n      this.rootKey = fromHex(IC_ROOT_KEY);\n    }\n\n    const host = determineHost(options.host);\n    this.host = new URL(host);\n\n    if (options.verifyQuerySignatures !== undefined) {\n      this.#verifyQuerySignatures = options.verifyQuerySignatures;\n    }\n    // Default is 3\n    this.#retryTimes = options.retryTimes ?? 3;\n    // Delay strategy for retries. Default is exponential backoff\n    const defaultBackoffFactory = () =>\n      new ExponentialBackoff({\n        maxIterations: this.#retryTimes,\n      });\n    this.#backoffStrategy = options.backoffStrategy || defaultBackoffFactory;\n    // Rewrite to avoid redirects\n    if (this.host.hostname.endsWith(IC0_SUB_DOMAIN)) {\n      this.host.hostname = IC0_DOMAIN;\n    } else if (this.host.hostname.endsWith(ICP0_SUB_DOMAIN)) {\n      this.host.hostname = ICP0_DOMAIN;\n    } else if (this.host.hostname.endsWith(ICP_API_SUB_DOMAIN)) {\n      this.host.hostname = ICP_API_DOMAIN;\n    }\n\n    if (options.credentials) {\n      const { name, password } = options.credentials;\n      this.#credentials = `${name}${password ? ':' + password : ''}`;\n    }\n    this.#identity = Promise.resolve(options.identity || new AnonymousIdentity());\n\n    if (options.ingressExpiryInMinutes && options.ingressExpiryInMinutes > 5) {\n      throw new AgentError(\n        `The maximum ingress expiry time is 5 minutes. Provided ingress expiry time is ${options.ingressExpiryInMinutes} minutes.`,\n      );\n    }\n    if (options.ingressExpiryInMinutes && options.ingressExpiryInMinutes <= 0) {\n      throw new AgentError(\n        `Ingress expiry time must be greater than 0. Provided ingress expiry time is ${options.ingressExpiryInMinutes} minutes.`,\n      );\n    }\n\n    this.#maxIngressExpiryInMinutes = options.ingressExpiryInMinutes || 5;\n\n    // Add a nonce transform to ensure calls are unique\n    this.addTransform('update', makeNonceTransform(makeNonce));\n    if (options.useQueryNonces) {\n      this.addTransform('query', makeNonceTransform(makeNonce));\n    }\n    if (options.logToConsole) {\n      this.log.subscribe(log => {\n        if (log.level === 'error') {\n          console.error(log.message);\n        } else if (log.level === 'warn') {\n          console.warn(log.message);\n        } else {\n          console.log(log.message);\n        }\n      });\n    }\n  }\n\n  public static createSync(options: HttpAgentOptions = {}): HttpAgent {\n    return new this({ ...options });\n  }\n\n  public static async create(\n    options: HttpAgentOptions = {\n      shouldFetchRootKey: false,\n    },\n  ): Promise<HttpAgent> {\n    const agent = HttpAgent.createSync(options);\n    const initPromises: Promise<ArrayBuffer | void>[] = [agent.syncTime()];\n    if (agent.host.toString() !== 'https://icp-api.io' && options.shouldFetchRootKey) {\n      initPromises.push(agent.fetchRootKey());\n    }\n    await Promise.all(initPromises);\n    return agent;\n  }\n\n  public static async from(\n    agent: Pick<HttpAgent, 'config'> | V1HttpAgentInterface,\n  ): Promise<HttpAgent> {\n    try {\n      if ('config' in agent) {\n        return await HttpAgent.create(agent.config);\n      }\n      return await HttpAgent.create({\n        fetch: agent._fetch,\n        fetchOptions: agent._fetchOptions,\n        callOptions: agent._callOptions,\n        host: agent._host.toString(),\n        identity: agent._identity ?? undefined,\n      });\n    } catch {\n      throw new AgentError('Failed to create agent from provided agent');\n    }\n  }\n\n  public isLocal(): boolean {\n    const hostname = this.host.hostname;\n    return hostname === '127.0.0.1' || hostname.endsWith('127.0.0.1');\n  }\n\n  public addTransform(\n    type: 'update' | 'query',\n    fn: HttpAgentRequestTransformFn,\n    priority = fn.priority || 0,\n  ): void {\n    if (type === 'update') {\n      // Keep the pipeline sorted at all time, by priority.\n      const i = this.#updatePipeline.findIndex(x => (x.priority || 0) < priority);\n      this.#updatePipeline.splice(\n        i >= 0 ? i : this.#updatePipeline.length,\n        0,\n        Object.assign(fn, { priority }),\n      );\n    } else if (type === 'query') {\n      // Keep the pipeline sorted at all time, by priority.\n      const i = this.#queryPipeline.findIndex(x => (x.priority || 0) < priority);\n      this.#queryPipeline.splice(\n        i >= 0 ? i : this.#queryPipeline.length,\n        0,\n        Object.assign(fn, { priority }),\n      );\n    }\n  }\n\n  public async getPrincipal(): Promise<Principal> {\n    if (!this.#identity) {\n      throw new IdentityInvalidError(\n        \"This identity has expired due this application's security policy. Please refresh your authentication.\",\n      );\n    }\n    return (await this.#identity).getPrincipal();\n  }\n\n  /**\n   * Makes a call to a canister method.\n   * @param canisterId - The ID of the canister to call. Can be a Principal or a string.\n   * @param options - Options for the call.\n   * @param options.methodName - The name of the method to call.\n   * @param options.arg - The argument to pass to the method, as an ArrayBuffer.\n   * @param options.effectiveCanisterId - (Optional) The effective canister ID, if different from the target canister ID.\n   * @param options.callSync - (Optional) Whether to use synchronous call mode. Defaults to true.\n   * @param options.nonce - (Optional) A unique nonce for the request. If provided, it will override any nonce set by transforms.\n   * @param identity - (Optional) The identity to use for the call. If not provided, the agent's current identity will be used.\n   * @returns A promise that resolves to the response of the call, including the request ID and response details.\n   */\n  public async call(\n    canisterId: Principal | string,\n    options: {\n      methodName: string;\n      arg: ArrayBuffer;\n      effectiveCanisterId?: Principal | string;\n      callSync?: boolean;\n      nonce?: Uint8Array | Nonce;\n    },\n    identity?: Identity | Promise<Identity>,\n  ): Promise<SubmitResponse> {\n    await this.#rootKeyGuard();\n    // TODO - restore this value\n    const callSync = options.callSync ?? true;\n    const id = await(identity !== undefined ? await identity : await this.#identity);\n    if (!id) {\n      throw new IdentityInvalidError(\n        \"This identity has expired due this application's security policy. Please refresh your authentication.\",\n      );\n    }\n    const canister = Principal.from(canisterId);\n    const ecid = options.effectiveCanisterId\n      ? Principal.from(options.effectiveCanisterId)\n      : canister;\n\n    const sender: Principal = id.getPrincipal() || Principal.anonymous();\n\n    let ingress_expiry = new Expiry(this.#maxIngressExpiryInMinutes * MINUTE_TO_MSECS);\n\n    // If the value is off by more than 30 seconds, reconcile system time with the network\n    if (Math.abs(this.#timeDiffMsecs) > 1_000 * 30) {\n      ingress_expiry = new Expiry(\n        this.#maxIngressExpiryInMinutes * MINUTE_TO_MSECS + this.#timeDiffMsecs,\n      );\n    }\n\n    const submit: CallRequest = {\n      request_type: SubmitRequestType.Call,\n      canister_id: canister,\n      method_name: options.methodName,\n      arg: options.arg,\n      sender,\n      ingress_expiry,\n    };\n\n    let transformedRequest = (await this._transform({\n      request: {\n        body: null,\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/cbor',\n          ...(this.#credentials ? { Authorization: 'Basic ' + btoa(this.#credentials) } : {}),\n        },\n      },\n      endpoint: Endpoint.Call,\n      body: submit,\n    })) as HttpAgentSubmitRequest;\n\n    // Determine the nonce to use for the request\n    let nonce: Nonce | undefined;\n\n    // Check if a nonce is provided in the options and convert it to the correct type\n    if (options?.nonce) {\n      nonce = toNonce(options.nonce);\n    }\n    // If no nonce is provided in the options, check the transformedRequest body\n    else if (transformedRequest.body.nonce) {\n      nonce = toNonce(transformedRequest.body.nonce);\n    }\n    // If no nonce is found, set it to undefined\n    else {\n      nonce = undefined;\n    }\n\n    // Assign the determined nonce to the submit object\n    submit.nonce = nonce;\n\n    /**\n     * Converts an ArrayBuffer or Uint8Array to a Nonce type.\n     * @param buf - The buffer to convert.\n     * @returns The buffer as a Nonce.\n     */\n    function toNonce(buf: ArrayBuffer | Uint8Array): Nonce {\n      return new Uint8Array(buf) as Nonce;\n    }\n\n    // Apply transform for identity.\n    transformedRequest = (await id.transformRequest(transformedRequest)) as HttpAgentSubmitRequest;\n\n    const body = cbor.encode(transformedRequest.body);\n    const backoff = this.#backoffStrategy();\n    const requestId = requestIdOf(submit);\n    try {\n      // Attempt v3 sync call\n      const requestSync = () => {\n        this.log.print(\n          `fetching \"/api/v3/canister/${ecid.toText()}/call\" with request:`,\n          transformedRequest,\n        );\n        return this.#fetch('' + new URL(`/api/v3/canister/${ecid.toText()}/call`, this.host), {\n          ...this.#callOptions,\n          ...transformedRequest.request,\n          body,\n        });\n      };\n\n      const requestAsync = () => {\n        this.log.print(\n          `fetching \"/api/v2/canister/${ecid.toText()}/call\" with request:`,\n          transformedRequest,\n        );\n        return this.#fetch('' + new URL(`/api/v2/canister/${ecid.toText()}/call`, this.host), {\n          ...this.#callOptions,\n          ...transformedRequest.request,\n          body,\n        });\n      };\n\n      const request = this.#requestAndRetry({\n        request: callSync ? requestSync : requestAsync,\n        backoff,\n        tries: 0,\n      });\n\n      const response = await request;\n      const responseBuffer = await response.arrayBuffer();\n      const responseBody = (\n        response.status === 200 && responseBuffer.byteLength > 0\n          ? cbor.decode(responseBuffer)\n          : null\n      ) as SubmitResponse['response']['body'];\n\n      // Update the watermark with the latest time from consensus\n      if (responseBody && 'certificate' in (responseBody as v3ResponseBody)) {\n        const time = await this.parseTimeFromResponse({\n          certificate: (responseBody as v3ResponseBody).certificate,\n        });\n        this.#waterMark = time;\n      }\n\n      return {\n        requestId,\n        response: {\n          ok: response.ok,\n          status: response.status,\n          statusText: response.statusText,\n          body: responseBody,\n          headers: httpHeadersTransform(response.headers),\n        },\n        requestDetails: submit,\n      };\n    } catch (error) {\n      // If the error is due to the v3 api not being supported, fall back to v2\n      if ((error as AgentError).message.includes('v3 api not supported.')) {\n        this.log.warn('v3 api not supported. Fall back to v2');\n        return this.call(\n          canisterId,\n          {\n            ...options,\n            // disable v3 api\n            callSync: false,\n          },\n          identity,\n        );\n      }\n      const message = `Error while making call: ${(error as Error).message ?? String(error)}`;\n      const callError = new AgentCallError(\n        message,\n        error as HttpDetailsResponse,\n        toHex(requestId),\n        toHex(transformedRequest.body.sender_pubkey),\n        toHex(transformedRequest.body.sender_sig),\n        String(transformedRequest.body.content.ingress_expiry['_value']),\n      );\n      this.log.error(message, callError);\n      throw callError;\n    }\n  }\n\n  async #requestAndRetryQuery(args: {\n    ecid: Principal;\n    transformedRequest: HttpAgentRequest;\n    body: ArrayBuffer;\n    requestId: RequestId;\n    backoff: BackoffStrategy;\n    tries: number;\n  }): Promise<ApiQueryResponse> {\n    const { ecid, transformedRequest, body, requestId, backoff, tries } = args;\n\n    const delay = tries === 0 ? 0 : backoff.next();\n    this.log.print(`fetching \"/api/v2/canister/${ecid.toString()}/query\" with tries:`, {\n      tries,\n      backoff,\n      delay,\n    });\n\n    // If delay is null, the backoff strategy is exhausted due to a maximum number of retries, duration, or other reason\n    if (delay === null) {\n      throw new AgentError(\n        `Timestamp failed to pass the watermark after retrying the configured ${\n          this.#retryTimes\n        } times. We cannot guarantee the integrity of the response since it could be a replay attack.`,\n      );\n    }\n\n    if (delay > 0) {\n      await new Promise(resolve => setTimeout(resolve, delay));\n    }\n    let response: ApiQueryResponse;\n    // Make the request and retry if it throws an error\n    try {\n      this.log.print(\n        `fetching \"/api/v2/canister/${ecid.toString()}/query\" with request:`,\n        transformedRequest,\n      );\n      const fetchResponse = await this.#fetch(\n        '' + new URL(`/api/v2/canister/${ecid.toString()}/query`, this.host),\n        {\n          ...this.#fetchOptions,\n          ...transformedRequest.request,\n          body,\n        },\n      );\n      if (fetchResponse.status === 200) {\n        const queryResponse: QueryResponse = cbor.decode(await fetchResponse.arrayBuffer());\n        response = {\n          ...queryResponse,\n          httpDetails: {\n            ok: fetchResponse.ok,\n            status: fetchResponse.status,\n            statusText: fetchResponse.statusText,\n            headers: httpHeadersTransform(fetchResponse.headers),\n          },\n          requestId,\n        };\n      } else {\n        throw new AgentHTTPResponseError(\n          `Gateway returned an error:\\n` +\n            `  Code: ${fetchResponse.status} (${fetchResponse.statusText})\\n` +\n            `  Body: ${await fetchResponse.text()}\\n`,\n          {\n            ok: fetchResponse.ok,\n            status: fetchResponse.status,\n            statusText: fetchResponse.statusText,\n            headers: httpHeadersTransform(fetchResponse.headers),\n          },\n        );\n      }\n    } catch (error) {\n      if (tries < this.#retryTimes) {\n        this.log.warn(\n          `Caught exception while attempting to make query:\\n` +\n            `  ${error}\\n` +\n            `  Retrying query.`,\n        );\n        return await this.#requestAndRetryQuery({ ...args, tries: tries + 1 });\n      }\n      throw error;\n    }\n\n    const timestamp = response.signatures?.[0]?.timestamp;\n\n    // Skip watermark verification if the user has set verifyQuerySignatures to false\n    if (!this.#verifyQuerySignatures) {\n      return response;\n    }\n\n    if (!timestamp) {\n      throw new Error(\n        'Timestamp not found in query response. This suggests a malformed or malicious response.',\n      );\n    }\n\n    // Convert the timestamp to milliseconds\n    const timeStampInMs = Number(BigInt(timestamp) / BigInt(1_000_000));\n\n    this.log.print('watermark and timestamp', {\n      waterMark: this.waterMark,\n      timestamp: timeStampInMs,\n    });\n\n    // If the timestamp is less than the watermark, retry the request up to the retry limit\n    if (Number(this.waterMark) > timeStampInMs) {\n      const error = new AgentError('Timestamp is below the watermark. Retrying query.');\n      this.log.error('Timestamp is below', error, {\n        timestamp,\n        waterMark: this.waterMark,\n      });\n      if (tries < this.#retryTimes) {\n        return await this.#requestAndRetryQuery({ ...args, tries: tries + 1 });\n      }\n      {\n        throw new AgentError(\n          `Timestamp failed to pass the watermark after retrying the configured ${\n            this.#retryTimes\n          } times. We cannot guarantee the integrity of the response since it could be a replay attack.`,\n        );\n      }\n    }\n\n    return response;\n  }\n\n  async #requestAndRetry(args: {\n    request: () => Promise<Response>;\n    backoff: BackoffStrategy;\n    tries: number;\n  }): Promise<Response> {\n    const { request, backoff, tries } = args;\n    const delay = tries === 0 ? 0 : backoff.next();\n\n    // If delay is null, the backoff strategy is exhausted due to a maximum number of retries, duration, or other reason\n    if (delay === null) {\n      throw new AgentError(\n        `Timestamp failed to pass the watermark after retrying the configured ${\n          this.#retryTimes\n        } times. We cannot guarantee the integrity of the response since it could be a replay attack.`,\n      );\n    }\n\n    if (delay > 0) {\n      await new Promise(resolve => setTimeout(resolve, delay));\n    }\n\n    let response: Response;\n    try {\n      response = await request();\n    } catch (error) {\n      if (this.#retryTimes > tries) {\n        this.log.warn(\n          `Caught exception while attempting to make request:\\n` +\n            `  ${error}\\n` +\n            `  Retrying request.`,\n        );\n        // Delay the request by the configured backoff strategy\n        return await this.#requestAndRetry({ request, backoff, tries: tries + 1 });\n      }\n      throw error;\n    }\n    if (response.ok) {\n      return response;\n    }\n\n    const responseText = await response.clone().text();\n    const errorMessage =\n      `Server returned an error:\\n` +\n      `  Code: ${response.status} (${response.statusText})\\n` +\n      `  Body: ${responseText}\\n`;\n\n    if (response.status === 404 && response.url.includes('api/v3')) {\n      throw new AgentHTTPResponseError('v3 api not supported. Fall back to v2', {\n        ok: response.ok,\n        status: response.status,\n        statusText: response.statusText,\n        headers: httpHeadersTransform(response.headers),\n      });\n    }\n    if (tries < this.#retryTimes) {\n      return await this.#requestAndRetry({ request, backoff, tries: tries + 1 });\n    }\n\n    throw new AgentHTTPResponseError(errorMessage, {\n      ok: response.ok,\n      status: response.status,\n      statusText: response.statusText,\n      headers: httpHeadersTransform(response.headers),\n    });\n  }\n\n  public async query(\n    canisterId: Principal | string,\n    fields: QueryFields,\n    identity?: Identity | Promise<Identity>,\n  ): Promise<ApiQueryResponse> {\n    await this.#rootKeyGuard();\n    const backoff = this.#backoffStrategy();\n    const ecid = fields.effectiveCanisterId\n      ? Principal.from(fields.effectiveCanisterId)\n      : Principal.from(canisterId);\n\n    this.log.print(`ecid ${ecid.toString()}`);\n    this.log.print(`canisterId ${canisterId.toString()}`);\n\n    let transformedRequest: HttpAgentRequest | undefined = undefined;\n    let queryResult;\n    const id = await (identity !== undefined ? identity : this.#identity);\n    if (!id) {\n      throw new IdentityInvalidError(\n        \"This identity has expired due this application's security policy. Please refresh your authentication.\",\n      );\n    }\n\n    const canister = Principal.from(canisterId);\n    const sender = id?.getPrincipal() || Principal.anonymous();\n\n    const request: QueryRequest = {\n      request_type: ReadRequestType.Query,\n      canister_id: canister,\n      method_name: fields.methodName,\n      arg: fields.arg,\n      sender,\n      ingress_expiry: new Expiry(this.#maxIngressExpiryInMinutes * MINUTE_TO_MSECS),\n    };\n\n    const requestId = requestIdOf(request);\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    transformedRequest = await this._transform({\n      request: {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/cbor',\n          ...(this.#credentials ? { Authorization: 'Basic ' + btoa(this.#credentials) } : {}),\n        },\n      },\n      endpoint: Endpoint.Query,\n      body: request,\n    });\n\n    // Apply transform for identity.\n    transformedRequest = (await id?.transformRequest(transformedRequest)) as HttpAgentRequest;\n\n    const body = cbor.encode(transformedRequest.body);\n\n    const args = {\n      canister: canister.toText(),\n      ecid,\n      transformedRequest,\n      body,\n      requestId,\n      backoff,\n      tries: 0,\n    };\n    const makeQuery = async () => {\n      return {\n        requestDetails: request,\n        query: await this.#requestAndRetryQuery(args),\n      };\n    };\n\n    const getSubnetStatus = async (): Promise<SubnetStatus | void> => {\n      if (!this.#verifyQuerySignatures) {\n        return undefined;\n      }\n      const subnetStatus = this.#subnetKeys.get(ecid.toString());\n      if (subnetStatus) {\n        return subnetStatus;\n      }\n      await this.fetchSubnetKeys(ecid.toString());\n      return this.#subnetKeys.get(ecid.toString());\n    };\n    // Attempt to make the query i=retryTimes times\n    // Make query and fetch subnet keys in parallel\n\n    try {\n      const [_queryResult, subnetStatus] = await Promise.all([makeQuery(), getSubnetStatus()]);\n      queryResult = _queryResult;\n      const { requestDetails, query } = queryResult;\n\n      const queryWithDetails = {\n        ...query,\n        requestDetails,\n      };\n\n      this.log.print('Query response:', queryWithDetails);\n      // Skip verification if the user has disabled it\n      if (!this.#verifyQuerySignatures) {\n        return queryWithDetails;\n      }\n\n      try {\n        return this.#verifyQueryResponse(queryWithDetails, subnetStatus);\n      } catch {\n        // In case the node signatures have changed, refresh the subnet keys and try again\n        this.log.warn('Query response verification failed. Retrying with fresh subnet keys.');\n        this.#subnetKeys.delete(canisterId.toString());\n        await this.fetchSubnetKeys(ecid.toString());\n\n        const updatedSubnetStatus = this.#subnetKeys.get(canisterId.toString());\n        if (!updatedSubnetStatus) {\n          throw new CertificateVerificationError(\n            'Invalid signature from replica signed query: no matching node key found.',\n          );\n        }\n        return this.#verifyQueryResponse(queryWithDetails, updatedSubnetStatus);\n      }\n    } catch (error) {\n      const message = `Error while making call: ${(error as Error).message ?? String(error)}`;\n      const queryError = new AgentQueryError(\n        message,\n        error as HttpDetailsResponse,\n        String(requestId),\n        toHex(transformedRequest?.body?.sender_pubkey),\n        toHex(transformedRequest?.body?.sender_sig),\n        String(transformedRequest?.body?.content.ingress_expiry['_value']),\n      );\n      this.log.error(message, queryError);\n      throw queryError;\n    }\n  }\n\n  /**\n   * See https://internetcomputer.org/docs/current/references/ic-interface-spec/#http-query for details on validation\n   * @param queryResponse - The response from the query\n   * @param subnetStatus - The subnet status, including all node keys\n   * @returns ApiQueryResponse\n   */\n  #verifyQueryResponse = (\n    queryResponse: ApiQueryResponse,\n    subnetStatus: SubnetStatus | void,\n  ): ApiQueryResponse => {\n    if (this.#verifyQuerySignatures === false) {\n      // This should not be called if the user has disabled verification\n      return queryResponse;\n    }\n    if (!subnetStatus) {\n      throw new CertificateVerificationError(\n        'Invalid signature from replica signed query: no matching node key found.',\n      );\n    }\n    const { status, signatures = [], requestId } = queryResponse;\n\n    const domainSeparator = bufFromBufLike(new TextEncoder().encode('\\x0Bic-response'));\n    for (const sig of signatures) {\n      const { timestamp, identity } = sig;\n      const nodeId = Principal.fromUint8Array(identity).toText();\n      let hash: ArrayBuffer;\n\n      // Hash is constructed differently depending on the status\n      if (status === 'replied') {\n        const { reply } = queryResponse;\n        hash = hashOfMap({\n          status: status,\n          reply: reply,\n          timestamp: BigInt(timestamp),\n          request_id: requestId,\n        });\n      } else if (status === 'rejected') {\n        const { reject_code, reject_message, error_code } = queryResponse;\n        hash = hashOfMap({\n          status: status,\n          reject_code: reject_code,\n          reject_message: reject_message,\n          error_code: error_code,\n          timestamp: BigInt(timestamp),\n          request_id: requestId,\n        });\n      } else {\n        throw new Error(`Unknown status: ${status}`);\n      }\n\n      const separatorWithHash = concat(domainSeparator, bufFromBufLike(new Uint8Array(hash)));\n\n      // FIX: check for match without verifying N times\n      const pubKey = subnetStatus?.nodeKeys.get(nodeId);\n      if (!pubKey) {\n        throw new CertificateVerificationError(\n          'Invalid signature from replica signed query: no matching node key found.',\n        );\n      }\n      const rawKey = Ed25519PublicKey.fromDer(pubKey).rawKey;\n      const valid = ed25519.verify(\n        sig.signature,\n        new Uint8Array(separatorWithHash),\n        new Uint8Array(rawKey),\n      );\n      if (valid) return queryResponse;\n\n      throw new CertificateVerificationError(\n        `Invalid signature from replica ${nodeId} signed query.`,\n      );\n    }\n    return queryResponse;\n  };\n\n  public async createReadStateRequest(\n    fields: ReadStateOptions,\n    identity?: Identity | Promise<Identity>,\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  ): Promise<any> {\n    await this.#rootKeyGuard();\n    const id = await (identity !== undefined ? await identity : await this.#identity);\n    if (!id) {\n      throw new IdentityInvalidError(\n        \"This identity has expired due this application's security policy. Please refresh your authentication.\",\n      );\n    }\n    const sender = id?.getPrincipal() || Principal.anonymous();\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    const transformedRequest = await this._transform({\n      request: {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/cbor',\n          ...(this.#credentials ? { Authorization: 'Basic ' + btoa(this.#credentials) } : {}),\n        },\n      },\n      endpoint: Endpoint.ReadState,\n      body: {\n        request_type: ReadRequestType.ReadState,\n        paths: fields.paths,\n        sender,\n        ingress_expiry: new Expiry(this.#maxIngressExpiryInMinutes * MINUTE_TO_MSECS),\n      },\n    });\n\n    // Apply transform for identity.\n    return id?.transformRequest(transformedRequest);\n  }\n\n  public async readState(\n    canisterId: Principal | string,\n    fields: ReadStateOptions,\n    identity?: Identity | Promise<Identity>,\n    // eslint-disable-next-line\n    request?: any,\n  ): Promise<ReadStateResponse> {\n    function getRequestId(fields: ReadStateOptions): RequestId | undefined {\n      for (const path of fields.paths) {\n        const [pathName, value] = path;\n        const request_status = bufFromBufLike(new TextEncoder().encode('request_status'));\n        if (bufEquals(pathName, request_status)) {\n          return value as RequestId;\n        }\n      }\n    }\n    const requestId = getRequestId(fields);\n\n    await this.#rootKeyGuard();\n    const canister = typeof canisterId === 'string' ? Principal.fromText(canisterId) : canisterId;\n\n    const transformedRequest = request ?? (await this.createReadStateRequest(fields, identity));\n\n    const body = cbor.encode(transformedRequest.body);\n\n    this.log.print(\n      `fetching \"/api/v2/canister/${canister}/read_state\" with request:`,\n      transformedRequest,\n    );\n    // TODO - https://dfinity.atlassian.net/browse/SDK-1092\n    const backoff = this.#backoffStrategy();\n    try {\n      const response = await this.#requestAndRetry({\n        request: () =>\n          this.#fetch(\n            '' + new URL(`/api/v2/canister/${canister.toString()}/read_state`, this.host),\n            {\n              ...this.#fetchOptions,\n              ...transformedRequest.request,\n              body,\n            },\n          ),\n        backoff,\n        tries: 0,\n      });\n\n      if (!response.ok) {\n        throw new Error(\n          `Server returned an error:\\n` +\n            `  Code: ${response.status} (${response.statusText})\\n` +\n            `  Body: ${await response.text()}\\n`,\n        );\n      }\n      const decodedResponse: ReadStateResponse = cbor.decode(await response.arrayBuffer());\n\n      this.log.print('Read state response:', decodedResponse);\n      const parsedTime = await this.parseTimeFromResponse(decodedResponse);\n      if (parsedTime > 0) {\n        this.log.print('Read state response time:', parsedTime);\n        this.#waterMark = parsedTime;\n      }\n\n      return decodedResponse;\n    } catch (error) {\n      const message = `Caught exception while attempting to read state: ${(error as Error).message ?? String(error)}`;\n      const readStateError = new AgentReadStateError(\n        message,\n        error as HttpDetailsResponse,\n        String(requestId),\n        toHex(transformedRequest?.body?.sender_pubkey),\n        toHex(transformedRequest?.body?.sender_sig),\n        String(transformedRequest?.body?.content.ingress_expiry['_value']),\n      );\n      this.log.error(message, readStateError);\n      throw readStateError;\n    }\n  }\n\n  public async parseTimeFromResponse(response: { certificate: ArrayBuffer }): Promise<number> {\n    let tree: HashTree;\n    if (response.certificate) {\n      const decoded: { tree: HashTree } | undefined = cbor.decode(response.certificate);\n      if (decoded && 'tree' in decoded) {\n        tree = decoded.tree;\n      } else {\n        throw new Error('Could not decode time from response');\n      }\n      const timeLookup = lookup_path(['time'], tree);\n      if (timeLookup.status !== LookupStatus.Found) {\n        throw new Error('Time was not found in the response or was not in its expected format.');\n      }\n\n      if (!(timeLookup.value instanceof ArrayBuffer) && !ArrayBuffer.isView(timeLookup)) {\n        throw new Error('Time was not found in the response or was not in its expected format.');\n      }\n      const date = decodeTime(bufFromBufLike(timeLookup.value as ArrayBuffer));\n      this.log.print('Time from response:', date);\n      this.log.print('Time from response in milliseconds:', Number(date));\n      return Number(date);\n    } else {\n      this.log.warn('No certificate found in response');\n    }\n    return 0;\n  }\n\n  /**\n   * Allows agent to sync its time with the network. Can be called during intialization or mid-lifecycle if the device's clock has drifted away from the network time. This is necessary to set the Expiry for a request\n   * @param {Principal} canisterId - Pass a canister ID if you need to sync the time with a particular replica. Uses the management canister by default\n   */\n  public async syncTime(canisterId?: Principal): Promise<void> {\n    await this.#rootKeyGuard();\n    const CanisterStatus = await import('../../canisterStatus');\n    const callTime = Date.now();\n    try {\n      if (!canisterId) {\n        this.log.print(\n          'Syncing time with the IC. No canisterId provided, so falling back to ryjl3-tyaaa-aaaaa-aaaba-cai',\n        );\n      }\n\n      const anonymousAgent = HttpAgent.createSync({\n        identity: new AnonymousIdentity(),\n        host: this.host.toString(),\n        fetch: this.#fetch,\n        retryTimes: 0,\n      });\n\n      const status = await CanisterStatus.request({\n        // Fall back with canisterId of the ICP Ledger\n        canisterId: canisterId ?? Principal.from('ryjl3-tyaaa-aaaaa-aaaba-cai'),\n        agent: anonymousAgent,\n        paths: ['time'],\n      });\n\n      const replicaTime = status.get('time');\n      if (replicaTime) {\n        this.#timeDiffMsecs = Number(replicaTime as bigint) - Number(callTime);\n        this.log.notify({\n          message: `Syncing time: offset of ${this.#timeDiffMsecs}`,\n          level: 'info',\n        });\n      }\n    } catch (error) {\n      this.log.error('Caught exception while attempting to sync time', error as AgentError);\n    }\n  }\n\n  public async status(): Promise<JsonObject> {\n    const headers: Record<string, string> = this.#credentials\n      ? {\n          Authorization: 'Basic ' + btoa(this.#credentials),\n        }\n      : {};\n\n    this.log.print(`fetching \"/api/v2/status\"`);\n    const backoff = this.#backoffStrategy();\n    const response = await this.#requestAndRetry({\n      backoff,\n      request: () =>\n        this.#fetch('' + new URL(`/api/v2/status`, this.host), { headers, ...this.#fetchOptions }),\n      tries: 0,\n    });\n    return cbor.decode(await response.arrayBuffer());\n  }\n\n  public async fetchRootKey(): Promise<ArrayBuffer> {\n    let result: ArrayBuffer;\n    // Wait for already pending promise to avoid duplicate calls\n    if (this.#rootKeyPromise) {\n      result = await this.#rootKeyPromise;\n    } else {\n      // construct promise\n      this.#rootKeyPromise = new Promise<ArrayBuffer>((resolve, reject) => {\n        this.status()\n          .then(value => {\n            // Hex-encoded version of the replica root key\n            const rootKey = (value as JsonObject & { root_key: ArrayBuffer }).root_key;\n            this.rootKey = rootKey;\n            resolve(rootKey);\n          })\n          .catch(reject);\n      });\n      result = await this.#rootKeyPromise;\n    }\n    // clear rootkey promise and return result\n    this.#rootKeyPromise = null;\n    return result;\n  }\n\n  async #rootKeyGuard(): Promise<void> {\n    if (this.rootKey) {\n      return;\n    } else if (this.rootKey === null && this.#shouldFetchRootKey) {\n      await this.fetchRootKey();\n    } else {\n      throw new AgentError(\n        `Invalid root key detected. The root key for this agent is ${this.rootKey} and the shouldFetchRootKey value is set to ${this.#shouldFetchRootKey}. The root key should only be unknown if you are in local development. Otherwise you should avoid fetching and use the default IC Root Key or the known root key of your environment.`,\n      );\n    }\n  }\n\n  public invalidateIdentity(): void {\n    this.#identity = null;\n  }\n\n  public replaceIdentity(identity: Identity): void {\n    this.#identity = Promise.resolve(identity);\n  }\n\n  public async fetchSubnetKeys(canisterId: Principal | string) {\n    await this.#rootKeyGuard();\n    const effectiveCanisterId: Principal = Principal.from(canisterId);\n    const response = await request({\n      canisterId: effectiveCanisterId,\n      paths: ['subnet'],\n      agent: this,\n    });\n\n    const subnetResponse = response.get('subnet');\n    if (subnetResponse && typeof subnetResponse === 'object' && 'nodeKeys' in subnetResponse) {\n      this.#subnetKeys.set(effectiveCanisterId.toText(), subnetResponse as SubnetStatus);\n      return subnetResponse as SubnetStatus;\n    }\n    // If the subnet status is not returned, return undefined\n    return undefined;\n  }\n\n  protected _transform(request: HttpAgentRequest): Promise<HttpAgentRequest> {\n    let p = Promise.resolve(request);\n    if (request.endpoint === Endpoint.Call) {\n      for (const fn of this.#updatePipeline) {\n        p = p.then(r => fn(r).then(r2 => r2 || r));\n      }\n    } else {\n      for (const fn of this.#queryPipeline) {\n        p = p.then(r => fn(r).then(r2 => r2 || r));\n      }\n    }\n\n    return p;\n  }\n}\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 2210, "column": 0}, "map": {"version":3,"file":"certificate.js","sourceRoot":"","sources":["file:///home/brimzy/.dev/studifi/node_modules/%40dfinity/agent/src/certificate.ts"],"sourcesContent":["import * as cbor from './cbor';\nimport { AgentError } from './errors';\nimport { hash } from './request_id';\nimport { bufEquals, concat, fromHex, toHex } from './utils/buffer';\nimport { Principal } from '@dfinity/principal';\nimport * as bls from './utils/bls';\nimport { decodeTime } from './utils/leb';\nimport { MANAGEMENT_CANISTER_ID } from './agent';\n\n/**\n * A certificate may fail verification with respect to the provided public key\n */\nexport class CertificateVerificationError extends AgentError {\n  constructor(reason: string) {\n    super(`Invalid certificate: ${reason}`);\n  }\n}\n\nexport interface Cert {\n  tree: HashTree;\n  signature: ArrayBuffer;\n  delegation?: Delegation;\n}\n\nexport enum NodeType {\n  Empty = 0,\n  Fork = 1,\n  Labeled = 2,\n  Leaf = 3,\n  Pruned = 4,\n}\n\nexport type NodeLabel = ArrayBuffer | Uint8Array;\n\nexport type HashTree =\n  | [NodeType.Empty]\n  | [NodeType.Fork, HashTree, HashTree]\n  | [NodeType.Labeled, NodeLabel, HashTree]\n  | [NodeType.Leaf, NodeLabel]\n  | [NodeType.Pruned, NodeLabel];\n\n/**\n * Make a human readable string out of a hash tree.\n * @param tree\n */\nexport function hashTreeToString(tree: HashTree): string {\n  const indent = (s: string) =>\n    s\n      .split('\\n')\n      .map(x => '  ' + x)\n      .join('\\n');\n  function labelToString(label: ArrayBuffer): string {\n    const decoder = new TextDecoder(undefined, { fatal: true });\n    try {\n      return JSON.stringify(decoder.decode(label));\n    } catch (e) {\n      return `data(...${label.byteLength} bytes)`;\n    }\n  }\n\n  switch (tree[0]) {\n    case NodeType.Empty:\n      return '()';\n    case NodeType.Fork: {\n      if (tree[1] instanceof Array && tree[2] instanceof ArrayBuffer) {\n        const left = hashTreeToString(tree[1]);\n        const right = hashTreeToString(tree[2]);\n        return `sub(\\n left:\\n${indent(left)}\\n---\\n right:\\n${indent(right)}\\n)`;\n      } else {\n        throw new Error('Invalid tree structure for fork');\n      }\n    }\n    case NodeType.Labeled: {\n      if (tree[1] instanceof ArrayBuffer && tree[2] instanceof ArrayBuffer) {\n        const label = labelToString(tree[1]);\n        const sub = hashTreeToString(tree[2]);\n        return `label(\\n label:\\n${indent(label)}\\n sub:\\n${indent(sub)}\\n)`;\n      } else {\n        throw new Error('Invalid tree structure for labeled');\n      }\n    }\n    case NodeType.Leaf: {\n      if (!tree[1]) {\n        throw new Error('Invalid tree structure for leaf');\n      } else if (Array.isArray(tree[1])) {\n        return JSON.stringify(tree[1]);\n      }\n      return `leaf(...${tree[1].byteLength} bytes)`;\n    }\n    case NodeType.Pruned: {\n      if (!tree[1]) {\n        throw new Error('Invalid tree structure for pruned');\n      } else if (Array.isArray(tree[1])) {\n        return JSON.stringify(tree[1]);\n      }\n\n      return `pruned(${toHex(new Uint8Array(tree[1]))}`;\n    }\n    default: {\n      return `unknown(${JSON.stringify(tree[0])})`;\n    }\n  }\n}\n\ninterface Delegation extends Record<string, unknown> {\n  subnet_id: ArrayBuffer;\n  certificate: ArrayBuffer;\n}\n\nfunction isBufferGreaterThan(a: ArrayBuffer, b: ArrayBuffer): boolean {\n  const a8 = new Uint8Array(a);\n  const b8 = new Uint8Array(b);\n  for (let i = 0; i < a8.length; i++) {\n    if (a8[i] > b8[i]) {\n      return true;\n    }\n  }\n  return false;\n}\n\ntype VerifyFunc = (pk: Uint8Array, sig: Uint8Array, msg: Uint8Array) => Promise<boolean> | boolean;\n\nexport interface CreateCertificateOptions {\n  /**\n   * The bytes encoding the certificate to be verified\n   */\n  certificate: ArrayBuffer;\n  /**\n   * The root key against which to verify the certificate\n   * (normally, the root key of the IC main network)\n   */\n  rootKey: ArrayBuffer;\n  /**\n   * The effective canister ID of the request when verifying a response, or\n   * the signing canister ID when verifying a certified variable.\n   */\n  canisterId: Principal;\n  /**\n   * BLS Verification strategy. Default strategy uses bls12_381 from @noble/curves\n   */\n  blsVerify?: VerifyFunc;\n\n  /**\n   * The maximum age of the certificate in minutes. Default is 5 minutes.\n   * @default 5\n   * This is used to verify the time the certificate was signed, particularly for validating Delegation certificates, which can live for longer than the default window of +/- 5 minutes. If the certificate is\n   * older than the specified age, it will fail verification.\n   */\n  maxAgeInMinutes?: number;\n\n  /**\n   * Overrides the maxAgeInMinutes setting and skips comparing the client's time against the certificate. Used for scenarios where the machine's clock is known to be out of sync, or for inspecting expired certificates.\n   */\n  disableTimeVerification?: boolean;\n}\n\nexport class Certificate {\n  public cert: Cert;\n  #disableTimeVerification: boolean = false;\n\n  /**\n   * Create a new instance of a certificate, automatically verifying it. Throws a\n   * CertificateVerificationError if the certificate cannot be verified.\n   * @constructs  Certificate\n   * @param {CreateCertificateOptions} options {@link CreateCertificateOptions}\n   * @param {ArrayBuffer} options.certificate The bytes of the certificate\n   * @param {ArrayBuffer} options.rootKey The root key to verify against\n   * @param {Principal} options.canisterId The effective or signing canister ID\n   * @param {number} options.maxAgeInMinutes The maximum age of the certificate in minutes. Default is 5 minutes.\n   * @throws {CertificateVerificationError}\n   */\n  public static async create(options: CreateCertificateOptions): Promise<Certificate> {\n    const cert = Certificate.createUnverified(options);\n\n    await cert.verify();\n    return cert;\n  }\n\n  private static createUnverified(options: CreateCertificateOptions): Certificate {\n    let blsVerify = options.blsVerify;\n    if (!blsVerify) {\n      blsVerify = bls.blsVerify;\n    }\n    return new Certificate(\n      options.certificate,\n      options.rootKey,\n      options.canisterId,\n      blsVerify,\n      options.maxAgeInMinutes,\n      options.disableTimeVerification,\n    );\n  }\n\n  private constructor(\n    certificate: ArrayBuffer,\n    private _rootKey: ArrayBuffer,\n    private _canisterId: Principal,\n    private _blsVerify: VerifyFunc,\n    // Default to 5 minutes\n    private _maxAgeInMinutes: number = 5,\n    disableTimeVerification: boolean = false,\n  ) {\n    this.#disableTimeVerification = disableTimeVerification;\n    this.cert = cbor.decode(new Uint8Array(certificate));\n  }\n\n  public lookup(path: Array<ArrayBuffer | string>): LookupResult {\n    // constrain the type of the result, so that empty HashTree is undefined\n    return lookup_path(path, this.cert.tree);\n  }\n\n  public lookup_label(label: ArrayBuffer): LookupResult {\n    return this.lookup([label]);\n  }\n\n  private async verify(): Promise<void> {\n    const rootHash = await reconstruct(this.cert.tree);\n    const derKey = await this._checkDelegationAndGetKey(this.cert.delegation);\n    const sig = this.cert.signature;\n    const key = extractDER(derKey);\n    const msg = concat(domain_sep('ic-state-root'), rootHash);\n    let sigVer = false;\n\n    const lookupTime = lookupResultToBuffer(this.lookup(['time']));\n    if (!lookupTime) {\n      // Should never happen - time is always present in IC certificates\n      throw new CertificateVerificationError('Certificate does not contain a time');\n    }\n\n    // Certificate time verification checks\n    if (!this.#disableTimeVerification) {\n      const FIVE_MINUTES_IN_MSEC = 5 * 60 * 1000;\n      const MAX_AGE_IN_MSEC = this._maxAgeInMinutes * 60 * 1000;\n      const now = Date.now();\n      const earliestCertificateTime = now - MAX_AGE_IN_MSEC;\n      const fiveMinutesFromNow = now + FIVE_MINUTES_IN_MSEC;\n\n      const certTime = decodeTime(lookupTime);\n\n      if (certTime.getTime() < earliestCertificateTime) {\n        throw new CertificateVerificationError(\n          `Certificate is signed more than ${this._maxAgeInMinutes} minutes in the past. Certificate time: ` +\n            certTime.toISOString() +\n            ' Current time: ' +\n            new Date(now).toISOString(),\n        );\n      } else if (certTime.getTime() > fiveMinutesFromNow) {\n        throw new CertificateVerificationError(\n          'Certificate is signed more than 5 minutes in the future. Certificate time: ' +\n            certTime.toISOString() +\n            ' Current time: ' +\n            new Date(now).toISOString(),\n        );\n      }\n    }\n\n    try {\n      sigVer = await this._blsVerify(new Uint8Array(key), new Uint8Array(sig), new Uint8Array(msg));\n    } catch (err) {\n      sigVer = false;\n    }\n    if (!sigVer) {\n      throw new CertificateVerificationError('Signature verification failed');\n    }\n  }\n\n  private async _checkDelegationAndGetKey(d?: Delegation): Promise<ArrayBuffer> {\n    if (!d) {\n      return this._rootKey;\n    }\n\n    const cert: Certificate = await Certificate.createUnverified({\n      certificate: d.certificate,\n      rootKey: this._rootKey,\n      canisterId: this._canisterId,\n      blsVerify: this._blsVerify,\n      // Do not check max age for delegation certificates\n      maxAgeInMinutes: Infinity,\n    });\n\n    if (cert.cert.delegation) {\n      throw new CertificateVerificationError('Delegation certificates cannot be nested');\n    }\n\n    await cert.verify();\n\n    if (this._canisterId.toString() !== MANAGEMENT_CANISTER_ID) {\n      const canisterInRange = check_canister_ranges({\n        canisterId: this._canisterId,\n        subnetId: Principal.fromUint8Array(new Uint8Array(d.subnet_id)),\n        tree: cert.cert.tree,\n      });\n      if (!canisterInRange) {\n        throw new CertificateVerificationError(\n          `Canister ${this._canisterId} not in range of delegations for subnet 0x${toHex(\n            d.subnet_id,\n          )}`,\n        );\n      }\n    }\n    const publicKeyLookup = lookupResultToBuffer(\n      cert.lookup(['subnet', d.subnet_id, 'public_key']),\n    );\n    if (!publicKeyLookup) {\n      throw new Error(`Could not find subnet key for subnet 0x${toHex(d.subnet_id)}`);\n    }\n    return publicKeyLookup;\n  }\n}\n\nconst DER_PREFIX = fromHex(\n  '308182301d060d2b0601040182dc7c0503010201060c2b0601040182dc7c05030201036100',\n);\nconst KEY_LENGTH = 96;\n\nfunction extractDER(buf: ArrayBuffer): ArrayBuffer {\n  const expectedLength = DER_PREFIX.byteLength + KEY_LENGTH;\n  if (buf.byteLength !== expectedLength) {\n    throw new TypeError(`BLS DER-encoded public key must be ${expectedLength} bytes long`);\n  }\n  const prefix = buf.slice(0, DER_PREFIX.byteLength);\n  if (!bufEquals(prefix, DER_PREFIX)) {\n    throw new TypeError(\n      `BLS DER-encoded public key is invalid. Expect the following prefix: ${DER_PREFIX}, but get ${prefix}`,\n    );\n  }\n\n  return buf.slice(DER_PREFIX.byteLength);\n}\n\n/**\n * utility function to constrain the type of a path\n * @param {ArrayBuffer | HashTree | undefined} result - the result of a lookup\n * @returns ArrayBuffer or Undefined\n */\nexport function lookupResultToBuffer(result: LookupResult): ArrayBuffer | undefined {\n  if (result.status !== LookupStatus.Found) {\n    return undefined;\n  }\n\n  if (result.value instanceof ArrayBuffer) {\n    return result.value;\n  }\n\n  if (result.value instanceof Uint8Array) {\n    return result.value.buffer;\n  }\n\n  return undefined;\n}\n\n/**\n * @param t\n */\nexport async function reconstruct(t: HashTree): Promise<ArrayBuffer> {\n  switch (t[0]) {\n    case NodeType.Empty:\n      return hash(domain_sep('ic-hashtree-empty'));\n    case NodeType.Pruned:\n      return t[1] as ArrayBuffer;\n    case NodeType.Leaf:\n      return hash(concat(domain_sep('ic-hashtree-leaf'), t[1] as ArrayBuffer));\n    case NodeType.Labeled:\n      return hash(\n        concat(\n          domain_sep('ic-hashtree-labeled'),\n          t[1] as ArrayBuffer,\n          await reconstruct(t[2] as HashTree),\n        ),\n      );\n    case NodeType.Fork:\n      return hash(\n        concat(\n          domain_sep('ic-hashtree-fork'),\n          await reconstruct(t[1] as HashTree),\n          await reconstruct(t[2] as HashTree),\n        ),\n      );\n    default:\n      throw new Error('unreachable');\n  }\n}\n\nfunction domain_sep(s: string): ArrayBuffer {\n  const len = new Uint8Array([s.length]);\n  const str = new TextEncoder().encode(s);\n  return concat(len, str);\n}\n\nexport enum LookupStatus {\n  Unknown = 'unknown',\n  Absent = 'absent',\n  Found = 'found',\n}\n\nexport interface LookupResultAbsent {\n  status: LookupStatus.Absent;\n}\n\nexport interface LookupResultUnknown {\n  status: LookupStatus.Unknown;\n}\n\nexport interface LookupResultFound {\n  status: LookupStatus.Found;\n  value: ArrayBuffer | HashTree;\n}\n\nexport type LookupResult = LookupResultAbsent | LookupResultUnknown | LookupResultFound;\n\nenum LabelLookupStatus {\n  Less = 'less',\n  Greater = 'greater',\n}\n\ninterface LookupResultGreater {\n  status: LabelLookupStatus.Greater;\n}\n\ninterface LookupResultLess {\n  status: LabelLookupStatus.Less;\n}\n\ntype LabelLookupResult = LookupResult | LookupResultGreater | LookupResultLess;\n\nexport function lookup_path(path: Array<ArrayBuffer | string>, tree: HashTree): LookupResult {\n  if (path.length === 0) {\n    switch (tree[0]) {\n      case NodeType.Leaf: {\n        if (!tree[1]) {\n          throw new Error('Invalid tree structure for leaf');\n        }\n\n        if (tree[1] instanceof ArrayBuffer) {\n          return {\n            status: LookupStatus.Found,\n            value: tree[1],\n          };\n        }\n\n        if (tree[1] instanceof Uint8Array) {\n          return {\n            status: LookupStatus.Found,\n            value: tree[1].buffer,\n          };\n        }\n\n        return {\n          status: LookupStatus.Found,\n          value: tree[1],\n        };\n      }\n\n      default: {\n        return {\n          status: LookupStatus.Found,\n          value: tree,\n        };\n      }\n    }\n  }\n\n  const label = typeof path[0] === 'string' ? new TextEncoder().encode(path[0]) : path[0];\n  const lookupResult = find_label(label, tree);\n\n  switch (lookupResult.status) {\n    case LookupStatus.Found: {\n      return lookup_path(path.slice(1), lookupResult.value as HashTree);\n    }\n\n    case LabelLookupStatus.Greater:\n    case LabelLookupStatus.Less: {\n      return {\n        status: LookupStatus.Absent,\n      };\n    }\n\n    default: {\n      return lookupResult;\n    }\n  }\n}\n\n/**\n * If the tree is a fork, flatten it into an array of trees\n * @param t - the tree to flatten\n * @returns HashTree[] - the flattened tree\n */\nexport function flatten_forks(t: HashTree): HashTree[] {\n  switch (t[0]) {\n    case NodeType.Empty:\n      return [];\n    case NodeType.Fork:\n      return flatten_forks(t[1] as HashTree).concat(flatten_forks(t[2] as HashTree));\n    default:\n      return [t];\n  }\n}\n\nexport function find_label(label: ArrayBuffer, tree: HashTree): LabelLookupResult {\n  switch (tree[0]) {\n    // if we have a labelled node, compare the node's label to the one we are\n    // looking for\n    case NodeType.Labeled:\n      // if the label we're searching for is greater than this node's label,\n      // we need to keep searching\n      if (isBufferGreaterThan(label, tree[1])) {\n        return {\n          status: LabelLookupStatus.Greater,\n        };\n      }\n\n      // if the label we're searching for is equal this node's label, we can\n      // stop searching and return the found node\n      if (bufEquals(label, tree[1])) {\n        return {\n          status: LookupStatus.Found,\n          value: tree[2],\n        };\n      }\n\n      // if the label we're searching for is not greater than or equal to this\n      // node's label, then it's less than this node's label, and we can stop\n      // searching because we've looked too far\n      return {\n        status: LabelLookupStatus.Less,\n      };\n\n    // if we have a fork node, we need to search both sides, starting with the left\n    case NodeType.Fork:\n      // search in the left node\n      const leftLookupResult = find_label(label, tree[1]);\n\n      switch (leftLookupResult.status) {\n        // if the label we're searching for is greater than the left node lookup,\n        // we need to search the right node\n        case LabelLookupStatus.Greater: {\n          const rightLookupResult = find_label(label, tree[2]);\n\n          // if the label we're searching for is less than the right node lookup,\n          // then we can stop searching and say that the label is provably Absent\n          if (rightLookupResult.status === LabelLookupStatus.Less) {\n            return {\n              status: LookupStatus.Absent,\n            };\n          }\n\n          // if the label we're searching for is less than or equal to the right\n          // node lookup, then we let the caller handle it\n          return rightLookupResult;\n        }\n\n        // if the left node returns an uncertain result, we need to search the\n        // right node\n        case LookupStatus.Unknown: {\n          let rightLookupResult = find_label(label, tree[2]);\n\n          // if the label we're searching for is less than the right node lookup,\n          // then we also need to return an uncertain result\n          if (rightLookupResult.status === LabelLookupStatus.Less) {\n            return {\n              status: LookupStatus.Unknown,\n            };\n          }\n\n          // if the label we're searching for is less than or equal to the right\n          // node lookup, then we let the caller handle it\n          return rightLookupResult;\n        }\n\n        // if the label we're searching for is not greater than the left node\n        // lookup, or the result is not uncertain, we stop searching and return\n        // whatever the result of the left node lookup was, which can be either\n        // Found or Absent\n        default: {\n          return leftLookupResult;\n        }\n      }\n\n    // if we encounter a Pruned node, we can't know for certain if the label\n    // we're searching for is present or not\n    case NodeType.Pruned:\n      return {\n        status: LookupStatus.Unknown,\n      };\n\n    // if the current node is Empty, or a Leaf, we can stop searching because\n    // we know for sure that the label we're searching for is not present\n    default:\n      return {\n        status: LookupStatus.Absent,\n      };\n  }\n}\n\n/**\n * Check if a canister falls within a range of canisters\n * @param canisterId Principal\n * @param ranges [Principal, Principal][]\n * @returns\n */\nexport function check_canister_ranges(params: {\n  canisterId: Principal;\n  subnetId: Principal;\n  tree: HashTree;\n}): boolean {\n  const { canisterId, subnetId, tree } = params;\n  const rangeLookup = lookup_path(['subnet', subnetId.toUint8Array(), 'canister_ranges'], tree);\n\n  if (rangeLookup.status !== LookupStatus.Found || !(rangeLookup.value instanceof ArrayBuffer)) {\n    throw new Error(`Could not find canister ranges for subnet ${subnetId}`);\n  }\n\n  const ranges_arr: Array<[Uint8Array, Uint8Array]> = cbor.decode(rangeLookup.value);\n  const ranges: Array<[Principal, Principal]> = ranges_arr.map(v => [\n    Principal.fromUint8Array(v[0]),\n    Principal.fromUint8Array(v[1]),\n  ]);\n\n  const canisterInRange = ranges.some(r => r[0].ltEq(canisterId) && r[1].gtEq(canisterId));\n\n  return canisterInRange;\n}\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 2686, "column": 0}, "map": {"version":3,"file":"index.js","sourceRoot":"","sources":["file:///home/brimzy/.dev/studifi/node_modules/%40dfinity/agent/src/canisterStatus/index.ts"],"sourcesContent":["/** @module CanisterStatus */\nimport { Principal } from '@dfinity/principal';\nimport { AgentError } from '../errors';\nimport { HttpAgent } from '../agent/http';\nimport {\n  Cert,\n  Certificate,\n  CreateCertificateOptions,\n  HashTree,\n  flatten_forks,\n  check_canister_ranges,\n  LookupStatus,\n  lookup_path,\n  lookupResultToBuffer,\n} from '../certificate';\nimport { toHex } from '../utils/buffer';\nimport * as Cbor from '../cbor';\nimport { decodeLeb128, decodeTime } from '../utils/leb';\nimport { DerEncodedPublicKey } from '..';\n\n/**\n * Represents the useful information about a subnet\n * @param {string} subnetId the principal id of the canister's subnet\n * @param {string[]} nodeKeys the keys of the individual nodes in the subnet\n */\nexport type SubnetStatus = {\n  // Principal as a string\n  subnetId: string;\n  nodeKeys: Map<string, DerEncodedPublicKey>;\n  metrics?: {\n    num_canisters: bigint;\n    canister_state_bytes: bigint;\n    consumed_cycles_total: {\n      current: bigint;\n      deleted: bigint;\n    };\n    update_transactions_total: bigint;\n  };\n};\n\n/**\n * Types of an entry on the canisterStatus map.\n * An entry of null indicates that the request failed, due to lack of permissions or the result being missing.\n */\nexport type Status =\n  | string\n  | ArrayBuffer\n  | Date\n  | ArrayBuffer[]\n  | Principal[]\n  | SubnetStatus\n  | bigint\n  | null;\n\n/**\n * Interface to define a custom path. Nested paths will be represented as individual buffers, and can be created from text using TextEncoder.\n * @param {string} key the key to use to access the returned value in the canisterStatus map\n * @param {ArrayBuffer[]} path the path to the desired value, represented as an array of buffers\n * @param {string} decodeStrategy the strategy to use to decode the returned value\n */\nexport class CustomPath implements CustomPath {\n  public key: string;\n  public path: ArrayBuffer[] | string;\n  public decodeStrategy: 'cbor' | 'hex' | 'leb128' | 'utf-8' | 'raw';\n  constructor(\n    key: string,\n    path: ArrayBuffer[] | string,\n    decodeStrategy: 'cbor' | 'hex' | 'leb128' | 'utf-8' | 'raw',\n  ) {\n    this.key = key;\n    this.path = path;\n    this.decodeStrategy = decodeStrategy;\n  }\n}\n\n/**\n * @deprecated Use {@link CustomPath} instead\n * @param {string} key the key to use to access the returned value in the canisterStatus map\n * @param {string} path the path to the desired value, represented as a string\n * @param {string} decodeStrategy the strategy to use to decode the returned value\n */\nexport interface MetaData {\n  kind: 'metadata';\n  key: string;\n  path: string | ArrayBuffer;\n  decodeStrategy: 'cbor' | 'hex' | 'leb128' | 'utf-8' | 'raw';\n}\n\n/**\n * Pre-configured fields for canister status paths\n */\nexport type Path =\n  | 'time'\n  | 'controllers'\n  | 'subnet'\n  | 'module_hash'\n  | 'candid'\n  | MetaData\n  | CustomPath;\n\nexport type StatusMap = Map<Path | string, Status>;\n\nexport type CanisterStatusOptions = {\n  canisterId: Principal;\n  agent: HttpAgent;\n  paths?: Path[] | Set<Path>;\n  blsVerify?: CreateCertificateOptions['blsVerify'];\n};\n\n/**\n * Request information in the request_status state tree for a given canister.\n * Can be used to request information about the canister's controllers, time, module hash, candid interface, and more.\n * @param {CanisterStatusOptions} options {@link CanisterStatusOptions}\n * @param {CanisterStatusOptions['canisterId']} options.canisterId {@link Principal}\n * @param {CanisterStatusOptions['agent']} options.agent {@link HttpAgent} optional authenticated agent to use to make the canister request. Useful for accessing private metadata under icp:private\n * @param {CanisterStatusOptions['paths']} options.paths {@link Path[]}\n * @returns {Status} object populated with data from the requested paths\n * @example\n * const status = await canisterStatus({\n *   paths: ['controllers', 'candid'],\n *   ...options\n * });\n *\n * const controllers = status.get('controllers');\n */\nexport const request = async (options: {\n  canisterId: Principal;\n  agent: HttpAgent;\n  paths?: Path[] | Set<Path>;\n}): Promise<StatusMap> => {\n  const { agent, paths } = options;\n  const canisterId = Principal.from(options.canisterId);\n\n  const uniquePaths = [...new Set(paths)];\n\n  // Map path options to their correct formats\n  const encodedPaths = uniquePaths.map(path => {\n    return encodePath(path, canisterId);\n  });\n  const status = new Map<string | Path, Status>();\n\n  const promises = uniquePaths.map((path, index) => {\n    return (async () => {\n      try {\n        const response = await agent.readState(canisterId, {\n          paths: [encodedPaths[index]],\n        });\n        if (agent.rootKey == null) {\n          throw new Error('Agent is missing root key');\n        }\n        const cert = await Certificate.create({\n          certificate: response.certificate,\n          rootKey: agent.rootKey,\n          canisterId: canisterId,\n          disableTimeVerification: true,\n        });\n\n        const lookup = (cert: Certificate, path: Path) => {\n          if (path === 'subnet') {\n            if (agent.rootKey == null) {\n              throw new Error('Agent is missing root key');\n            }\n            const data = fetchNodeKeys(response.certificate, canisterId, agent.rootKey);\n            return {\n              path: path,\n              data,\n            };\n          } else {\n            return {\n              path: path,\n              data: lookupResultToBuffer(cert.lookup(encodePath(path, canisterId))),\n            };\n          }\n        };\n\n        // must pass in the rootKey if we have no delegation\n        const { path, data } = lookup(cert, uniquePaths[index]);\n        if (!data) {\n          // Typically, the cert lookup will throw\n          console.warn(`Expected to find result for path ${path}, but instead found nothing.`);\n          if (typeof path === 'string') {\n            status.set(path, null);\n          } else {\n            status.set(path.key, null);\n          }\n        } else {\n          switch (path) {\n            case 'time': {\n              status.set(path, decodeTime(data));\n              break;\n            }\n            case 'controllers': {\n              status.set(path, decodeControllers(data));\n              break;\n            }\n            case 'module_hash': {\n              status.set(path, decodeHex(data));\n              break;\n            }\n            case 'subnet': {\n              status.set(path, data);\n              break;\n            }\n            case 'candid': {\n              status.set(path, new TextDecoder().decode(data));\n              break;\n            }\n            default: {\n              // Check for CustomPath signature\n              if (typeof path !== 'string' && 'key' in path && 'path' in path) {\n                switch (path.decodeStrategy) {\n                  case 'raw':\n                    status.set(path.key, data);\n                    break;\n                  case 'leb128': {\n                    status.set(path.key, decodeLeb128(data));\n                    break;\n                  }\n                  case 'cbor': {\n                    status.set(path.key, decodeCbor(data));\n                    break;\n                  }\n                  case 'hex': {\n                    status.set(path.key, decodeHex(data));\n                    break;\n                  }\n                  case 'utf-8': {\n                    status.set(path.key, decodeUtf8(data));\n                  }\n                }\n              }\n            }\n          }\n        }\n      } catch (error) {\n        // Break on signature verification errors\n        if ((error as AgentError)?.message?.includes('Invalid certificate')) {\n          throw new AgentError((error as AgentError).message);\n        }\n        if (typeof path !== 'string' && 'key' in path && 'path' in path) {\n          status.set(path.key, null);\n        } else {\n          status.set(path, null);\n        }\n        console.group();\n        console.warn(`Expected to find result for path ${path}, but instead found nothing.`);\n        console.warn(error);\n        console.groupEnd();\n      }\n    })();\n  });\n\n  // Fetch all values separately, as each option can fail\n  await Promise.all(promises);\n\n  return status;\n};\n\nexport const fetchNodeKeys = (\n  certificate: ArrayBuffer,\n  canisterId: Principal,\n  root_key?: ArrayBuffer | Uint8Array,\n): SubnetStatus => {\n  if (!canisterId._isPrincipal) {\n    throw new Error('Invalid canisterId');\n  }\n  const cert = Cbor.decode(new Uint8Array(certificate)) as Cert;\n  const tree = cert.tree;\n  let delegation = cert.delegation;\n  let subnetId: Principal;\n  if (delegation && delegation.subnet_id) {\n    subnetId = Principal.fromUint8Array(new Uint8Array(delegation.subnet_id));\n  }\n\n  // On local replica, with System type subnet, there is no delegation\n  else if (!delegation && typeof root_key !== 'undefined') {\n    subnetId = Principal.selfAuthenticating(new Uint8Array(root_key));\n    delegation = {\n      subnet_id: subnetId.toUint8Array(),\n      certificate: new ArrayBuffer(0),\n    };\n  }\n  // otherwise use default NNS subnet id\n  else {\n    subnetId = Principal.selfAuthenticating(\n      Principal.fromText(\n        'tdb26-jop6k-aogll-7ltgs-eruif-6kk7m-qpktf-gdiqx-mxtrf-vb5e6-eqe',\n      ).toUint8Array(),\n    );\n    delegation = {\n      subnet_id: subnetId.toUint8Array(),\n      certificate: new ArrayBuffer(0),\n    };\n  }\n\n  const canisterInRange = check_canister_ranges({ canisterId, subnetId, tree });\n  if (!canisterInRange) {\n    throw new Error('Canister not in range');\n  }\n\n  const subnetLookupResult = lookup_path(['subnet', delegation.subnet_id, 'node'], tree);\n  if (subnetLookupResult.status !== LookupStatus.Found) {\n    throw new Error('Node not found');\n  }\n  if (subnetLookupResult.value instanceof ArrayBuffer) {\n    throw new Error('Invalid node tree');\n  }\n\n  const nodeForks = flatten_forks(subnetLookupResult.value);\n  const nodeKeys = new Map<string, DerEncodedPublicKey>();\n\n  nodeForks.forEach(fork => {\n    const node_id = Principal.from(new Uint8Array(fork[1] as ArrayBuffer)).toText();\n    const publicKeyLookupResult = lookup_path(['public_key'], fork[2] as HashTree);\n    if (publicKeyLookupResult.status !== LookupStatus.Found) {\n      throw new Error('Public key not found');\n    }\n\n    const derEncodedPublicKey = publicKeyLookupResult.value as ArrayBuffer;\n    if (derEncodedPublicKey.byteLength !== 44) {\n      throw new Error('Invalid public key length');\n    } else {\n      nodeKeys.set(node_id, derEncodedPublicKey as DerEncodedPublicKey);\n    }\n  });\n\n  return {\n    subnetId: Principal.fromUint8Array(new Uint8Array(delegation.subnet_id)).toText(),\n    nodeKeys,\n  };\n};\n\nexport const encodePath = (path: Path, canisterId: Principal): ArrayBuffer[] => {\n  const encoder = new TextEncoder();\n\n  const encode = (arg: string): ArrayBuffer => {\n    return new DataView(encoder.encode(arg).buffer).buffer;\n  };\n  const canisterBuffer = new DataView(canisterId.toUint8Array().buffer).buffer;\n  switch (path) {\n    case 'time':\n      return [encode('time')];\n    case 'controllers':\n      return [encode('canister'), canisterBuffer, encode('controllers')];\n    case 'module_hash':\n      return [encode('canister'), canisterBuffer, encode('module_hash')];\n    case 'subnet':\n      return [encode('subnet')];\n    case 'candid':\n      return [encode('canister'), canisterBuffer, encode('metadata'), encode('candid:service')];\n    default: {\n      // Check for CustomPath signature\n      if ('key' in path && 'path' in path) {\n        // For simplified metadata queries\n        if (typeof path['path'] === 'string' || path['path'] instanceof ArrayBuffer) {\n          const metaPath = path.path;\n          const encoded = typeof metaPath === 'string' ? encode(metaPath) : metaPath;\n\n          return [encode('canister'), canisterBuffer, encode('metadata'), encoded];\n\n          // For non-metadata, return the provided custompath\n        } else {\n          return path['path'];\n        }\n      }\n    }\n  }\n  throw new Error(\n    `An unexpeected error was encountered while encoding your path for canister status. Please ensure that your path, ${path} was formatted correctly.`,\n  );\n};\n\nconst decodeHex = (buf: ArrayBuffer): string => {\n  return toHex(buf);\n};\n\nconst decodeCbor = (buf: ArrayBuffer): ArrayBuffer[] => {\n  return Cbor.decode(buf);\n};\n\nconst decodeUtf8 = (buf: ArrayBuffer): string => {\n  return new TextDecoder().decode(buf);\n};\n\n// Controllers are CBOR-encoded buffers\nconst decodeControllers = (buf: ArrayBuffer): Principal[] => {\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  const controllersRaw = decodeCbor(buf);\n  return controllersRaw.map((buf: ArrayBuffer) => {\n    return Principal.fromUint8Array(new Uint8Array(buf));\n  });\n};\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 3015, "column": 0}, "map": {"version":3,"file":"proxy.js","sourceRoot":"","sources":["file:///home/brimzy/.dev/studifi/node_modules/%40dfinity/agent/src/agent/proxy.ts"],"sourcesContent":["import { JsonObject } from '@dfinity/candid';\nimport {\n  Agent,\n  ApiQueryResponse,\n  CallOptions,\n  QueryFields,\n  QueryResponse,\n  ReadStateOptions,\n  ReadStateResponse,\n  SubmitResponse,\n} from './api';\nimport { Principal } from '@dfinity/principal';\n\nexport enum ProxyMessageKind {\n  Error = 'err',\n  GetPrincipal = 'gp',\n  GetPrincipalResponse = 'gpr',\n  Query = 'q',\n  QueryResponse = 'qr',\n  Call = 'c',\n  CallResponse = 'cr',\n  ReadState = 'rs',\n  ReadStateResponse = 'rsr',\n  Status = 's',\n  StatusResponse = 'sr',\n}\n\nexport interface ProxyMessageBase {\n  id: number;\n  type: ProxyMessageKind;\n}\n\nexport interface ProxyMessageError extends ProxyMessageBase {\n  type: ProxyMessageKind.Error;\n  error: any;\n}\n\nexport interface ProxyMessageGetPrincipal extends ProxyMessageBase {\n  type: ProxyMessageKind.GetPrincipal;\n}\n\nexport interface ProxyMessageGetPrincipalResponse extends ProxyMessageBase {\n  type: ProxyMessageKind.GetPrincipalResponse;\n  response: string;\n}\n\nexport interface ProxyMessageQuery extends ProxyMessageBase {\n  type: ProxyMessageKind.Query;\n  args: [string, QueryFields];\n}\n\nexport interface ProxyMessageQueryResponse extends ProxyMessageBase {\n  type: ProxyMessageKind.QueryResponse;\n  response: QueryResponse;\n}\n\nexport interface ProxyMessageCall extends ProxyMessageBase {\n  type: ProxyMessageKind.Call;\n  args: [string, CallOptions];\n}\n\nexport interface ProxyMessageCallResponse extends ProxyMessageBase {\n  type: ProxyMessageKind.CallResponse;\n  response: SubmitResponse;\n}\n\nexport interface ProxyMessageReadState extends ProxyMessageBase {\n  type: ProxyMessageKind.ReadState;\n  args: [string, ReadStateOptions];\n}\n\nexport interface ProxyMessageReadStateResponse extends ProxyMessageBase {\n  type: ProxyMessageKind.ReadStateResponse;\n  response: ReadStateResponse;\n}\n\nexport interface ProxyMessageStatus extends ProxyMessageBase {\n  type: ProxyMessageKind.Status;\n}\n\nexport interface ProxyMessageStatusResponse extends ProxyMessageBase {\n  type: ProxyMessageKind.StatusResponse;\n  response: JsonObject;\n}\n\nexport type ProxyMessage =\n  | ProxyMessageError\n  | ProxyMessageGetPrincipal\n  | ProxyMessageGetPrincipalResponse\n  | ProxyMessageQuery\n  | ProxyMessageQueryResponse\n  | ProxyMessageCall\n  | ProxyMessageReadState\n  | ProxyMessageReadStateResponse\n  | ProxyMessageCallResponse\n  | ProxyMessageStatus\n  | ProxyMessageStatusResponse;\n\n// A Stub Agent that forwards calls to another Agent implementation.\nexport class ProxyStubAgent {\n  constructor(private _frontend: (msg: ProxyMessage) => void, private _agent: Agent) {}\n\n  public onmessage(msg: ProxyMessage): void {\n    switch (msg.type) {\n      case ProxyMessageKind.GetPrincipal:\n        this._agent.getPrincipal().then(response => {\n          this._frontend({\n            id: msg.id,\n            type: ProxyMessageKind.GetPrincipalResponse,\n            response: response.toText(),\n          });\n        });\n        break;\n      case ProxyMessageKind.Query:\n        this._agent.query(...msg.args).then(response => {\n          this._frontend({\n            id: msg.id,\n            type: ProxyMessageKind.QueryResponse,\n            response,\n          });\n        });\n        break;\n      case ProxyMessageKind.Call:\n        this._agent.call(...msg.args).then(response => {\n          this._frontend({\n            id: msg.id,\n            type: ProxyMessageKind.CallResponse,\n            response,\n          });\n        });\n        break;\n      case ProxyMessageKind.ReadState:\n        this._agent.readState(...msg.args).then(response => {\n          this._frontend({\n            id: msg.id,\n            type: ProxyMessageKind.ReadStateResponse,\n            response,\n          });\n        });\n        break;\n      case ProxyMessageKind.Status:\n        this._agent.status().then(response => {\n          this._frontend({\n            id: msg.id,\n            type: ProxyMessageKind.StatusResponse,\n            response,\n          });\n        });\n        break;\n\n      default:\n        throw new Error(`Invalid message received: ${JSON.stringify(msg)}`);\n    }\n  }\n}\n\n// An Agent that forwards calls to a backend. The calls are serialized\nexport class ProxyAgent implements Agent {\n  private _nextId = 0;\n  private _pendingCalls = new Map<number, [(resolve: any) => void, (reject: any) => void]>();\n  public rootKey = null;\n\n  constructor(private _backend: (msg: ProxyMessage) => void) {}\n\n  public onmessage(msg: ProxyMessage): void {\n    const id = msg.id;\n\n    const maybePromise = this._pendingCalls.get(id);\n    if (!maybePromise) {\n      throw new Error('A proxy get the same message twice...');\n    }\n\n    this._pendingCalls.delete(id);\n    const [resolve, reject] = maybePromise;\n\n    switch (msg.type) {\n      case ProxyMessageKind.Error:\n        return reject(msg.error);\n      case ProxyMessageKind.GetPrincipalResponse:\n      case ProxyMessageKind.CallResponse:\n      case ProxyMessageKind.QueryResponse:\n      case ProxyMessageKind.ReadStateResponse:\n      case ProxyMessageKind.StatusResponse:\n        return resolve(msg.response);\n      default:\n        throw new Error(`Invalid message being sent to ProxyAgent: ${JSON.stringify(msg)}`);\n    }\n  }\n\n  public async getPrincipal(): Promise<Principal> {\n    return this._sendAndWait({\n      id: this._nextId++,\n      type: ProxyMessageKind.GetPrincipal,\n    }).then(principal => {\n      if (typeof principal !== 'string') {\n        throw new Error('Invalid principal received.');\n      }\n      return Principal.fromText(principal);\n    });\n  }\n\n  public readState(\n    canisterId: Principal | string,\n    fields: ReadStateOptions,\n  ): Promise<ReadStateResponse> {\n    return this._sendAndWait({\n      id: this._nextId++,\n      type: ProxyMessageKind.ReadState,\n      args: [canisterId.toString(), fields],\n    }) as Promise<ReadStateResponse>;\n  }\n\n  public call(canisterId: Principal | string, fields: CallOptions): Promise<SubmitResponse> {\n    return this._sendAndWait({\n      id: this._nextId++,\n      type: ProxyMessageKind.Call,\n      args: [canisterId.toString(), fields],\n    }) as Promise<SubmitResponse>;\n  }\n\n  public status(): Promise<JsonObject> {\n    return this._sendAndWait({\n      id: this._nextId++,\n      type: ProxyMessageKind.Status,\n    }) as Promise<JsonObject>;\n  }\n\n  public query(canisterId: Principal | string, fields: QueryFields): Promise<ApiQueryResponse> {\n    return this._sendAndWait({\n      id: this._nextId++,\n      type: ProxyMessageKind.Query,\n      args: [canisterId.toString(), fields],\n    }) as Promise<ApiQueryResponse>;\n  }\n\n  private async _sendAndWait(msg: ProxyMessage): Promise<unknown> {\n    return new Promise((resolve, reject) => {\n      this._pendingCalls.set(msg.id, [resolve, reject]);\n\n      this._backend(msg);\n    });\n  }\n\n  public async fetchRootKey(): Promise<ArrayBuffer> {\n    // Hex-encoded version of the replica root key\n    const rootKey = ((await this.status()) as any).root_key;\n    this.rootKey = rootKey;\n    return rootKey;\n  }\n}\n"],"names":[],"mappings":";;;;;AAWA,OAAO,EAAE,SAAS,EAAE,MAAM,oBAAoB,CAAC;;AAE/C,IAAY,gBAYX;AAZD,CAAA,SAAY,gBAAgB;IAC1B,gBAAA,CAAA,QAAA,GAAA,KAAa,CAAA;IACb,gBAAA,CAAA,eAAA,GAAA,IAAmB,CAAA;IACnB,gBAAA,CAAA,uBAAA,GAAA,KAA4B,CAAA;IAC5B,gBAAA,CAAA,QAAA,GAAA,GAAW,CAAA;IACX,gBAAA,CAAA,gBAAA,GAAA,IAAoB,CAAA;IACpB,gBAAA,CAAA,OAAA,GAAA,GAAU,CAAA;IACV,gBAAA,CAAA,eAAA,GAAA,IAAmB,CAAA;IACnB,gBAAA,CAAA,YAAA,GAAA,IAAgB,CAAA;IAChB,gBAAA,CAAA,oBAAA,GAAA,KAAyB,CAAA;IACzB,gBAAA,CAAA,SAAA,GAAA,GAAY,CAAA;IACZ,gBAAA,CAAA,iBAAA,GAAA,IAAqB,CAAA;AACvB,CAAC,EAZW,gBAAgB,IAAA,CAAhB,gBAAgB,GAAA,CAAA,CAAA,GAY3B;AA0EK,MAAO,cAAc;IACzB,YAAoB,SAAsC,EAAU,MAAa,CAAA;QAA7D,IAAA,CAAA,SAAS,GAAT,SAAS,CAA6B;QAAU,IAAA,CAAA,MAAM,GAAN,MAAM,CAAO;IAAG,CAAC;IAE9E,SAAS,CAAC,GAAiB,EAAA;QAChC,OAAQ,GAAG,CAAC,IAAI,EAAE;YAChB,KAAK,gBAAgB,CAAC,YAAY;gBAChC,IAAI,CAAC,MAAM,CAAC,YAAY,EAAE,CAAC,IAAI,EAAC,QAAQ,CAAC,EAAE;oBACzC,IAAI,CAAC,SAAS,CAAC;wBACb,EAAE,EAAE,GAAG,CAAC,EAAE;wBACV,IAAI,EAAE,gBAAgB,CAAC,oBAAoB;wBAC3C,QAAQ,EAAE,QAAQ,CAAC,MAAM,EAAE;qBAC5B,CAAC,CAAC;gBACL,CAAC,CAAC,CAAC;gBACH,MAAM;YACR,KAAK,gBAAgB,CAAC,KAAK;gBACzB,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,IAAI,EAAC,QAAQ,CAAC,EAAE;oBAC7C,IAAI,CAAC,SAAS,CAAC;wBACb,EAAE,EAAE,GAAG,CAAC,EAAE;wBACV,IAAI,EAAE,gBAAgB,CAAC,aAAa;wBACpC,QAAQ;qBACT,CAAC,CAAC;gBACL,CAAC,CAAC,CAAC;gBACH,MAAM;YACR,KAAK,gBAAgB,CAAC,IAAI;gBACxB,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,IAAI,EAAC,QAAQ,CAAC,EAAE;oBAC5C,IAAI,CAAC,SAAS,CAAC;wBACb,EAAE,EAAE,GAAG,CAAC,EAAE;wBACV,IAAI,EAAE,gBAAgB,CAAC,YAAY;wBACnC,QAAQ;qBACT,CAAC,CAAC;gBACL,CAAC,CAAC,CAAC;gBACH,MAAM;YACR,KAAK,gBAAgB,CAAC,SAAS;gBAC7B,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,IAAI,EAAC,QAAQ,CAAC,EAAE;oBACjD,IAAI,CAAC,SAAS,CAAC;wBACb,EAAE,EAAE,GAAG,CAAC,EAAE;wBACV,IAAI,EAAE,gBAAgB,CAAC,iBAAiB;wBACxC,QAAQ;qBACT,CAAC,CAAC;gBACL,CAAC,CAAC,CAAC;gBACH,MAAM;YACR,KAAK,gBAAgB,CAAC,MAAM;gBAC1B,IAAI,CAAC,MAAM,CAAC,MAAM,EAAE,CAAC,IAAI,EAAC,QAAQ,CAAC,EAAE;oBACnC,IAAI,CAAC,SAAS,CAAC;wBACb,EAAE,EAAE,GAAG,CAAC,EAAE;wBACV,IAAI,EAAE,gBAAgB,CAAC,cAAc;wBACrC,QAAQ;qBACT,CAAC,CAAC;gBACL,CAAC,CAAC,CAAC;gBACH,MAAM;YAER;gBACE,MAAM,IAAI,KAAK,CAAC,CAAA,0BAAA,EAA6B,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC;SACvE;IACH,CAAC;CACF;AAGK,MAAO,UAAU;IAKrB,YAAoB,QAAqC,CAAA;QAArC,IAAA,CAAA,QAAQ,GAAR,QAAQ,CAA6B;QAJjD,IAAA,CAAA,OAAO,GAAG,CAAC,CAAC;QACZ,IAAA,CAAA,aAAa,GAAG,IAAI,GAAG,EAA2D,CAAC;QACpF,IAAA,CAAA,OAAO,GAAG,IAAI,CAAC;IAEsC,CAAC;IAEtD,SAAS,CAAC,GAAiB,EAAA;QAChC,MAAM,EAAE,GAAG,GAAG,CAAC,EAAE,CAAC;QAElB,MAAM,YAAY,GAAG,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC;QAChD,IAAI,CAAC,YAAY,EAAE;YACjB,MAAM,IAAI,KAAK,CAAC,uCAAuC,CAAC,CAAC;SAC1D;QAED,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC;QAC9B,MAAM,CAAC,OAAO,EAAE,MAAM,CAAC,GAAG,YAAY,CAAC;QAEvC,OAAQ,GAAG,CAAC,IAAI,EAAE;YAChB,KAAK,gBAAgB,CAAC,KAAK;gBACzB,OAAO,MAAM,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;YAC3B,KAAK,gBAAgB,CAAC,oBAAoB,CAAC;YAC3C,KAAK,gBAAgB,CAAC,YAAY,CAAC;YACnC,KAAK,gBAAgB,CAAC,aAAa,CAAC;YACpC,KAAK,gBAAgB,CAAC,iBAAiB,CAAC;YACxC,KAAK,gBAAgB,CAAC,cAAc;gBAClC,OAAO,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;YAC/B;gBACE,MAAM,IAAI,KAAK,CAAC,CAAA,0CAAA,EAA6C,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC;SACvF;IACH,CAAC;IAEM,KAAK,CAAC,YAAY,GAAA;QACvB,OAAO,IAAI,CAAC,YAAY,CAAC;YACvB,EAAE,EAAE,IAAI,CAAC,OAAO,EAAE;YAClB,IAAI,EAAE,gBAAgB,CAAC,YAAY;SACpC,CAAC,CAAC,IAAI,EAAC,SAAS,CAAC,EAAE;YAClB,IAAI,OAAO,SAAS,KAAK,QAAQ,EAAE;gBACjC,MAAM,IAAI,KAAK,CAAC,6BAA6B,CAAC,CAAC;aAChD;YACD,wKAAO,YAAS,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC;QACvC,CAAC,CAAC,CAAC;IACL,CAAC;IAEM,SAAS,CACd,UAA8B,EAC9B,MAAwB,EAAA;QAExB,OAAO,IAAI,CAAC,YAAY,CAAC;YACvB,EAAE,EAAE,IAAI,CAAC,OAAO,EAAE;YAClB,IAAI,EAAE,gBAAgB,CAAC,SAAS;YAChC,IAAI,EAAE;gBAAC,UAAU,CAAC,QAAQ,EAAE;gBAAE,MAAM;aAAC;SACtC,CAA+B,CAAC;IACnC,CAAC;IAEM,IAAI,CAAC,UAA8B,EAAE,MAAmB,EAAA;QAC7D,OAAO,IAAI,CAAC,YAAY,CAAC;YACvB,EAAE,EAAE,IAAI,CAAC,OAAO,EAAE;YAClB,IAAI,EAAE,gBAAgB,CAAC,IAAI;YAC3B,IAAI,EAAE;gBAAC,UAAU,CAAC,QAAQ,EAAE;gBAAE,MAAM;aAAC;SACtC,CAA4B,CAAC;IAChC,CAAC;IAEM,MAAM,GAAA;QACX,OAAO,IAAI,CAAC,YAAY,CAAC;YACvB,EAAE,EAAE,IAAI,CAAC,OAAO,EAAE;YAClB,IAAI,EAAE,gBAAgB,CAAC,MAAM;SAC9B,CAAwB,CAAC;IAC5B,CAAC;IAEM,KAAK,CAAC,UAA8B,EAAE,MAAmB,EAAA;QAC9D,OAAO,IAAI,CAAC,YAAY,CAAC;YACvB,EAAE,EAAE,IAAI,CAAC,OAAO,EAAE;YAClB,IAAI,EAAE,gBAAgB,CAAC,KAAK;YAC5B,IAAI,EAAE;gBAAC,UAAU,CAAC,QAAQ,EAAE;gBAAE,MAAM;aAAC;SACtC,CAA8B,CAAC;IAClC,CAAC;IAEO,KAAK,CAAC,YAAY,CAAC,GAAiB,EAAA;QAC1C,OAAO,IAAI,OAAO,CAAC,CAAC,OAAO,EAAE,MAAM,EAAE,EAAE;YACrC,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE,EAAE;gBAAC,OAAO;gBAAE,MAAM;aAAC,CAAC,CAAC;YAElD,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC;QACrB,CAAC,CAAC,CAAC;IACL,CAAC;IAEM,KAAK,CAAC,YAAY,GAAA;QACvB,8CAA8C;QAC9C,MAAM,OAAO,GAAI,CAAC,MAAM,IAAI,CAAC,MAAM,EAAE,CAAS,CAAC,QAAQ,CAAC;QACxD,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;QACvB,OAAO,OAAO,CAAC;IACjB,CAAC;CACF","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 3190, "column": 0}, "map": {"version":3,"file":"index.js","sourceRoot":"","sources":["file:///home/brimzy/.dev/studifi/node_modules/%40dfinity/agent/src/agent/index.ts"],"sourcesContent":["import { GlobalInternetComputer } from '../index';\nimport { Agent } from './api';\n\nexport * from './api';\nexport * from './http';\nexport * from './http/errors';\nexport * from './proxy';\n\ndeclare const window: GlobalInternetComputer;\ndeclare const global: GlobalInternetComputer;\ndeclare const self: GlobalInternetComputer;\n\nexport function getDefaultAgent(): Agent {\n  const agent =\n    typeof window === 'undefined'\n      ? typeof global === 'undefined'\n        ? typeof self === 'undefined'\n          ? undefined\n          : self.ic.agent\n        : global.ic.agent\n      : window.ic.agent;\n\n  if (!agent) {\n    throw new Error('No Agent could be found.');\n  }\n\n  return agent;\n}\n"],"names":[],"mappings":";;;;;;;AAYM,SAAU,eAAe;IAC7B,MAAM,KAAK,GACT,OAAO,MAAM,KAAK,WAAW,GACzB,OAAO,MAAM,KAAK,WAAW,GAC3B,OAAO,IAAI,KAAK,WAAW,GACzB,SAAS,GACT,IAAI,CAAC,EAAE,CAAC,KAAK,GACf,MAAM,CAAC,EAAE,CAAC,KAAK,GACjB,MAAM,CAAC,EAAE,CAAC,KAAK,CAAC;IAEtB,IAAI,CAAC,KAAK,EAAE;QACV,MAAM,IAAI,KAAK,CAAC,0BAA0B,CAAC,CAAC;KAC7C;IAED,OAAO,KAAK,CAAC;AACf,CAAC","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 3222, "column": 0}, "map": {"version":3,"file":"strategy.js","sourceRoot":"","sources":["file:///home/brimzy/.dev/studifi/node_modules/%40dfinity/agent/src/polling/strategy.ts"],"sourcesContent":["import { Principal } from '@dfinity/principal';\nimport { RequestStatusResponseStatus } from '../agent';\nimport { toHex } from '../utils/buffer';\nimport { PollStrategy } from './index';\nimport { RequestId } from '../request_id';\n\nexport type Predicate<T> = (\n  canisterId: Principal,\n  requestId: RequestId,\n  status: RequestStatusResponseStatus,\n) => Promise<T>;\n\nconst FIVE_MINUTES_IN_MSEC = 5 * 60 * 1000;\n\n/**\n * A best practices polling strategy: wait 2 seconds before the first poll, then 1 second\n * with an exponential backoff factor of 1.2. Timeout after 5 minutes.\n */\nexport function defaultStrategy(): PollStrategy {\n  return chain(conditionalDelay(once(), 1000), backoff(1000, 1.2), timeout(FIVE_MINUTES_IN_MSEC));\n}\n\n/**\n * Predicate that returns true once.\n */\nexport function once(): Predicate<boolean> {\n  let first = true;\n  return async () => {\n    if (first) {\n      first = false;\n      return true;\n    }\n    return false;\n  };\n}\n\n/**\n * Delay the polling once.\n * @param condition A predicate that indicates when to delay.\n * @param timeInMsec The amount of time to delay.\n */\nexport function conditionalDelay(condition: Predicate<boolean>, timeInMsec: number): PollStrategy {\n  return async (\n    canisterId: Principal,\n    requestId: RequestId,\n    status: RequestStatusResponseStatus,\n  ) => {\n    if (await condition(canisterId, requestId, status)) {\n      return new Promise(resolve => setTimeout(resolve, timeInMsec));\n    }\n  };\n}\n\n/**\n * Error out after a maximum number of polling has been done.\n * @param count The maximum attempts to poll.\n */\nexport function maxAttempts(count: number): PollStrategy {\n  let attempts = count;\n  return async (\n    canisterId: Principal,\n    requestId: RequestId,\n    status: RequestStatusResponseStatus,\n  ) => {\n    if (--attempts <= 0) {\n      throw new Error(\n        `Failed to retrieve a reply for request after ${count} attempts:\\n` +\n          `  Request ID: ${toHex(requestId)}\\n` +\n          `  Request status: ${status}\\n`,\n      );\n    }\n  };\n}\n\n/**\n * Throttle polling.\n * @param throttleInMsec Amount in millisecond to wait between each polling.\n */\nexport function throttle(throttleInMsec: number): PollStrategy {\n  return () => new Promise(resolve => setTimeout(resolve, throttleInMsec));\n}\n\n/**\n * Reject a call after a certain amount of time.\n * @param timeInMsec Time in milliseconds before the polling should be rejected.\n */\nexport function timeout(timeInMsec: number): PollStrategy {\n  const end = Date.now() + timeInMsec;\n  return async (\n    canisterId: Principal,\n    requestId: RequestId,\n    status: RequestStatusResponseStatus,\n  ) => {\n    if (Date.now() > end) {\n      throw new Error(\n        `Request timed out after ${timeInMsec} msec:\\n` +\n          `  Request ID: ${toHex(requestId)}\\n` +\n          `  Request status: ${status}\\n`,\n      );\n    }\n  };\n}\n\n/**\n * A strategy that throttle, but using an exponential backoff strategy.\n * @param startingThrottleInMsec The throttle in milliseconds to start with.\n * @param backoffFactor The factor to multiple the throttle time between every poll. For\n *   example if using 2, the throttle will double between every run.\n */\nexport function backoff(startingThrottleInMsec: number, backoffFactor: number): PollStrategy {\n  let currentThrottling = startingThrottleInMsec;\n\n  return () =>\n    new Promise(resolve =>\n      setTimeout(() => {\n        currentThrottling *= backoffFactor;\n        resolve();\n      }, currentThrottling),\n    );\n}\n\n/**\n * Chain multiple polling strategy. This _chains_ the strategies, so if you pass in,\n * say, two throttling strategy of 1 second, it will result in a throttle of 2 seconds.\n * @param strategies A strategy list to chain.\n */\nexport function chain(...strategies: PollStrategy[]): PollStrategy {\n  return async (\n    canisterId: Principal,\n    requestId: RequestId,\n    status: RequestStatusResponseStatus,\n  ) => {\n    for (const a of strategies) {\n      await a(canisterId, requestId, status);\n    }\n  };\n}\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 3294, "column": 0}, "map": {"version":3,"file":"index.js","sourceRoot":"","sources":["file:///home/brimzy/.dev/studifi/node_modules/%40dfinity/agent/src/polling/index.ts"],"sourcesContent":["import { Principal } from '@dfinity/principal';\nimport { Agent, Expiry, RequestStatusResponseStatus } from '../agent';\nimport { Certificate, CreateCertificateOptions, lookupResultToBuffer } from '../certificate';\nimport { RequestId } from '../request_id';\nimport { toHex } from '../utils/buffer';\n\nexport * as strategy from './strategy';\nimport { defaultStrategy } from './strategy';\nimport { DEFAULT_INGRESS_EXPIRY_DELTA_IN_MSECS } from '../constants';\nimport { ReadRequestType, ReadStateRequest } from '../agent/http/types';\nexport { defaultStrategy } from './strategy';\nexport type PollStrategy = (\n  canisterId: Principal,\n  requestId: RequestId,\n  status: RequestStatusResponseStatus,\n) => Promise<void>;\nexport type PollStrategyFactory = () => PollStrategy;\n\ninterface SignedReadStateRequestWithExpiry {\n  body: {\n    content: Pick<ReadStateRequest, 'request_type' | 'ingress_expiry'>;\n  };\n}\n\n/**\n * Check if an object has a property\n * @param value the object that might have the property\n * @param property the key of property we're looking for\n */\nfunction hasProperty<O extends object, P extends string>(\n  value: O,\n  property: P,\n): value is O & Record<P, unknown> {\n  return Object.prototype.hasOwnProperty.call(value, property);\n}\n\n/**\n * Check if value is a signed read state request with expiry\n * @param value to check\n */\nfunction isSignedReadStateRequestWithExpiry(\n  value: unknown,\n): value is SignedReadStateRequestWithExpiry {\n  return (\n    value !== null &&\n    typeof value === 'object' &&\n    hasProperty(value, 'body') &&\n    value.body !== null &&\n    typeof value.body === 'object' &&\n    hasProperty(value.body, 'content') &&\n    value.body.content !== null &&\n    typeof value.body.content === 'object' &&\n    hasProperty(value.body.content, 'request_type') &&\n    value.body.content.request_type === ReadRequestType.ReadState &&\n    hasProperty(value.body.content, 'ingress_expiry') &&\n    typeof value.body.content.ingress_expiry === 'object' &&\n    value.body.content.ingress_expiry !== null &&\n    hasProperty(value.body.content.ingress_expiry, 'toCBOR') &&\n    typeof value.body.content.ingress_expiry.toCBOR === 'function' &&\n    hasProperty(value.body.content.ingress_expiry, 'toHash') &&\n    typeof value.body.content.ingress_expiry.toHash === 'function'\n  );\n}\n\n/**\n * Polls the IC to check the status of the given request then\n * returns the response bytes once the request has been processed.\n * @param agent The agent to use to poll read_state.\n * @param canisterId The effective canister ID.\n * @param requestId The Request ID to poll status for.\n * @param strategy A polling strategy.\n * @param request Request for the repeated readState call.\n * @param blsVerify - optional replacement function that verifies the BLS signature of a certificate.\n */\nexport async function pollForResponse(\n  agent: Agent,\n  canisterId: Principal,\n  requestId: RequestId,\n  strategy: PollStrategy = defaultStrategy(),\n  request?: unknown,\n  blsVerify?: CreateCertificateOptions['blsVerify'],\n): Promise<{\n  certificate: Certificate;\n  reply: ArrayBuffer;\n}> {\n  const path = [new TextEncoder().encode('request_status'), requestId];\n  const currentRequest = request ?? (await agent.createReadStateRequest?.({ paths: [path] }));\n\n  const state = await agent.readState(canisterId, { paths: [path] }, undefined, currentRequest);\n  if (agent.rootKey == null) throw new Error('Agent root key not initialized before polling');\n  const cert = await Certificate.create({\n    certificate: state.certificate,\n    rootKey: agent.rootKey,\n    canisterId: canisterId,\n    blsVerify,\n  });\n\n  const maybeBuf = lookupResultToBuffer(cert.lookup([...path, new TextEncoder().encode('status')]));\n  let status;\n  if (typeof maybeBuf === 'undefined') {\n    // Missing requestId means we need to wait\n    status = RequestStatusResponseStatus.Unknown;\n  } else {\n    status = new TextDecoder().decode(maybeBuf);\n  }\n\n  switch (status) {\n    case RequestStatusResponseStatus.Replied: {\n      return {\n        reply: lookupResultToBuffer(cert.lookup([...path, 'reply']))!,\n        certificate: cert,\n      };\n    }\n\n    case RequestStatusResponseStatus.Received:\n    case RequestStatusResponseStatus.Unknown:\n    case RequestStatusResponseStatus.Processing:\n      // Execute the polling strategy, then retry.\n      await strategy(canisterId, requestId, status);\n      return pollForResponse(agent, canisterId, requestId, strategy, currentRequest, blsVerify);\n\n    case RequestStatusResponseStatus.Rejected: {\n      const rejectCode = new Uint8Array(\n        lookupResultToBuffer(cert.lookup([...path, 'reject_code']))!,\n      )[0];\n      const rejectMessage = new TextDecoder().decode(\n        lookupResultToBuffer(cert.lookup([...path, 'reject_message']))!,\n      );\n      throw new Error(\n        `Call was rejected:\\n` +\n          `  Request ID: ${toHex(requestId)}\\n` +\n          `  Reject code: ${rejectCode}\\n` +\n          `  Reject text: ${rejectMessage}\\n`,\n      );\n    }\n\n    case RequestStatusResponseStatus.Done:\n      // This is _technically_ not an error, but we still didn't see the `Replied` status so\n      // we don't know the result and cannot decode it.\n      throw new Error(\n        `Call was marked as done but we never saw the reply:\\n` +\n          `  Request ID: ${toHex(requestId)}\\n`,\n      );\n  }\n  throw new Error('unreachable');\n}\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 3418, "column": 0}, "map": {"version":3,"file":"management_idl.js","sourceRoot":"","sources":["file:///home/brimzy/.dev/studifi/node_modules/%40dfinity/agent/src/canisters/management_idl.ts"],"sourcesContent":["/*\n * This file is generated from the candid for asset management.\n * didc version: 0.4.0\n */\n// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n// @ts-ignore\n\nexport default ({ IDL }) => {\n  const bitcoin_network = IDL.Variant({\n    mainnet: IDL.Null,\n    testnet: IDL.Null,\n  });\n  const bitcoin_address = IDL.Text;\n  const bitcoin_get_balance_args = IDL.Record({\n    network: bitcoin_network,\n    address: bitcoin_address,\n    min_confirmations: IDL.Opt(IDL.Nat32),\n  });\n  const satoshi = IDL.Nat64;\n  const bitcoin_get_balance_result = satoshi;\n  const bitcoin_block_height = IDL.Nat32;\n  const bitcoin_get_block_headers_args = IDL.Record({\n    start_height: bitcoin_block_height,\n    end_height: IDL.Opt(bitcoin_block_height),\n    network: bitcoin_network,\n  });\n  const bitcoin_block_header = IDL.Vec(IDL.Nat8);\n  const bitcoin_get_block_headers_result = IDL.Record({\n    tip_height: bitcoin_block_height,\n    block_headers: IDL.Vec(bitcoin_block_header),\n  });\n  const bitcoin_get_current_fee_percentiles_args = IDL.Record({\n    network: bitcoin_network,\n  });\n  const millisatoshi_per_byte = IDL.Nat64;\n  const bitcoin_get_current_fee_percentiles_result = IDL.Vec(millisatoshi_per_byte);\n  const bitcoin_get_utxos_args = IDL.Record({\n    network: bitcoin_network,\n    filter: IDL.Opt(\n      IDL.Variant({\n        page: IDL.Vec(IDL.Nat8),\n        min_confirmations: IDL.Nat32,\n      }),\n    ),\n    address: bitcoin_address,\n  });\n  const bitcoin_block_hash = IDL.Vec(IDL.Nat8);\n  const outpoint = IDL.Record({\n    txid: IDL.Vec(IDL.Nat8),\n    vout: IDL.Nat32,\n  });\n  const utxo = IDL.Record({\n    height: IDL.Nat32,\n    value: satoshi,\n    outpoint: outpoint,\n  });\n  const bitcoin_get_utxos_result = IDL.Record({\n    next_page: IDL.Opt(IDL.Vec(IDL.Nat8)),\n    tip_height: bitcoin_block_height,\n    tip_block_hash: bitcoin_block_hash,\n    utxos: IDL.Vec(utxo),\n  });\n  const bitcoin_send_transaction_args = IDL.Record({\n    transaction: IDL.Vec(IDL.Nat8),\n    network: bitcoin_network,\n  });\n  const canister_id = IDL.Principal;\n  const canister_info_args = IDL.Record({\n    canister_id: canister_id,\n    num_requested_changes: IDL.Opt(IDL.Nat64),\n  });\n  const change_origin = IDL.Variant({\n    from_user: IDL.Record({ user_id: IDL.Principal }),\n    from_canister: IDL.Record({\n      canister_version: IDL.Opt(IDL.Nat64),\n      canister_id: IDL.Principal,\n    }),\n  });\n  const snapshot_id = IDL.Vec(IDL.Nat8);\n  const change_details = IDL.Variant({\n    creation: IDL.Record({ controllers: IDL.Vec(IDL.Principal) }),\n    code_deployment: IDL.Record({\n      mode: IDL.Variant({\n        reinstall: IDL.Null,\n        upgrade: IDL.Null,\n        install: IDL.Null,\n      }),\n      module_hash: IDL.Vec(IDL.Nat8),\n    }),\n    load_snapshot: IDL.Record({\n      canister_version: IDL.Nat64,\n      taken_at_timestamp: IDL.Nat64,\n      snapshot_id: snapshot_id,\n    }),\n    controllers_change: IDL.Record({\n      controllers: IDL.Vec(IDL.Principal),\n    }),\n    code_uninstall: IDL.Null,\n  });\n  const change = IDL.Record({\n    timestamp_nanos: IDL.Nat64,\n    canister_version: IDL.Nat64,\n    origin: change_origin,\n    details: change_details,\n  });\n  const canister_info_result = IDL.Record({\n    controllers: IDL.Vec(IDL.Principal),\n    module_hash: IDL.Opt(IDL.Vec(IDL.Nat8)),\n    recent_changes: IDL.Vec(change),\n    total_num_changes: IDL.Nat64,\n  });\n  const canister_status_args = IDL.Record({ canister_id: canister_id });\n  const log_visibility = IDL.Variant({\n    controllers: IDL.Null,\n    public: IDL.Null,\n    allowed_viewers: IDL.Vec(IDL.Principal),\n  });\n  const definite_canister_settings = IDL.Record({\n    freezing_threshold: IDL.Nat,\n    controllers: IDL.Vec(IDL.Principal),\n    reserved_cycles_limit: IDL.Nat,\n    log_visibility: log_visibility,\n    wasm_memory_limit: IDL.Nat,\n    memory_allocation: IDL.Nat,\n    compute_allocation: IDL.Nat,\n  });\n  const canister_status_result = IDL.Record({\n    status: IDL.Variant({\n      stopped: IDL.Null,\n      stopping: IDL.Null,\n      running: IDL.Null,\n    }),\n    memory_size: IDL.Nat,\n    cycles: IDL.Nat,\n    settings: definite_canister_settings,\n    query_stats: IDL.Record({\n      response_payload_bytes_total: IDL.Nat,\n      num_instructions_total: IDL.Nat,\n      num_calls_total: IDL.Nat,\n      request_payload_bytes_total: IDL.Nat,\n    }),\n    idle_cycles_burned_per_day: IDL.Nat,\n    module_hash: IDL.Opt(IDL.Vec(IDL.Nat8)),\n    reserved_cycles: IDL.Nat,\n  });\n  const clear_chunk_store_args = IDL.Record({ canister_id: canister_id });\n  const canister_settings = IDL.Record({\n    freezing_threshold: IDL.Opt(IDL.Nat),\n    controllers: IDL.Opt(IDL.Vec(IDL.Principal)),\n    reserved_cycles_limit: IDL.Opt(IDL.Nat),\n    log_visibility: IDL.Opt(log_visibility),\n    wasm_memory_limit: IDL.Opt(IDL.Nat),\n    memory_allocation: IDL.Opt(IDL.Nat),\n    compute_allocation: IDL.Opt(IDL.Nat),\n  });\n  const create_canister_args = IDL.Record({\n    settings: IDL.Opt(canister_settings),\n    sender_canister_version: IDL.Opt(IDL.Nat64),\n  });\n  const create_canister_result = IDL.Record({ canister_id: canister_id });\n  const delete_canister_args = IDL.Record({ canister_id: canister_id });\n  const delete_canister_snapshot_args = IDL.Record({\n    canister_id: canister_id,\n    snapshot_id: snapshot_id,\n  });\n  const deposit_cycles_args = IDL.Record({ canister_id: canister_id });\n  const ecdsa_curve = IDL.Variant({ secp256k1: IDL.Null });\n  const ecdsa_public_key_args = IDL.Record({\n    key_id: IDL.Record({ name: IDL.Text, curve: ecdsa_curve }),\n    canister_id: IDL.Opt(canister_id),\n    derivation_path: IDL.Vec(IDL.Vec(IDL.Nat8)),\n  });\n  const ecdsa_public_key_result = IDL.Record({\n    public_key: IDL.Vec(IDL.Nat8),\n    chain_code: IDL.Vec(IDL.Nat8),\n  });\n  const fetch_canister_logs_args = IDL.Record({ canister_id: canister_id });\n  const canister_log_record = IDL.Record({\n    idx: IDL.Nat64,\n    timestamp_nanos: IDL.Nat64,\n    content: IDL.Vec(IDL.Nat8),\n  });\n  const fetch_canister_logs_result = IDL.Record({\n    canister_log_records: IDL.Vec(canister_log_record),\n  });\n  const http_header = IDL.Record({ value: IDL.Text, name: IDL.Text });\n  const http_request_result = IDL.Record({\n    status: IDL.Nat,\n    body: IDL.Vec(IDL.Nat8),\n    headers: IDL.Vec(http_header),\n  });\n  const http_request_args = IDL.Record({\n    url: IDL.Text,\n    method: IDL.Variant({\n      get: IDL.Null,\n      head: IDL.Null,\n      post: IDL.Null,\n    }),\n    max_response_bytes: IDL.Opt(IDL.Nat64),\n    body: IDL.Opt(IDL.Vec(IDL.Nat8)),\n    transform: IDL.Opt(\n      IDL.Record({\n        function: IDL.Func(\n          [\n            IDL.Record({\n              context: IDL.Vec(IDL.Nat8),\n              response: http_request_result,\n            }),\n          ],\n          [http_request_result],\n          ['query'],\n        ),\n        context: IDL.Vec(IDL.Nat8),\n      }),\n    ),\n    headers: IDL.Vec(http_header),\n  });\n  const canister_install_mode = IDL.Variant({\n    reinstall: IDL.Null,\n    upgrade: IDL.Opt(\n      IDL.Record({\n        wasm_memory_persistence: IDL.Opt(IDL.Variant({ keep: IDL.Null, replace: IDL.Null })),\n        skip_pre_upgrade: IDL.Opt(IDL.Bool),\n      }),\n    ),\n    install: IDL.Null,\n  });\n  const chunk_hash = IDL.Record({ hash: IDL.Vec(IDL.Nat8) });\n  const install_chunked_code_args = IDL.Record({\n    arg: IDL.Vec(IDL.Nat8),\n    wasm_module_hash: IDL.Vec(IDL.Nat8),\n    mode: canister_install_mode,\n    chunk_hashes_list: IDL.Vec(chunk_hash),\n    target_canister: canister_id,\n    store_canister: IDL.Opt(canister_id),\n    sender_canister_version: IDL.Opt(IDL.Nat64),\n  });\n  const wasm_module = IDL.Vec(IDL.Nat8);\n  const install_code_args = IDL.Record({\n    arg: IDL.Vec(IDL.Nat8),\n    wasm_module: wasm_module,\n    mode: canister_install_mode,\n    canister_id: canister_id,\n    sender_canister_version: IDL.Opt(IDL.Nat64),\n  });\n  const list_canister_snapshots_args = IDL.Record({\n    canister_id: canister_id,\n  });\n  const snapshot = IDL.Record({\n    id: snapshot_id,\n    total_size: IDL.Nat64,\n    taken_at_timestamp: IDL.Nat64,\n  });\n  const list_canister_snapshots_result = IDL.Vec(snapshot);\n  const load_canister_snapshot_args = IDL.Record({\n    canister_id: canister_id,\n    sender_canister_version: IDL.Opt(IDL.Nat64),\n    snapshot_id: snapshot_id,\n  });\n  const node_metrics_history_args = IDL.Record({\n    start_at_timestamp_nanos: IDL.Nat64,\n    subnet_id: IDL.Principal,\n  });\n  const node_metrics = IDL.Record({\n    num_block_failures_total: IDL.Nat64,\n    node_id: IDL.Principal,\n    num_blocks_proposed_total: IDL.Nat64,\n  });\n  const node_metrics_history_result = IDL.Vec(\n    IDL.Record({\n      timestamp_nanos: IDL.Nat64,\n      node_metrics: IDL.Vec(node_metrics),\n    }),\n  );\n  const provisional_create_canister_with_cycles_args = IDL.Record({\n    settings: IDL.Opt(canister_settings),\n    specified_id: IDL.Opt(canister_id),\n    amount: IDL.Opt(IDL.Nat),\n    sender_canister_version: IDL.Opt(IDL.Nat64),\n  });\n  const provisional_create_canister_with_cycles_result = IDL.Record({\n    canister_id: canister_id,\n  });\n  const provisional_top_up_canister_args = IDL.Record({\n    canister_id: canister_id,\n    amount: IDL.Nat,\n  });\n  const raw_rand_result = IDL.Vec(IDL.Nat8);\n  const schnorr_algorithm = IDL.Variant({\n    ed25519: IDL.Null,\n    bip340secp256k1: IDL.Null,\n  });\n  const schnorr_public_key_args = IDL.Record({\n    key_id: IDL.Record({\n      algorithm: schnorr_algorithm,\n      name: IDL.Text,\n    }),\n    canister_id: IDL.Opt(canister_id),\n    derivation_path: IDL.Vec(IDL.Vec(IDL.Nat8)),\n  });\n  const schnorr_public_key_result = IDL.Record({\n    public_key: IDL.Vec(IDL.Nat8),\n    chain_code: IDL.Vec(IDL.Nat8),\n  });\n  const sign_with_ecdsa_args = IDL.Record({\n    key_id: IDL.Record({ name: IDL.Text, curve: ecdsa_curve }),\n    derivation_path: IDL.Vec(IDL.Vec(IDL.Nat8)),\n    message_hash: IDL.Vec(IDL.Nat8),\n  });\n  const sign_with_ecdsa_result = IDL.Record({\n    signature: IDL.Vec(IDL.Nat8),\n  });\n  const schnorr_aux = IDL.Variant({\n    bip341: IDL.Record({ merkle_root_hash: IDL.Vec(IDL.Nat8) }),\n  });\n  const sign_with_schnorr_args = IDL.Record({\n    aux: IDL.Opt(schnorr_aux),\n    key_id: IDL.Record({\n      algorithm: schnorr_algorithm,\n      name: IDL.Text,\n    }),\n    derivation_path: IDL.Vec(IDL.Vec(IDL.Nat8)),\n    message: IDL.Vec(IDL.Nat8),\n  });\n  const sign_with_schnorr_result = IDL.Record({\n    signature: IDL.Vec(IDL.Nat8),\n  });\n  const start_canister_args = IDL.Record({ canister_id: canister_id });\n  const stop_canister_args = IDL.Record({ canister_id: canister_id });\n  const stored_chunks_args = IDL.Record({ canister_id: canister_id });\n  const stored_chunks_result = IDL.Vec(chunk_hash);\n  const subnet_info_args = IDL.Record({ subnet_id: IDL.Principal });\n  const subnet_info_result = IDL.Record({ replica_version: IDL.Text });\n  const take_canister_snapshot_args = IDL.Record({\n    replace_snapshot: IDL.Opt(snapshot_id),\n    canister_id: canister_id,\n  });\n  const take_canister_snapshot_result = snapshot;\n  const uninstall_code_args = IDL.Record({\n    canister_id: canister_id,\n    sender_canister_version: IDL.Opt(IDL.Nat64),\n  });\n  const update_settings_args = IDL.Record({\n    canister_id: IDL.Principal,\n    settings: canister_settings,\n    sender_canister_version: IDL.Opt(IDL.Nat64),\n  });\n  const upload_chunk_args = IDL.Record({\n    chunk: IDL.Vec(IDL.Nat8),\n    canister_id: IDL.Principal,\n  });\n  const upload_chunk_result = chunk_hash;\n  return IDL.Service({\n    bitcoin_get_balance: IDL.Func([bitcoin_get_balance_args], [bitcoin_get_balance_result], []),\n    bitcoin_get_block_headers: IDL.Func(\n      [bitcoin_get_block_headers_args],\n      [bitcoin_get_block_headers_result],\n      [],\n    ),\n    bitcoin_get_current_fee_percentiles: IDL.Func(\n      [bitcoin_get_current_fee_percentiles_args],\n      [bitcoin_get_current_fee_percentiles_result],\n      [],\n    ),\n    bitcoin_get_utxos: IDL.Func([bitcoin_get_utxos_args], [bitcoin_get_utxos_result], []),\n    bitcoin_send_transaction: IDL.Func([bitcoin_send_transaction_args], [], []),\n    canister_info: IDL.Func([canister_info_args], [canister_info_result], []),\n    canister_status: IDL.Func([canister_status_args], [canister_status_result], []),\n    clear_chunk_store: IDL.Func([clear_chunk_store_args], [], []),\n    create_canister: IDL.Func([create_canister_args], [create_canister_result], []),\n    delete_canister: IDL.Func([delete_canister_args], [], []),\n    delete_canister_snapshot: IDL.Func([delete_canister_snapshot_args], [], []),\n    deposit_cycles: IDL.Func([deposit_cycles_args], [], []),\n    ecdsa_public_key: IDL.Func([ecdsa_public_key_args], [ecdsa_public_key_result], []),\n    fetch_canister_logs: IDL.Func(\n      [fetch_canister_logs_args],\n      [fetch_canister_logs_result],\n      ['query'],\n    ),\n    http_request: IDL.Func([http_request_args], [http_request_result], []),\n    install_chunked_code: IDL.Func([install_chunked_code_args], [], []),\n    install_code: IDL.Func([install_code_args], [], []),\n    list_canister_snapshots: IDL.Func(\n      [list_canister_snapshots_args],\n      [list_canister_snapshots_result],\n      [],\n    ),\n    load_canister_snapshot: IDL.Func([load_canister_snapshot_args], [], []),\n    node_metrics_history: IDL.Func([node_metrics_history_args], [node_metrics_history_result], []),\n    provisional_create_canister_with_cycles: IDL.Func(\n      [provisional_create_canister_with_cycles_args],\n      [provisional_create_canister_with_cycles_result],\n      [],\n    ),\n    provisional_top_up_canister: IDL.Func([provisional_top_up_canister_args], [], []),\n    raw_rand: IDL.Func([], [raw_rand_result], []),\n    schnorr_public_key: IDL.Func([schnorr_public_key_args], [schnorr_public_key_result], []),\n    sign_with_ecdsa: IDL.Func([sign_with_ecdsa_args], [sign_with_ecdsa_result], []),\n    sign_with_schnorr: IDL.Func([sign_with_schnorr_args], [sign_with_schnorr_result], []),\n    start_canister: IDL.Func([start_canister_args], [], []),\n    stop_canister: IDL.Func([stop_canister_args], [], []),\n    stored_chunks: IDL.Func([stored_chunks_args], [stored_chunks_result], []),\n    subnet_info: IDL.Func([subnet_info_args], [subnet_info_result], []),\n    take_canister_snapshot: IDL.Func(\n      [take_canister_snapshot_args],\n      [take_canister_snapshot_result],\n      [],\n    ),\n    uninstall_code: IDL.Func([uninstall_code_args], [], []),\n    update_settings: IDL.Func([update_settings_args], [], []),\n    upload_chunk: IDL.Func([upload_chunk_args], [upload_chunk_result], []),\n  });\n};\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 3961, "column": 0}, "map": {"version":3,"file":"actor.js","sourceRoot":"","sources":["file:///home/brimzy/.dev/studifi/node_modules/%40dfinity/agent/src/actor.ts"],"sourcesContent":["import { Buffer } from 'buffer/';\nimport {\n  Agent,\n  getDefaultAgent,\n  HttpDetailsResponse,\n  QueryResponseRejected,\n  QueryResponseStatus,\n  ReplicaRejectCode,\n  SubmitResponse,\n  v2ResponseBody,\n  v3ResponseBody,\n} from './agent';\nimport { AgentError } from './errors';\nimport { bufFromBufLike, IDL } from '@dfinity/candid';\nimport { pollForResponse, PollStrategyFactory, strategy } from './polling';\nimport { Principal } from '@dfinity/principal';\nimport { RequestId } from './request_id';\nimport { toHex } from './utils/buffer';\nimport { Certificate, CreateCertificateOptions, lookupResultToBuffer } from './certificate';\nimport managementCanisterIdl from './canisters/management_idl';\nimport _SERVICE, { canister_install_mode, canister_settings } from './canisters/management_service';\n\nexport class ActorCallError extends AgentError {\n  constructor(\n    public readonly canisterId: Principal,\n    public readonly methodName: string,\n    public readonly type: 'query' | 'update',\n    public readonly props: Record<string, string>,\n  ) {\n    super(\n      [\n        `Call failed:`,\n        `  Canister: ${canisterId.toText()}`,\n        `  Method: ${methodName} (${type})`,\n        ...Object.getOwnPropertyNames(props).map(n => `  \"${n}\": ${JSON.stringify(props[n])}`),\n      ].join('\\n'),\n    );\n  }\n}\n\nexport class QueryCallRejectedError extends ActorCallError {\n  constructor(\n    canisterId: Principal,\n    methodName: string,\n    public readonly result: QueryResponseRejected,\n  ) {\n    super(canisterId, methodName, 'query', {\n      Status: result.status,\n      Code: ReplicaRejectCode[result.reject_code] ?? `Unknown Code \"${result.reject_code}\"`,\n      Message: result.reject_message,\n    });\n  }\n}\n\nexport class UpdateCallRejectedError extends ActorCallError {\n  constructor(\n    canisterId: Principal,\n    methodName: string,\n    public readonly requestId: RequestId,\n    public readonly response: SubmitResponse['response'],\n    public readonly reject_code: ReplicaRejectCode,\n    public readonly reject_message: string,\n    public readonly error_code?: string,\n  ) {\n    super(canisterId, methodName, 'update', {\n      'Request ID': toHex(requestId),\n      ...(response.body\n        ? {\n            ...(error_code\n              ? {\n                  'Error code': error_code,\n                }\n              : {}),\n            'Reject code': String(reject_code),\n            'Reject message': reject_message,\n          }\n        : {\n            'HTTP status code': response.status.toString(),\n            'HTTP status text': response.statusText,\n          }),\n    });\n  }\n}\n\n/**\n * Configuration to make calls to the Replica.\n */\nexport interface CallConfig {\n  /**\n   * An agent to use in this call, otherwise the actor or call will try to discover the\n   * agent to use.\n   */\n  agent?: Agent;\n\n  /**\n   * A polling strategy factory that dictates how much and often we should poll the\n   * read_state endpoint to get the result of an update call.\n   */\n  pollingStrategyFactory?: PollStrategyFactory;\n\n  /**\n   * The canister ID of this Actor.\n   */\n  canisterId?: string | Principal;\n\n  /**\n   * The effective canister ID. This should almost always be ignored.\n   */\n  effectiveCanisterId?: Principal;\n}\n\n/**\n * Configuration that can be passed to customize the Actor behaviour.\n */\nexport interface ActorConfig extends CallConfig {\n  /**\n   * The Canister ID of this Actor. This is required for an Actor.\n   */\n  canisterId: string | Principal;\n\n  /**\n   * An override function for update calls' CallConfig. This will be called on every calls.\n   */\n  callTransform?(\n    methodName: string,\n    args: unknown[],\n    callConfig: CallConfig,\n  ): Partial<CallConfig> | void;\n\n  /**\n   * An override function for query calls' CallConfig. This will be called on every query.\n   */\n  queryTransform?(\n    methodName: string,\n    args: unknown[],\n    callConfig: CallConfig,\n  ): Partial<CallConfig> | void;\n\n  /**\n   * Polyfill for BLS Certificate verification in case wasm is not supported\n   */\n  blsVerify?: CreateCertificateOptions['blsVerify'];\n}\n\n// TODO: move this to proper typing when Candid support TypeScript.\n/**\n * A subclass of an actor. Actor class itself is meant to be a based class.\n */\nexport type ActorSubclass<T = Record<string, ActorMethod>> = Actor & T;\n\n/**\n * An actor method type, defined for each methods of the actor service.\n */\nexport interface ActorMethod<Args extends unknown[] = unknown[], Ret = unknown> {\n  (...args: Args): Promise<Ret>;\n\n  withOptions(options: CallConfig): (...args: Args) => Promise<Ret>;\n}\n\n/**\n * An actor method type, defined for each methods of the actor service.\n */\nexport interface ActorMethodWithHttpDetails<Args extends unknown[] = unknown[], Ret = unknown>\n  extends ActorMethod {\n  (...args: Args): Promise<{ httpDetails: HttpDetailsResponse; result: Ret }>;\n}\n\n/**\n * An actor method type, defined for each methods of the actor service.\n */\nexport interface ActorMethodExtended<Args extends unknown[] = unknown[], Ret = unknown>\n  extends ActorMethod {\n  (...args: Args): Promise<{\n    certificate?: Certificate;\n    httpDetails?: HttpDetailsResponse;\n    result: Ret;\n  }>;\n}\n\nexport type FunctionWithArgsAndReturn<Args extends unknown[] = unknown[], Ret = unknown> = (\n  ...args: Args\n) => Ret;\n\n// Update all entries of T with the extra information from ActorMethodWithInfo\nexport type ActorMethodMappedWithHttpDetails<T> = {\n  [K in keyof T]: T[K] extends FunctionWithArgsAndReturn<infer Args, infer Ret>\n    ? ActorMethodWithHttpDetails<Args, Ret>\n    : never;\n};\n\n// Update all entries of T with the extra information from ActorMethodWithInfo\nexport type ActorMethodMappedExtended<T> = {\n  [K in keyof T]: T[K] extends FunctionWithArgsAndReturn<infer Args, infer Ret>\n    ? ActorMethodExtended<Args, Ret>\n    : never;\n};\n\n/**\n * The mode used when installing a canister.\n */\nexport type CanisterInstallMode =\n  | {\n      reinstall: null;\n    }\n  | {\n      upgrade:\n        | []\n        | [\n            {\n              skip_pre_upgrade: [] | [boolean];\n            },\n          ];\n    }\n  | {\n      install: null;\n    };\n\n/**\n * Internal metadata for actors. It's an enhanced version of ActorConfig with\n * some fields marked as required (as they are defaulted) and canisterId as\n * a Principal type.\n */\ninterface ActorMetadata {\n  service: IDL.ServiceClass;\n  agent?: Agent;\n  config: ActorConfig;\n}\n\nconst metadataSymbol = Symbol.for('ic-agent-metadata');\n\nexport interface CreateActorClassOpts {\n  httpDetails?: boolean;\n  certificate?: boolean;\n}\n\ninterface CreateCanisterSettings {\n  freezing_threshold?: bigint;\n  controllers?: Array<Principal>;\n  memory_allocation?: bigint;\n  compute_allocation?: bigint;\n}\n\n/**\n * An actor base class. An actor is an object containing only functions that will\n * return a promise. These functions are derived from the IDL definition.\n */\nexport class Actor {\n  /**\n   * Get the Agent class this Actor would call, or undefined if the Actor would use\n   * the default agent (global.ic.agent).\n   * @param actor The actor to get the agent of.\n   */\n  public static agentOf(actor: Actor): Agent | undefined {\n    return actor[metadataSymbol].config.agent;\n  }\n\n  /**\n   * Get the interface of an actor, in the form of an instance of a Service.\n   * @param actor The actor to get the interface of.\n   */\n  public static interfaceOf(actor: Actor): IDL.ServiceClass {\n    return actor[metadataSymbol].service;\n  }\n\n  public static canisterIdOf(actor: Actor): Principal {\n    return Principal.from(actor[metadataSymbol].config.canisterId);\n  }\n\n  public static async install(\n    fields: {\n      module: ArrayBuffer;\n      mode?: canister_install_mode;\n      arg?: ArrayBuffer;\n    },\n    config: ActorConfig,\n  ): Promise<void> {\n    const mode = fields.mode === undefined ? { install: null } : fields.mode;\n    // Need to transform the arg into a number array.\n    const arg = fields.arg ? [...new Uint8Array(fields.arg)] : [];\n    // Same for module.\n    const wasmModule = [...new Uint8Array(fields.module)];\n    const canisterId =\n      typeof config.canisterId === 'string'\n        ? Principal.fromText(config.canisterId)\n        : config.canisterId;\n\n    await getManagementCanister(config).install_code({\n      mode,\n      arg,\n      wasm_module: wasmModule,\n      canister_id: canisterId,\n      sender_canister_version: [],\n    });\n  }\n\n  public static async createCanister(\n    config?: CallConfig,\n    settings?: CreateCanisterSettings,\n  ): Promise<Principal> {\n    function settingsToCanisterSettings(settings: CreateCanisterSettings): [canister_settings] {\n      return [\n        {\n          controllers: settings.controllers ? [settings.controllers] : [],\n          compute_allocation: settings.compute_allocation ? [settings.compute_allocation] : [],\n          freezing_threshold: settings.freezing_threshold ? [settings.freezing_threshold] : [],\n          memory_allocation: settings.memory_allocation ? [settings.memory_allocation] : [],\n          reserved_cycles_limit: [],\n          log_visibility: [],\n          wasm_memory_limit: [],\n        },\n      ];\n    }\n\n    const { canister_id: canisterId } = await getManagementCanister(\n      config || {},\n    ).provisional_create_canister_with_cycles({\n      amount: [],\n      settings: settingsToCanisterSettings(settings || {}),\n      specified_id: [],\n      sender_canister_version: [],\n    });\n\n    return canisterId;\n  }\n\n  public static async createAndInstallCanister(\n    interfaceFactory: IDL.InterfaceFactory,\n    fields: {\n      module: ArrayBuffer;\n      arg?: ArrayBuffer;\n    },\n    config?: CallConfig,\n  ): Promise<ActorSubclass> {\n    const canisterId = await this.createCanister(config);\n    await this.install(\n      {\n        ...fields,\n      },\n      { ...config, canisterId },\n    );\n\n    return this.createActor(interfaceFactory, { ...config, canisterId });\n  }\n\n  public static createActorClass(\n    interfaceFactory: IDL.InterfaceFactory,\n    options?: CreateActorClassOpts,\n  ): ActorConstructor {\n    const service = interfaceFactory({ IDL });\n\n    class CanisterActor extends Actor {\n      [x: string]: ActorMethod;\n\n      constructor(config: ActorConfig) {\n        if (!config.canisterId)\n          throw new AgentError(\n            `Canister ID is required, but received ${typeof config.canisterId} instead. If you are using automatically generated declarations, this may be because your application is not setting the canister ID in process.env correctly.`,\n          );\n        const canisterId =\n          typeof config.canisterId === 'string'\n            ? Principal.fromText(config.canisterId)\n            : config.canisterId;\n\n        super({\n          config: {\n            ...DEFAULT_ACTOR_CONFIG,\n            ...config,\n            canisterId,\n          },\n          service,\n        });\n\n        for (const [methodName, func] of service._fields) {\n          if (options?.httpDetails) {\n            func.annotations.push(ACTOR_METHOD_WITH_HTTP_DETAILS);\n          }\n          if (options?.certificate) {\n            func.annotations.push(ACTOR_METHOD_WITH_CERTIFICATE);\n          }\n\n          this[methodName] = _createActorMethod(this, methodName, func, config.blsVerify);\n        }\n      }\n    }\n\n    return CanisterActor;\n  }\n\n  public static createActor<T = Record<string, ActorMethod>>(\n    interfaceFactory: IDL.InterfaceFactory,\n    configuration: ActorConfig,\n  ): ActorSubclass<T> {\n    if (!configuration.canisterId) {\n      throw new AgentError(\n        `Canister ID is required, but received ${typeof configuration.canisterId} instead. If you are using automatically generated declarations, this may be because your application is not setting the canister ID in process.env correctly.`,\n      );\n    }\n    return new (this.createActorClass(interfaceFactory))(\n      configuration,\n    ) as unknown as ActorSubclass<T>;\n  }\n\n  /**\n   * Returns an actor with methods that return the http response details along with the result\n   * @param interfaceFactory - the interface factory for the actor\n   * @param configuration - the configuration for the actor\n   * @deprecated - use createActor with actorClassOptions instead\n   */\n  public static createActorWithHttpDetails<T = Record<string, ActorMethod>>(\n    interfaceFactory: IDL.InterfaceFactory,\n    configuration: ActorConfig,\n  ): ActorSubclass<ActorMethodMappedWithHttpDetails<T>> {\n    return new (this.createActorClass(interfaceFactory, { httpDetails: true }))(\n      configuration,\n    ) as unknown as ActorSubclass<ActorMethodMappedWithHttpDetails<T>>;\n  }\n\n  /**\n   * Returns an actor with methods that return the http response details along with the result\n   * @param interfaceFactory - the interface factory for the actor\n   * @param configuration - the configuration for the actor\n   * @param actorClassOptions - options for the actor class extended details to return with the result\n   */\n  public static createActorWithExtendedDetails<T = Record<string, ActorMethod>>(\n    interfaceFactory: IDL.InterfaceFactory,\n    configuration: ActorConfig,\n    actorClassOptions: CreateActorClassOpts = {\n      httpDetails: true,\n      certificate: true,\n    },\n  ): ActorSubclass<ActorMethodMappedExtended<T>> {\n    return new (this.createActorClass(interfaceFactory, actorClassOptions))(\n      configuration,\n    ) as unknown as ActorSubclass<ActorMethodMappedExtended<T>>;\n  }\n\n  private [metadataSymbol]: ActorMetadata;\n\n  protected constructor(metadata: ActorMetadata) {\n    this[metadataSymbol] = Object.freeze(metadata);\n  }\n}\n\n// IDL functions can have multiple return values, so decoding always\n// produces an array. Ensure that functions with single or zero return\n// values behave as expected.\nfunction decodeReturnValue(types: IDL.Type[], msg: ArrayBuffer) {\n  const returnValues = IDL.decode(types, Buffer.from(msg));\n  switch (returnValues.length) {\n    case 0:\n      return undefined;\n    case 1:\n      return returnValues[0];\n    default:\n      return returnValues;\n  }\n}\n\nconst DEFAULT_ACTOR_CONFIG = {\n  pollingStrategyFactory: strategy.defaultStrategy,\n};\n\nexport type ActorConstructor = new (config: ActorConfig) => ActorSubclass;\n\nexport const ACTOR_METHOD_WITH_HTTP_DETAILS = 'http-details';\nexport const ACTOR_METHOD_WITH_CERTIFICATE = 'certificate';\n\nfunction _createActorMethod(\n  actor: Actor,\n  methodName: string,\n  func: IDL.FuncClass,\n  blsVerify?: CreateCertificateOptions['blsVerify'],\n): ActorMethod {\n  let caller: (options: CallConfig, ...args: unknown[]) => Promise<unknown>;\n  if (func.annotations.includes('query') || func.annotations.includes('composite_query')) {\n    caller = async (options, ...args) => {\n      // First, if there's a config transformation, call it.\n      options = {\n        ...options,\n        ...actor[metadataSymbol].config.queryTransform?.(methodName, args, {\n          ...actor[metadataSymbol].config,\n          ...options,\n        }),\n      };\n\n      const agent = options.agent || actor[metadataSymbol].config.agent || getDefaultAgent();\n      const cid = Principal.from(options.canisterId || actor[metadataSymbol].config.canisterId);\n      const arg = IDL.encode(func.argTypes, args);\n\n      const result = await agent.query(cid, {\n        methodName,\n        arg,\n        effectiveCanisterId: options.effectiveCanisterId,\n      });\n      const httpDetails = {\n        ...result.httpDetails,\n        requestDetails: result.requestDetails,\n      } as HttpDetailsResponse;\n\n      switch (result.status) {\n        case QueryResponseStatus.Rejected:\n          throw new QueryCallRejectedError(cid, methodName, result);\n\n        case QueryResponseStatus.Replied:\n          return func.annotations.includes(ACTOR_METHOD_WITH_HTTP_DETAILS)\n            ? {\n                httpDetails,\n                result: decodeReturnValue(func.retTypes, result.reply.arg),\n              }\n            : decodeReturnValue(func.retTypes, result.reply.arg);\n      }\n    };\n  } else {\n    caller = async (options, ...args) => {\n      // First, if there's a config transformation, call it.\n      options = {\n        ...options,\n        ...actor[metadataSymbol].config.callTransform?.(methodName, args, {\n          ...actor[metadataSymbol].config,\n          ...options,\n        }),\n      };\n\n      const agent = options.agent || actor[metadataSymbol].config.agent || getDefaultAgent();\n      const { canisterId, effectiveCanisterId, pollingStrategyFactory } = {\n        ...DEFAULT_ACTOR_CONFIG,\n        ...actor[metadataSymbol].config,\n        ...options,\n      };\n      const cid = Principal.from(canisterId);\n      const ecid = effectiveCanisterId !== undefined ? Principal.from(effectiveCanisterId) : cid;\n      const arg = IDL.encode(func.argTypes, args);\n\n      const { requestId, response, requestDetails } = await agent.call(cid, {\n        methodName,\n        arg,\n        effectiveCanisterId: ecid,\n      });\n      let reply: ArrayBuffer | undefined;\n      let certificate: Certificate | undefined;\n      if (response.body && (response.body as v3ResponseBody).certificate) {\n        if (agent.rootKey == null) {\n          throw new Error('Agent is missing root key');\n        }\n        const cert = (response.body as v3ResponseBody).certificate;\n        certificate = await Certificate.create({\n          certificate: bufFromBufLike(cert),\n          rootKey: agent.rootKey,\n          canisterId: Principal.from(canisterId),\n          blsVerify,\n        });\n        const path = [new TextEncoder().encode('request_status'), requestId];\n        const status = new TextDecoder().decode(\n          lookupResultToBuffer(certificate.lookup([...path, 'status'])),\n        );\n\n        switch (status) {\n          case 'replied':\n            reply = lookupResultToBuffer(certificate.lookup([...path, 'reply']));\n            break;\n          case 'rejected': {\n            // Find rejection details in the certificate\n            const rejectCode = new Uint8Array(\n              lookupResultToBuffer(certificate.lookup([...path, 'reject_code']))!,\n            )[0];\n            const rejectMessage = new TextDecoder().decode(\n              lookupResultToBuffer(certificate.lookup([...path, 'reject_message']))!,\n            );\n            const error_code_buf = lookupResultToBuffer(\n              certificate.lookup([...path, 'error_code']),\n            );\n            const error_code = error_code_buf\n              ? new TextDecoder().decode(error_code_buf)\n              : undefined;\n            throw new UpdateCallRejectedError(\n              cid,\n              methodName,\n              requestId,\n              response,\n              rejectCode,\n              rejectMessage,\n              error_code,\n            );\n          }\n        }\n      } else if (response.body && 'reject_message' in response.body) {\n        // handle v2 response errors by throwing an UpdateCallRejectedError object\n        const { reject_code, reject_message, error_code } = response.body as v2ResponseBody;\n        throw new UpdateCallRejectedError(\n          cid,\n          methodName,\n          requestId,\n          response,\n          reject_code,\n          reject_message,\n          error_code,\n        );\n      }\n\n      // Fall back to polling if we receive an Accepted response code\n      if (response.status === 202) {\n        const pollStrategy = pollingStrategyFactory();\n        // Contains the certificate and the reply from the boundary node\n        const response = await pollForResponse(agent, ecid, requestId, pollStrategy, blsVerify);\n        certificate = response.certificate;\n        reply = response.reply;\n      }\n      const shouldIncludeHttpDetails = func.annotations.includes(ACTOR_METHOD_WITH_HTTP_DETAILS);\n      const shouldIncludeCertificate = func.annotations.includes(ACTOR_METHOD_WITH_CERTIFICATE);\n\n      const httpDetails = { ...response, requestDetails } as HttpDetailsResponse;\n      if (reply !== undefined) {\n        if (shouldIncludeHttpDetails && shouldIncludeCertificate) {\n          return {\n            httpDetails,\n            certificate,\n            result: decodeReturnValue(func.retTypes, reply),\n          };\n        } else if (shouldIncludeCertificate) {\n          return {\n            certificate,\n            result: decodeReturnValue(func.retTypes, reply),\n          };\n        } else if (shouldIncludeHttpDetails) {\n          return {\n            httpDetails,\n            result: decodeReturnValue(func.retTypes, reply),\n          };\n        }\n        return decodeReturnValue(func.retTypes, reply);\n      } else if (func.retTypes.length === 0) {\n        return shouldIncludeHttpDetails\n          ? {\n              httpDetails: response,\n              result: undefined,\n            }\n          : undefined;\n      } else {\n        throw new Error(`Call was returned undefined, but type [${func.retTypes.join(',')}].`);\n      }\n    };\n  }\n\n  const handler = (...args: unknown[]) => caller({}, ...args);\n  handler.withOptions =\n    (options: CallConfig) =>\n    (...args: unknown[]) =>\n      caller(options, ...args);\n  return handler as ActorMethod;\n}\n\nexport type ManagementCanisterRecord = _SERVICE;\n\n/**\n * Create a management canister actor\n * @param config - a CallConfig\n */\nexport function getManagementCanister(config: CallConfig): ActorSubclass<ManagementCanisterRecord> {\n  function transform(\n    methodName: string,\n    args: Record<string, unknown> & { canister_id: string; target_canister?: unknown }[],\n  ) {\n    if (config.effectiveCanisterId) {\n      return { effectiveCanisterId: Principal.from(config.effectiveCanisterId) };\n    }\n    const first = args[0];\n    let effectiveCanisterId = Principal.fromHex('');\n    if (first && typeof first === 'object' && first.target_canister && methodName === \"install_chunked_code\") {\n      effectiveCanisterId = Principal.from(first.target_canister);\n    }\n    if (first && typeof first === 'object' && first.canister_id) {\n      effectiveCanisterId = Principal.from(first.canister_id as unknown);\n    }\n    return { effectiveCanisterId };\n  }\n\n  return Actor.createActor<ManagementCanisterRecord>(managementCanisterIdl, {\n    ...config,\n    canisterId: Principal.fromHex(''),\n    ...{\n      callTransform: transform,\n      queryTransform: transform,\n    },\n  });\n}\n\nexport class AdvancedActor extends Actor {\n  constructor(metadata: ActorMetadata) {\n    super(metadata);\n  }\n}\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 4373, "column": 0}, "map": {"version":3,"file":"asset_idl.js","sourceRoot":"","sources":["file:///home/brimzy/.dev/studifi/node_modules/%40dfinity/agent/src/canisters/asset_idl.ts"],"sourcesContent":["/**\n * This file is generated from the candid for asset management.\n */\n// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n// @ts-ignore\nexport default ({ IDL }) => {\n  return IDL.Service({\n    retrieve: IDL.Func([IDL.Text], [IDL.Vec(IDL.Nat8)], ['query']),\n    store: IDL.Func([IDL.Text, IDL.Vec(IDL.Nat8)], [], []),\n  });\n};\n"],"names":[],"mappings":"AAAA;;GAEG,CACH,6DAA6D;AAC7D,aAAa;;;;uCACE,CAAC,EAAE,GAAG,EAAE,EAAE,EAAE;IACzB,OAAO,GAAG,CAAC,OAAO,CAAC;QACjB,QAAQ,EAAE,GAAG,CAAC,IAAI,CAAC;YAAC,GAAG,CAAC,IAAI;SAAC,EAAE;YAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC;SAAC,EAAE;YAAC,OAAO;SAAC,CAAC;QAC9D,KAAK,EAAE,GAAG,CAAC,IAAI,CAAC;YAAC,GAAG,CAAC,IAAI;YAAE,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC;SAAC,EAAE,EAAE,EAAE,EAAE,CAAC;KACvD,CAAC,CAAC;AACL,CAAC,CAAC","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 4402, "column": 0}, "map": {"version":3,"file":"asset.js","sourceRoot":"","sources":["file:///home/brimzy/.dev/studifi/node_modules/%40dfinity/agent/src/canisters/asset.ts"],"sourcesContent":["import { Actor, ActorConfig, ActorSubclass, CallConfig } from '../actor';\nimport assetCanister from './asset_idl';\n\nexport interface AssetCanisterRecord {\n  store(path: string, content: number[]): Promise<void>;\n  retrieve(path: string): Promise<number[]>;\n}\n\n/**\n * Create a management canister actor.\n * @param config\n */\nexport function createAssetCanisterActor(config: ActorConfig) {\n  return Actor.createActor<AssetCanisterRecord>(assetCanister, config);\n}\n"],"names":[],"mappings":";;;AAAA,OAAO,EAAE,KAAK,EAA0C,MAAM,UAAU,CAAC;AACzE,OAAO,aAAa,MAAM,aAAa,CAAC;;;AAWlC,SAAU,wBAAwB,CAAC,MAAmB;IAC1D,oKAAO,QAAK,CAAC,WAAW,+KAAsB,UAAa,EAAE,MAAM,CAAC,CAAC;AACvE,CAAC","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 4418, "column": 0}, "map": {"version":3,"file":"fetch_candid.js","sourceRoot":"","sources":["file:///home/brimzy/.dev/studifi/node_modules/%40dfinity/agent/src/fetch_candid.ts"],"sourcesContent":["import { Principal } from '@dfinity/principal';\nimport * as CanisterStatus from './canisterStatus/index';\nimport { IDL } from '@dfinity/candid';\nimport { HttpAgent } from './agent/http';\nimport { Actor, ActorSubclass } from './actor';\n\n/**\n * Retrieves the Candid interface for the specified canister.\n *\n * @param agent The agent to use for the request (usually an `HttpAgent`)\n * @param canisterId A string corresponding to the canister ID\n * @returns Candid source code\n */\nexport async function fetchCandid(canisterId: string, agent?: HttpAgent): Promise<string> {\n  if (!agent) {\n    // Create an anonymous `HttpAgent` (adapted from Candid UI)\n    agent = await HttpAgent.create();\n  }\n\n  // Attempt to use canister metadata\n  const status = await CanisterStatus.request({\n    agent,\n    canisterId: Principal.fromText(canisterId),\n    paths: ['candid'],\n  });\n  const candid = status.get('candid') as string | undefined;\n  if (candid) {\n    return candid;\n  }\n\n  // Use `__get_candid_interface_tmp_hack` for canisters without Candid metadata\n  const tmpHackInterface: IDL.InterfaceFactory = ({ IDL }) =>\n    IDL.Service({\n      __get_candid_interface_tmp_hack: IDL.Func([], [IDL.Text], ['query']),\n    });\n  const actor: ActorSubclass = Actor.createActor(tmpHackInterface, { agent, canisterId });\n  return (await actor.__get_candid_interface_tmp_hack()) as string;\n}\n"],"names":[],"mappings":";;;AAAA,OAAO,EAAE,SAAS,EAAE,MAAM,oBAAoB,CAAC;AAC/C,OAAO,KAAK,cAAc,MAAM,wBAAwB,CAAC;;AAEzD,OAAO,EAAE,SAAS,EAAE,MAAM,cAAc,CAAC;AACzC,OAAO,EAAE,KAAK,EAAiB,MAAM,SAAS,CAAC;;;;;AASxC,KAAK,UAAU,WAAW,CAAC,UAAkB,EAAE,KAAiB;IACrE,IAAI,CAAC,KAAK,EAAE;QACV,2DAA2D;QAC3D,KAAK,GAAG,oMAAM,YAAS,CAAC,MAAM,EAAE,CAAC;KAClC;IAED,mCAAmC;IACnC,MAAM,MAAM,GAAG,yLAAM,UAAe,AAAO,EAAC,EAAT,CAAC;QAClC,KAAK;QACL,UAAU,mKAAE,YAAS,CAAC,QAAQ,CAAC,UAAU,CAAC;QAC1C,KAAK,EAAE;YAAC,QAAQ;SAAC;KAClB,CAAC,CAAC;IACH,MAAM,MAAM,GAAG,MAAM,CAAC,GAAG,CAAC,QAAQ,CAAuB,CAAC;IAC1D,IAAI,MAAM,EAAE;QACV,OAAO,MAAM,CAAC;KACf;IAED,8EAA8E;IAC9E,MAAM,gBAAgB,GAAyB,CAAC,EAAE,GAAG,EAAE,EAAE,CACvD,CADyD,EACtD,CAAC,OAAO,CAAC;YACV,+BAA+B,EAAE,GAAG,CAAC,IAAI,CAAC,EAAE,EAAE;gBAAC,GAAG,CAAC,IAAI;aAAC,EAAE;gBAAC,OAAO;aAAC,CAAC;SACrE,CAAC,CAAC;IACL,MAAM,KAAK,gKAAkB,QAAK,CAAC,WAAW,CAAC,gBAAgB,EAAE;QAAE,KAAK;QAAE,UAAU;IAAA,CAAE,CAAC,CAAC;IACxF,OAAO,AAAC,MAAM,KAAK,CAAC,+BAA+B,EAAE,CAAW,CAAC;AACnE,CAAC","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 4467, "column": 0}, "map": {"version":3,"file":"index.js","sourceRoot":"","sources":["file:///home/brimzy/.dev/studifi/node_modules/%40dfinity/agent/src/index.ts"],"sourcesContent":["import { ActorSubclass } from './actor';\n\nexport * from './actor';\nexport * from './agent';\nexport * from './agent/http/transforms';\nexport * from './agent/http/types';\nexport * from './auth';\nexport * from './canisters/asset';\nexport * from './certificate';\nexport * from './der';\nexport * from './fetch_candid';\nexport * from './observable';\nexport * from './public_key';\nexport * from './request_id';\nexport * from './utils/bls';\nexport * from './utils/buffer';\nexport * from './utils/random';\nexport * as polling from './polling';\nimport * as CanisterStatus from './canisterStatus';\nexport * as CanisterStatus from './canisterStatus';\n/**\n * The CanisterStatus utility is used to request structured data directly from the IC public API. This data can be accessed using agent.readState, but CanisterStatus provides a helpful abstraction with some known paths.\n *\n * You can request a canisters Controllers, ModuleHash, Candid interface, Subnet, or Time, or provide a custom path {@link CanisterStatus.CustomPath} and pass arbitrary buffers for valid paths identified in https://internetcomputer.org/docs/current/references/ic-interface-spec.\n *\n * The primary method for this namespace is {@link CanisterStatus.request}\n */\n\nimport { Agent, HttpAgent } from './agent';\nimport { IDL } from '@dfinity/candid';\n\nexport * as Cbor from './cbor';\nexport * from './polling';\n\nexport interface GlobalInternetComputer {\n  ic: {\n    agent: Agent;\n    HttpAgent: typeof HttpAgent;\n    IDL: typeof IDL;\n    /**\n     * Simple advertisement of features in whoever is managing this `globalThis.ic`.\n     * Use Case\n     * - Scripts that know they need an ic feature can detect using this and, if not present\n     *   (e.g. old bootstrap version), they can dynamically include their own and continue\n     *   operating (e.g. polyfill).\n     *   This is useful when adding features to bootstrap. You can still deploy your canister to\n     *   an ic with old bootstrap, then just dynamically reload your own new-version bootstrap if\n     *   needed.\n     */\n    features?: {\n      /** This is falsy if authn isn't supported at all */\n      authentication?: boolean;\n    };\n    /**\n     * The Actor for the canister being used for the frontend. Normally should correspond to the\n     * canister represented by the canister id in the URL.\n     *\n     * It does not have any functions configured.\n     *\n     * If a canister ID could not be found, no actor were created and this is undefined.\n     */\n    canister: ActorSubclass | undefined;\n  };\n}\n"],"names":[],"mappings":"","ignoreList":[0],"debugId":null}}]
}